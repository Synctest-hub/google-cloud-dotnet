// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Tools.DocUploader {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90bxITeW9zaGkuZG9jcy5tZXRhZGF0YRofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byKZAgoITWV0YWRhdGESLwoLdXBk",
            "YXRlX3RpbWUYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEgwK",
            "BG5hbWUYAiABKAkSDwoHdmVyc2lvbhgDIAEoCRIQCghsYW5ndWFnZRgEIAEo",
            "CRIZChFkaXN0cmlidXRpb25fbmFtZRgFIAEoCRIUCgxwcm9kdWN0X3BhZ2UY",
            "BiABKAkSGQoRZ2l0aHViX3JlcG9zaXRvcnkYByABKAkSFQoNaXNzdWVfdHJh",
            "Y2tlchgIIAEoCRIMCgRzdGVtGAkgASgJEhQKDHNlcnZpbmdfcGF0aBgKIAEo",
            "CRINCgV4cmVmcxgLIAMoCRIVCg14cmVmX3NlcnZpY2VzGAwgAygJYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Tools.DocUploader.Metadata), global::Google.Cloud.Tools.DocUploader.Metadata.Parser, new[]{ "UpdateTime", "Name", "Version", "Language", "DistributionName", "ProductPage", "GithubRepository", "IssueTracker", "Stem", "ServingPath", "Xrefs", "XrefServices" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Metadata : pb::IMessage<Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Tools.DocUploader.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata(Metadata other) : this() {
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      name_ = other.name_;
      version_ = other.version_;
      language_ = other.language_;
      distributionName_ = other.distributionName_;
      productPage_ = other.productPage_;
      githubRepository_ = other.githubRepository_;
      issueTracker_ = other.issueTracker_;
      stem_ = other.stem_;
      servingPath_ = other.servingPath_;
      xrefs_ = other.xrefs_.Clone();
      xrefServices_ = other.xrefServices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// When the documentation was built.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The product/API name. This *should* match the DNS name of the API
    /// service. For example, Python's Cloud Storage client would list "storage"
    /// because it talks to storage.googleapis.com. For non-API libraries, such
    /// as auth, consult googleapis-dot-dev-team@ for guidance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private string version_ = "";
    /// <summary>
    /// The package version, for example 1.2.3, or 0.1.2-beta1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 4;
    private string language_ = "";
    /// <summary>
    /// The (programming) language. While this isn't enforced with an enum, you
    /// should use one of the following strings:  python, nodejs, ruby, dotnet,
    /// java, go, php, cpp. In some cases you might need to use something else,
    /// consult googleapis-dot-dev-team@ for guidance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "distribution_name" field.</summary>
    public const int DistributionNameFieldNumber = 5;
    private string distributionName_ = "";
    /// <summary>
    /// The language-idiomatic package/distribution name, for example:
    /// Python: google-cloud-storage
    /// Node.js: @google/cloud-storage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DistributionName {
      get { return distributionName_; }
      set {
        distributionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "product_page" field.</summary>
    public const int ProductPageFieldNumber = 6;
    private string productPage_ = "";
    /// <summary>
    /// The product page. For example https://cloud.google.com/storage/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ProductPage {
      get { return productPage_; }
      set {
        productPage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "github_repository" field.</summary>
    public const int GithubRepositoryFieldNumber = 7;
    private string githubRepository_ = "";
    /// <summary>
    /// The github repository. For example, Node's Cloud Storage client would be https://github.com/googleapis/nodejs-storage
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GithubRepository {
      get { return githubRepository_; }
      set {
        githubRepository_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issue_tracker" field.</summary>
    public const int IssueTrackerFieldNumber = 8;
    private string issueTracker_ = "";
    /// <summary>
    /// The issue tracker. For example the Node Storage client's issue tracker is https://github.com/googleapis/nodejs-storage/issues
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IssueTracker {
      get { return issueTracker_; }
      set {
        issueTracker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stem" field.</summary>
    public const int StemFieldNumber = 9;
    private string stem_ = "";
    /// <summary>
    /// The published stem for this docset. If unspecified, it will be set to
    /// `{language}/{name}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Stem {
      get { return stem_; }
      set {
        stem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serving_path" field.</summary>
    public const int ServingPathFieldNumber = 10;
    private string servingPath_ = "";
    /// <summary>
    /// The serving path for this docset. If unspecified, it will be set to
    /// `{stem}/{version}`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServingPath {
      get { return servingPath_; }
      set {
        servingPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "xrefs" field.</summary>
    public const int XrefsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_xrefs_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> xrefs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The DocFX xref URLs required for these docs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Xrefs {
      get { return xrefs_; }
    }

    /// <summary>Field number for the "xref_services" field.</summary>
    public const int XrefServicesFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_xrefServices_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> xrefServices_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The DocFX xref service URLs required for these docs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> XrefServices {
      get { return xrefServices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Language != other.Language) return false;
      if (DistributionName != other.DistributionName) return false;
      if (ProductPage != other.ProductPage) return false;
      if (GithubRepository != other.GithubRepository) return false;
      if (IssueTracker != other.IssueTracker) return false;
      if (Stem != other.Stem) return false;
      if (ServingPath != other.ServingPath) return false;
      if(!xrefs_.Equals(other.xrefs_)) return false;
      if(!xrefServices_.Equals(other.xrefServices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (DistributionName.Length != 0) hash ^= DistributionName.GetHashCode();
      if (ProductPage.Length != 0) hash ^= ProductPage.GetHashCode();
      if (GithubRepository.Length != 0) hash ^= GithubRepository.GetHashCode();
      if (IssueTracker.Length != 0) hash ^= IssueTracker.GetHashCode();
      if (Stem.Length != 0) hash ^= Stem.GetHashCode();
      if (ServingPath.Length != 0) hash ^= ServingPath.GetHashCode();
      hash ^= xrefs_.GetHashCode();
      hash ^= xrefServices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (updateTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateTime);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (DistributionName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DistributionName);
      }
      if (ProductPage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProductPage);
      }
      if (GithubRepository.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GithubRepository);
      }
      if (IssueTracker.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IssueTracker);
      }
      if (Stem.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Stem);
      }
      if (ServingPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ServingPath);
      }
      xrefs_.WriteTo(output, _repeated_xrefs_codec);
      xrefServices_.WriteTo(output, _repeated_xrefServices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (updateTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UpdateTime);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Version);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (DistributionName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DistributionName);
      }
      if (ProductPage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ProductPage);
      }
      if (GithubRepository.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GithubRepository);
      }
      if (IssueTracker.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(IssueTracker);
      }
      if (Stem.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Stem);
      }
      if (ServingPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ServingPath);
      }
      xrefs_.WriteTo(ref output, _repeated_xrefs_codec);
      xrefServices_.WriteTo(ref output, _repeated_xrefServices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (DistributionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DistributionName);
      }
      if (ProductPage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductPage);
      }
      if (GithubRepository.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GithubRepository);
      }
      if (IssueTracker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IssueTracker);
      }
      if (Stem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stem);
      }
      if (ServingPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServingPath);
      }
      size += xrefs_.CalculateSize(_repeated_xrefs_codec);
      size += xrefServices_.CalculateSize(_repeated_xrefServices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.DistributionName.Length != 0) {
        DistributionName = other.DistributionName;
      }
      if (other.ProductPage.Length != 0) {
        ProductPage = other.ProductPage;
      }
      if (other.GithubRepository.Length != 0) {
        GithubRepository = other.GithubRepository;
      }
      if (other.IssueTracker.Length != 0) {
        IssueTracker = other.IssueTracker;
      }
      if (other.Stem.Length != 0) {
        Stem = other.Stem;
      }
      if (other.ServingPath.Length != 0) {
        ServingPath = other.ServingPath;
      }
      xrefs_.Add(other.xrefs_);
      xrefServices_.Add(other.xrefServices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 42: {
            DistributionName = input.ReadString();
            break;
          }
          case 50: {
            ProductPage = input.ReadString();
            break;
          }
          case 58: {
            GithubRepository = input.ReadString();
            break;
          }
          case 66: {
            IssueTracker = input.ReadString();
            break;
          }
          case 74: {
            Stem = input.ReadString();
            break;
          }
          case 82: {
            ServingPath = input.ReadString();
            break;
          }
          case 90: {
            xrefs_.AddEntriesFrom(input, _repeated_xrefs_codec);
            break;
          }
          case 98: {
            xrefServices_.AddEntriesFrom(input, _repeated_xrefServices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Version = input.ReadString();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 42: {
            DistributionName = input.ReadString();
            break;
          }
          case 50: {
            ProductPage = input.ReadString();
            break;
          }
          case 58: {
            GithubRepository = input.ReadString();
            break;
          }
          case 66: {
            IssueTracker = input.ReadString();
            break;
          }
          case 74: {
            Stem = input.ReadString();
            break;
          }
          case 82: {
            ServingPath = input.ReadString();
            break;
          }
          case 90: {
            xrefs_.AddEntriesFrom(ref input, _repeated_xrefs_codec);
            break;
          }
          case 98: {
            xrefServices_.AddEntriesFrom(ref input, _repeated_xrefServices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
