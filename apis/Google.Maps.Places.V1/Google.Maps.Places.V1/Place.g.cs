// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/maps/places/v1/place.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Maps.Places.V1 {

  /// <summary>Holder for reflection information generated from google/maps/places/v1/place.proto</summary>
  public static partial class PlaceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/maps/places/v1/place.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlaceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFnb29nbGUvbWFwcy9wbGFjZXMvdjEvcGxhY2UucHJvdG8SFWdvb2dsZS5t",
            "YXBzLnBsYWNlcy52MRofZ29vZ2xlL2FwaS9maWVsZF9iZWhhdmlvci5wcm90",
            "bxoeZ29vZ2xlL2dlby90eXBlL3ZpZXdwb3J0LnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhZnb29nbGUvdHlwZS9kYXRlLnByb3Rv",
            "Ghhnb29nbGUvdHlwZS9sYXRsbmcucHJvdG8aIGdvb2dsZS90eXBlL2xvY2Fs",
            "aXplZF90ZXh0LnByb3RvIrQbCgVQbGFjZRIPCgJpZBgCIAEoCUID4EECEjAK",
            "DGRpc3BsYXlfbmFtZRgfIAEoCzIaLmdvb2dsZS50eXBlLkxvY2FsaXplZFRl",
            "eHQSDQoFdHlwZXMYBSADKAkSHQoVbmF0aW9uYWxfcGhvbmVfbnVtYmVyGAcg",
            "ASgJEiIKGmludGVybmF0aW9uYWxfcGhvbmVfbnVtYmVyGAggASgJEhkKEWZv",
            "cm1hdHRlZF9hZGRyZXNzGAkgASgJEkkKEmFkZHJlc3NfY29tcG9uZW50cxgK",
            "IAMoCzItLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5BZGRyZXNzQ29t",
            "cG9uZW50EjgKCXBsdXNfY29kZRgLIAEoCzIlLmdvb2dsZS5tYXBzLnBsYWNl",
            "cy52MS5QbGFjZS5QbHVzQ29kZRIlCghsb2NhdGlvbhgMIAEoCzITLmdvb2ds",
            "ZS50eXBlLkxhdExuZxIrCgh2aWV3cG9ydBgNIAEoCzIZLmdvb2dsZS5nZW8u",
            "dHlwZS5WaWV3cG9ydBIOCgZyYXRpbmcYDiABKAESFwoPZ29vZ2xlX21hcHNf",
            "dXJpGA8gASgJEhMKC3dlYnNpdGVfdXJpGBAgASgJEjQKB3Jldmlld3MYFCAD",
            "KAsyIy5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuUmV2aWV3EkAKDW9w",
            "ZW5pbmdfaG91cnMYFSABKAsyKS5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxh",
            "Y2UuT3BlbmluZ0hvdXJzEhoKEnV0Y19vZmZzZXRfbWludXRlcxgWIAEoBRIa",
            "ChJhZHJfZm9ybWF0X2FkZHJlc3MYGCABKAkSRAoPYnVzaW5lc3Nfc3RhdHVz",
            "GBkgASgOMisuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLkJ1c2luZXNz",
            "U3RhdHVzEjYKC3ByaWNlX2xldmVsGBogASgOMiEuZ29vZ2xlLm1hcHMucGxh",
            "Y2VzLnYxLlByaWNlTGV2ZWwSPgoMYXR0cmlidXRpb25zGBsgAygLMiguZ29v",
            "Z2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLkF0dHJpYnV0aW9uEhkKEXVzZXJf",
            "cmF0aW5nX2NvdW50GBwgASgFEhoKEmljb25fbWFza19iYXNlX3VyaRgdIAEo",
            "CRIdChVpY29uX2JhY2tncm91bmRfY29sb3IYHiABKAkSFAoHdGFrZW91dBgh",
            "IAEoCEgAiAEBEhUKCGRlbGl2ZXJ5GCIgASgISAGIAQESFAoHZGluZV9pbhgj",
            "IAEoCEgCiAEBEhwKD2N1cmJzaWRlX3BpY2t1cBgkIAEoCEgDiAEBEisKHndo",
            "ZWVsY2hhaXJfYWNjZXNzaWJsZV9lbnRyYW5jZRglIAEoCEgEiAEBEhcKCnJl",
            "c2VydmFibGUYJiABKAhIBYgBARIdChBzZXJ2ZXNfYnJlYWtmYXN0GCcgASgI",
            "SAaIAQESGQoMc2VydmVzX2x1bmNoGCggASgISAeIAQESGgoNc2VydmVzX2Rp",
            "bm5lchgpIAEoCEgIiAEBEhgKC3NlcnZlc19iZWVyGCogASgISAmIAQESGAoL",
            "c2VydmVzX3dpbmUYKyABKAhICogBARIaCg1zZXJ2ZXNfYnJ1bmNoGCwgASgI",
            "SAuIAQESIwoWc2VydmVzX3ZlZ2V0YXJpYW5fZm9vZBgtIAEoCEgMiAEBEkgK",
            "FWN1cnJlbnRfb3BlbmluZ19ob3VycxguIAEoCzIpLmdvb2dsZS5tYXBzLnBs",
            "YWNlcy52MS5QbGFjZS5PcGVuaW5nSG91cnMSUgofY3VycmVudF9zZWNvbmRh",
            "cnlfb3BlbmluZ19ob3VycxgvIAMoCzIpLmdvb2dsZS5tYXBzLnBsYWNlcy52",
            "MS5QbGFjZS5PcGVuaW5nSG91cnMSSgoXc2Vjb25kYXJ5X29wZW5pbmdfaG91",
            "cnMYMSADKAsyKS5nb29nbGUubWFwcy5wbGFjZXMudjEuUGxhY2UuT3Blbmlu",
            "Z0hvdXJzEkgKEWVkaXRvcmlhbF9zdW1tYXJ5GDAgASgLMi0uZ29vZ2xlLm1h",
            "cHMucGxhY2VzLnYxLlBsYWNlLkVkaXRvcmlhbFN1bW1hcnkaXwoQQWRkcmVz",
            "c0NvbXBvbmVudBIRCglsb25nX3RleHQYASABKAkSEgoKc2hvcnRfdGV4dBgC",
            "IAEoCRINCgV0eXBlcxgDIAMoCRIVCg1sYW5ndWFnZV9jb2RlGAQgASgJGjYK",
            "CFBsdXNDb2RlEhMKC2dsb2JhbF9jb2RlGAEgASgJEhUKDWNvbXBvdW5kX2Nv",
            "ZGUYAiABKAkakQIKBlJldmlldxIwCgxwdWJsaXNoX3RpbWUYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEikKIXJlbGF0aXZlX3B1Ymxpc2hf",
            "dGltZV9kZXNjcmlwdGlvbhgCIAEoCRIoCgR0ZXh0GAkgASgLMhouZ29vZ2xl",
            "LnR5cGUuTG9jYWxpemVkVGV4dBIOCgZhdXRob3IYBCABKAkSEgoKYXV0aG9y",
            "X3VyaRgFIAEoCRIYChBhdXRob3JfcGhvdG9fdXJpGAYgASgJEg4KBnJhdGlu",
            "ZxgHIAEoARIeChZvcmlnaW5hbF9sYW5ndWFnZV9jb2RlGAogASgJEhIKCnRy",
            "YW5zbGF0ZWQYCyABKAga7wcKDE9wZW5pbmdIb3VycxIQCghvcGVuX25vdxgB",
            "IAEoCBJNCgdwZXJpb2RzGAIgAygLMjwuZ29vZ2xlLm1hcHMucGxhY2VzLnYx",
            "LlBsYWNlLk9wZW5pbmdIb3Vycy5PcGVuaW5nSG91cnNQZXJpb2QSHAoUd2Vl",
            "a2RheV9kZXNjcmlwdGlvbnMYAyADKAkSWAoTc2Vjb25kYXJ5X2hvdXJfdHlw",
            "ZRgEIAEoDjI7Lmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5PcGVuaW5n",
            "SG91cnMuU2Vjb25kYXJ5SG91clR5cGUSSgoMc3BlY2lhbF9kYXlzGAUgAygL",
            "MjQuZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLk9wZW5pbmdIb3Vycy5T",
            "cGVjaWFsRGF5Go4DChJPcGVuaW5nSG91cnNQZXJpb2QSXAoEb3BlbhgBIAEo",
            "CzJOLmdvb2dsZS5tYXBzLnBsYWNlcy52MS5QbGFjZS5PcGVuaW5nSG91cnMu",
            "T3BlbmluZ0hvdXJzUGVyaW9kLk9wZW5pbmdIb3Vyc1BvaW50El0KBWNsb3Nl",
            "GAIgASgLMk4uZ29vZ2xlLm1hcHMucGxhY2VzLnYxLlBsYWNlLk9wZW5pbmdI",
            "b3Vycy5PcGVuaW5nSG91cnNQZXJpb2QuT3BlbmluZ0hvdXJzUG9pbnQaugEK",
            "EU9wZW5pbmdIb3Vyc1BvaW50EhAKA2RheRgBIAEoBUgAiAEBEhEKBGhvdXIY",
            "AiABKAVIAYgBARITCgZtaW51dGUYAyABKAVIAogBARIbCg9kYXRlX2RlcHJl",
            "Y2F0ZWQYBCABKAlCAhgBEh8KBGRhdGUYBiABKAsyES5nb29nbGUudHlwZS5E",
            "YXRlEhEKCXRydW5jYXRlZBgFIAEoCEIGCgRfZGF5QgcKBV9ob3VyQgkKB19t",
            "aW51dGUaLQoKU3BlY2lhbERheRIfCgRkYXRlGAEgASgLMhEuZ29vZ2xlLnR5",
            "cGUuRGF0ZSL5AQoRU2Vjb25kYXJ5SG91clR5cGUSIwofU0VDT05EQVJZX0hP",
            "VVJfVFlQRV9VTlNQRUNJRklFRBAAEhEKDURSSVZFX1RIUk9VR0gQARIOCgpI",
            "QVBQWV9IT1VSEAISDAoIREVMSVZFUlkQAxILCgdUQUtFT1VUEAQSCwoHS0lU",
            "Q0hFThAFEg0KCUJSRUFLRkFTVBAGEgkKBUxVTkNIEAcSCgoGRElOTkVSEAgS",
            "CgoGQlJVTkNIEAkSCgoGUElDS1VQEAoSCgoGQUNDRVNTEAsSEAoMU0VOSU9S",
            "X0hPVVJTEAwSGAoUT05MSU5FX1NFUlZJQ0VfSE9VUlMQDRo1CgtBdHRyaWJ1",
            "dGlvbhIQCghwcm92aWRlchgBIAEoCRIUCgxwcm92aWRlcl91cmkYAiABKAka",
            "QAoQRWRpdG9yaWFsU3VtbWFyeRIsCghvdmVydmlldxgBIAEoCzIaLmdvb2ds",
            "ZS50eXBlLkxvY2FsaXplZFRleHQicgoOQnVzaW5lc3NTdGF0dXMSHwobQlVT",
            "SU5FU1NfU1RBVFVTX1VOU1BFQ0lGSUVEEAASDwoLT1BFUkFUSU9OQUwQARIW",
            "ChJDTE9TRURfVEVNUE9SQVJJTFkQAhIWChJDTE9TRURfUEVSTUFORU5UTFkQ",
            "A0IKCghfdGFrZW91dEILCglfZGVsaXZlcnlCCgoIX2RpbmVfaW5CEgoQX2N1",
            "cmJzaWRlX3BpY2t1cEIhCh9fd2hlZWxjaGFpcl9hY2Nlc3NpYmxlX2VudHJh",
            "bmNlQg0KC19yZXNlcnZhYmxlQhMKEV9zZXJ2ZXNfYnJlYWtmYXN0Qg8KDV9z",
            "ZXJ2ZXNfbHVuY2hCEAoOX3NlcnZlc19kaW5uZXJCDgoMX3NlcnZlc19iZWVy",
            "Qg4KDF9zZXJ2ZXNfd2luZUIQCg5fc2VydmVzX2JydW5jaEIZChdfc2VydmVz",
            "X3ZlZ2V0YXJpYW5fZm9vZCp1CgpQcmljZUxldmVsEhsKF1BSSUNFX0xFVkVM",
            "X1VOU1BFQ0lGSUVEEAASCAoERlJFRRABEg8KC0lORVhQRU5TSVZFEAISDAoI",
            "TU9ERVJBVEUQAxINCglFWFBFTlNJVkUQBBISCg5WRVJZX0VYUEVOU0lWRRAF",
            "Qp4BChljb20uZ29vZ2xlLm1hcHMucGxhY2VzLnYxQgpQbGFjZVByb3RvUAFa",
            "N2Nsb3VkLmdvb2dsZS5jb20vZ28vbWFwcy9wbGFjZXMvYXBpdjEvcGxhY2Vz",
            "cGI7cGxhY2VzcGL4AQGiAgZHTVBTVjGqAhVHb29nbGUuTWFwcy5QbGFjZXMu",
            "VjHKAhVHb29nbGVcTWFwc1xQbGFjZXNcVjFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Geo.Type.ViewportReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Type.DateReflection.Descriptor, global::Google.Type.LatlngReflection.Descriptor, global::Google.Type.LocalizedTextReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Maps.Places.V1.PriceLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place), global::Google.Maps.Places.V1.Place.Parser, new[]{ "Id", "DisplayName", "Types_", "NationalPhoneNumber", "InternationalPhoneNumber", "FormattedAddress", "AddressComponents", "PlusCode", "Location", "Viewport", "Rating", "GoogleMapsUri", "WebsiteUri", "Reviews", "OpeningHours", "UtcOffsetMinutes", "AdrFormatAddress", "BusinessStatus", "PriceLevel", "Attributions", "UserRatingCount", "IconMaskBaseUri", "IconBackgroundColor", "Takeout", "Delivery", "DineIn", "CurbsidePickup", "WheelchairAccessibleEntrance", "Reservable", "ServesBreakfast", "ServesLunch", "ServesDinner", "ServesBeer", "ServesWine", "ServesBrunch", "ServesVegetarianFood", "CurrentOpeningHours", "CurrentSecondaryOpeningHours", "SecondaryOpeningHours", "EditorialSummary" }, new[]{ "Takeout", "Delivery", "DineIn", "CurbsidePickup", "WheelchairAccessibleEntrance", "Reservable", "ServesBreakfast", "ServesLunch", "ServesDinner", "ServesBeer", "ServesWine", "ServesBrunch", "ServesVegetarianFood" }, new[]{ typeof(global::Google.Maps.Places.V1.Place.Types.BusinessStatus) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.AddressComponent), global::Google.Maps.Places.V1.Place.Types.AddressComponent.Parser, new[]{ "LongText", "ShortText", "Types_", "LanguageCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.PlusCode), global::Google.Maps.Places.V1.Place.Types.PlusCode.Parser, new[]{ "GlobalCode", "CompoundCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.Review), global::Google.Maps.Places.V1.Place.Types.Review.Parser, new[]{ "PublishTime", "RelativePublishTimeDescription", "Text", "Author", "AuthorUri", "AuthorPhotoUri", "Rating", "OriginalLanguageCode", "Translated" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser, new[]{ "OpenNow", "Periods", "WeekdayDescriptions", "SecondaryHourType", "SpecialDays" }, null, new[]{ typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Parser, new[]{ "Open", "Close" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint.Parser, new[]{ "Day", "Hour", "Minute", "DateDeprecated", "Date", "Truncated" }, new[]{ "Day", "Hour", "Minute" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay), global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay.Parser, new[]{ "Date" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.Attribution), global::Google.Maps.Places.V1.Place.Types.Attribution.Parser, new[]{ "Provider", "ProviderUri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Maps.Places.V1.Place.Types.EditorialSummary), global::Google.Maps.Places.V1.Place.Types.EditorialSummary.Parser, new[]{ "Overview" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Price level of the place.
  /// </summary>
  public enum PriceLevel {
    /// <summary>
    /// Place price level is unspecified or unknown.
    /// </summary>
    [pbr::OriginalName("PRICE_LEVEL_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("FREE")] Free = 1,
    /// <summary>
    /// Place provides inexpensive services.
    /// </summary>
    [pbr::OriginalName("INEXPENSIVE")] Inexpensive = 2,
    /// <summary>
    /// Place provides moderately priced services.
    /// </summary>
    [pbr::OriginalName("MODERATE")] Moderate = 3,
    /// <summary>
    /// Place provides expensive services.
    /// </summary>
    [pbr::OriginalName("EXPENSIVE")] Expensive = 4,
    /// <summary>
    /// Place provides very expensive services.
    /// </summary>
    [pbr::OriginalName("VERY_EXPENSIVE")] VeryExpensive = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// All the information representing a Place.
  /// </summary>
  public sealed partial class Place : pb::IMessage<Place>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Place> _parser = new pb::MessageParser<Place>(() => new Place());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Place> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Maps.Places.V1.PlaceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place(Place other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      displayName_ = other.displayName_ != null ? other.displayName_.Clone() : null;
      types_ = other.types_.Clone();
      nationalPhoneNumber_ = other.nationalPhoneNumber_;
      internationalPhoneNumber_ = other.internationalPhoneNumber_;
      formattedAddress_ = other.formattedAddress_;
      addressComponents_ = other.addressComponents_.Clone();
      plusCode_ = other.plusCode_ != null ? other.plusCode_.Clone() : null;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      viewport_ = other.viewport_ != null ? other.viewport_.Clone() : null;
      rating_ = other.rating_;
      googleMapsUri_ = other.googleMapsUri_;
      websiteUri_ = other.websiteUri_;
      reviews_ = other.reviews_.Clone();
      openingHours_ = other.openingHours_ != null ? other.openingHours_.Clone() : null;
      utcOffsetMinutes_ = other.utcOffsetMinutes_;
      adrFormatAddress_ = other.adrFormatAddress_;
      businessStatus_ = other.businessStatus_;
      priceLevel_ = other.priceLevel_;
      attributions_ = other.attributions_.Clone();
      userRatingCount_ = other.userRatingCount_;
      iconMaskBaseUri_ = other.iconMaskBaseUri_;
      iconBackgroundColor_ = other.iconBackgroundColor_;
      takeout_ = other.takeout_;
      delivery_ = other.delivery_;
      dineIn_ = other.dineIn_;
      curbsidePickup_ = other.curbsidePickup_;
      wheelchairAccessibleEntrance_ = other.wheelchairAccessibleEntrance_;
      reservable_ = other.reservable_;
      servesBreakfast_ = other.servesBreakfast_;
      servesLunch_ = other.servesLunch_;
      servesDinner_ = other.servesDinner_;
      servesBeer_ = other.servesBeer_;
      servesWine_ = other.servesWine_;
      servesBrunch_ = other.servesBrunch_;
      servesVegetarianFood_ = other.servesVegetarianFood_;
      currentOpeningHours_ = other.currentOpeningHours_ != null ? other.currentOpeningHours_.Clone() : null;
      currentSecondaryOpeningHours_ = other.currentSecondaryOpeningHours_.Clone();
      secondaryOpeningHours_ = other.secondaryOpeningHours_.Clone();
      editorialSummary_ = other.editorialSummary_ != null ? other.editorialSummary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Place Clone() {
      return new Place(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Required. The unique identifier of a place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 31;
    private global::Google.Type.LocalizedText displayName_;
    /// <summary>
    /// The localized name of the place, suitable as a short human-readable
    /// description. For example, "Google Sydney", "Starbucks", "Pyrmont", etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LocalizedText DisplayName {
      get { return displayName_; }
      set {
        displayName_ = value;
      }
    }

    /// <summary>Field number for the "types" field.</summary>
    public const int Types_FieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_types_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> types_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A set of type tags for this result. For example, "political" and
    /// "locality".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Types_ {
      get { return types_; }
    }

    /// <summary>Field number for the "national_phone_number" field.</summary>
    public const int NationalPhoneNumberFieldNumber = 7;
    private string nationalPhoneNumber_ = "";
    /// <summary>
    /// A human-readable phone number for the place, in national format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NationalPhoneNumber {
      get { return nationalPhoneNumber_; }
      set {
        nationalPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "international_phone_number" field.</summary>
    public const int InternationalPhoneNumberFieldNumber = 8;
    private string internationalPhoneNumber_ = "";
    /// <summary>
    /// A human-readable phone number for the place, in international format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InternationalPhoneNumber {
      get { return internationalPhoneNumber_; }
      set {
        internationalPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "formatted_address" field.</summary>
    public const int FormattedAddressFieldNumber = 9;
    private string formattedAddress_ = "";
    /// <summary>
    /// A full, human-readable address for this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FormattedAddress {
      get { return formattedAddress_; }
      set {
        formattedAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address_components" field.</summary>
    public const int AddressComponentsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.AddressComponent> _repeated_addressComponents_codec
        = pb::FieldCodec.ForMessage(82, global::Google.Maps.Places.V1.Place.Types.AddressComponent.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent> addressComponents_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent>();
    /// <summary>
    /// Repeated components for each locality level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.AddressComponent> AddressComponents {
      get { return addressComponents_; }
    }

    /// <summary>Field number for the "plus_code" field.</summary>
    public const int PlusCodeFieldNumber = 11;
    private global::Google.Maps.Places.V1.Place.Types.PlusCode plusCode_;
    /// <summary>
    /// Plus code of the place location lat/long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.PlusCode PlusCode {
      get { return plusCode_; }
      set {
        plusCode_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 12;
    private global::Google.Type.LatLng location_;
    /// <summary>
    /// The position of this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Type.LatLng Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "viewport" field.</summary>
    public const int ViewportFieldNumber = 13;
    private global::Google.Geo.Type.Viewport viewport_;
    /// <summary>
    /// A viewport suitable for displaying the place on an average-sized map.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Geo.Type.Viewport Viewport {
      get { return viewport_; }
      set {
        viewport_ = value;
      }
    }

    /// <summary>Field number for the "rating" field.</summary>
    public const int RatingFieldNumber = 14;
    private double rating_;
    /// <summary>
    /// A rating between 1.0 and 5.0, based on user reviews of this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Rating {
      get { return rating_; }
      set {
        rating_ = value;
      }
    }

    /// <summary>Field number for the "google_maps_uri" field.</summary>
    public const int GoogleMapsUriFieldNumber = 15;
    private string googleMapsUri_ = "";
    /// <summary>
    /// A URL providing more information about this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GoogleMapsUri {
      get { return googleMapsUri_; }
      set {
        googleMapsUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "website_uri" field.</summary>
    public const int WebsiteUriFieldNumber = 16;
    private string websiteUri_ = "";
    /// <summary>
    /// The authoritative website for this place, e.g. a business' homepage.
    /// Note that for places that are part of a chain (e.g. an IKEA store), this
    /// will usually be the website for the individual store, not the overall
    /// chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WebsiteUri {
      get { return websiteUri_; }
      set {
        websiteUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reviews" field.</summary>
    public const int ReviewsFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.Review> _repeated_reviews_codec
        = pb::FieldCodec.ForMessage(162, global::Google.Maps.Places.V1.Place.Types.Review.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Review> reviews_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Review>();
    /// <summary>
    /// List of reviews about this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Review> Reviews {
      get { return reviews_; }
    }

    /// <summary>Field number for the "opening_hours" field.</summary>
    public const int OpeningHoursFieldNumber = 21;
    private global::Google.Maps.Places.V1.Place.Types.OpeningHours openingHours_;
    /// <summary>
    /// The regular hours of operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.OpeningHours OpeningHours {
      get { return openingHours_; }
      set {
        openingHours_ = value;
      }
    }

    /// <summary>Field number for the "utc_offset_minutes" field.</summary>
    public const int UtcOffsetMinutesFieldNumber = 22;
    private int utcOffsetMinutes_;
    /// <summary>
    /// Number of minutes this place's timezone is currently offset from UTC.
    /// This is expressed in minutes to support timezones that are offset by
    /// fractions of an hour, e.g. X hours and 15 minutes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UtcOffsetMinutes {
      get { return utcOffsetMinutes_; }
      set {
        utcOffsetMinutes_ = value;
      }
    }

    /// <summary>Field number for the "adr_format_address" field.</summary>
    public const int AdrFormatAddressFieldNumber = 24;
    private string adrFormatAddress_ = "";
    /// <summary>
    /// The place's address in adr microformat: http://microformats.org/wiki/adr.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdrFormatAddress {
      get { return adrFormatAddress_; }
      set {
        adrFormatAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_status" field.</summary>
    public const int BusinessStatusFieldNumber = 25;
    private global::Google.Maps.Places.V1.Place.Types.BusinessStatus businessStatus_ = global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified;
    /// <summary>
    /// The business status for the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.BusinessStatus BusinessStatus {
      get { return businessStatus_; }
      set {
        businessStatus_ = value;
      }
    }

    /// <summary>Field number for the "price_level" field.</summary>
    public const int PriceLevelFieldNumber = 26;
    private global::Google.Maps.Places.V1.PriceLevel priceLevel_ = global::Google.Maps.Places.V1.PriceLevel.Unspecified;
    /// <summary>
    /// Price level of the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.PriceLevel PriceLevel {
      get { return priceLevel_; }
      set {
        priceLevel_ = value;
      }
    }

    /// <summary>Field number for the "attributions" field.</summary>
    public const int AttributionsFieldNumber = 27;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.Attribution> _repeated_attributions_codec
        = pb::FieldCodec.ForMessage(218, global::Google.Maps.Places.V1.Place.Types.Attribution.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution> attributions_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution>();
    /// <summary>
    /// A set of data provider that must be shown with this result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.Attribution> Attributions {
      get { return attributions_; }
    }

    /// <summary>Field number for the "user_rating_count" field.</summary>
    public const int UserRatingCountFieldNumber = 28;
    private int userRatingCount_;
    /// <summary>
    /// The total number of reviews (with or without text) for this place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserRatingCount {
      get { return userRatingCount_; }
      set {
        userRatingCount_ = value;
      }
    }

    /// <summary>Field number for the "icon_mask_base_uri" field.</summary>
    public const int IconMaskBaseUriFieldNumber = 29;
    private string iconMaskBaseUri_ = "";
    /// <summary>
    /// A truncated URL to an v2 icon mask. User can access different icon type by
    /// appending type suffix to the end (eg, ".svg" or ".png").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconMaskBaseUri {
      get { return iconMaskBaseUri_; }
      set {
        iconMaskBaseUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_background_color" field.</summary>
    public const int IconBackgroundColorFieldNumber = 30;
    private string iconBackgroundColor_ = "";
    /// <summary>
    /// Background color for icon_mask in hex format, e.g. #909CE1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconBackgroundColor {
      get { return iconBackgroundColor_; }
      set {
        iconBackgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "takeout" field.</summary>
    public const int TakeoutFieldNumber = 33;
    private bool takeout_;
    /// <summary>
    /// Specifies if the business supports takeout.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Takeout {
      get { if ((_hasBits0 & 1) != 0) { return takeout_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        takeout_ = value;
      }
    }
    /// <summary>Gets whether the "takeout" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTakeout {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "takeout" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTakeout() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "delivery" field.</summary>
    public const int DeliveryFieldNumber = 34;
    private bool delivery_;
    /// <summary>
    /// Specifies if the business supports delivery.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Delivery {
      get { if ((_hasBits0 & 2) != 0) { return delivery_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        delivery_ = value;
      }
    }
    /// <summary>Gets whether the "delivery" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDelivery {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "delivery" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDelivery() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "dine_in" field.</summary>
    public const int DineInFieldNumber = 35;
    private bool dineIn_;
    /// <summary>
    /// Specifies if the business supports indoor or outdoor seating options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DineIn {
      get { if ((_hasBits0 & 4) != 0) { return dineIn_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        dineIn_ = value;
      }
    }
    /// <summary>Gets whether the "dine_in" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDineIn {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "dine_in" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDineIn() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "curbside_pickup" field.</summary>
    public const int CurbsidePickupFieldNumber = 36;
    private bool curbsidePickup_;
    /// <summary>
    /// Specifies if the business supports curbside pickup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CurbsidePickup {
      get { if ((_hasBits0 & 8) != 0) { return curbsidePickup_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        curbsidePickup_ = value;
      }
    }
    /// <summary>Gets whether the "curbside_pickup" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCurbsidePickup {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "curbside_pickup" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCurbsidePickup() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "wheelchair_accessible_entrance" field.</summary>
    public const int WheelchairAccessibleEntranceFieldNumber = 37;
    private bool wheelchairAccessibleEntrance_;
    /// <summary>
    /// Specifies if the place has an entrance that is wheelchair-accessible.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WheelchairAccessibleEntrance {
      get { if ((_hasBits0 & 16) != 0) { return wheelchairAccessibleEntrance_; } else { return false; } }
      set {
        _hasBits0 |= 16;
        wheelchairAccessibleEntrance_ = value;
      }
    }
    /// <summary>Gets whether the "wheelchair_accessible_entrance" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWheelchairAccessibleEntrance {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "wheelchair_accessible_entrance" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWheelchairAccessibleEntrance() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "reservable" field.</summary>
    public const int ReservableFieldNumber = 38;
    private bool reservable_;
    /// <summary>
    /// Specifies if the place supports reservations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Reservable {
      get { if ((_hasBits0 & 32) != 0) { return reservable_; } else { return false; } }
      set {
        _hasBits0 |= 32;
        reservable_ = value;
      }
    }
    /// <summary>Gets whether the "reservable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReservable {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "reservable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReservable() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "serves_breakfast" field.</summary>
    public const int ServesBreakfastFieldNumber = 39;
    private bool servesBreakfast_;
    /// <summary>
    /// Specifies if the place serves breakfast.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBreakfast {
      get { if ((_hasBits0 & 64) != 0) { return servesBreakfast_; } else { return false; } }
      set {
        _hasBits0 |= 64;
        servesBreakfast_ = value;
      }
    }
    /// <summary>Gets whether the "serves_breakfast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBreakfast {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "serves_breakfast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBreakfast() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "serves_lunch" field.</summary>
    public const int ServesLunchFieldNumber = 40;
    private bool servesLunch_;
    /// <summary>
    /// Specifies if the place serves lunch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesLunch {
      get { if ((_hasBits0 & 128) != 0) { return servesLunch_; } else { return false; } }
      set {
        _hasBits0 |= 128;
        servesLunch_ = value;
      }
    }
    /// <summary>Gets whether the "serves_lunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesLunch {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "serves_lunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesLunch() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "serves_dinner" field.</summary>
    public const int ServesDinnerFieldNumber = 41;
    private bool servesDinner_;
    /// <summary>
    /// Specifies if the place serves dinner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesDinner {
      get { if ((_hasBits0 & 256) != 0) { return servesDinner_; } else { return false; } }
      set {
        _hasBits0 |= 256;
        servesDinner_ = value;
      }
    }
    /// <summary>Gets whether the "serves_dinner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesDinner {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "serves_dinner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesDinner() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "serves_beer" field.</summary>
    public const int ServesBeerFieldNumber = 42;
    private bool servesBeer_;
    /// <summary>
    /// Specifies if the place serves beer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBeer {
      get { if ((_hasBits0 & 512) != 0) { return servesBeer_; } else { return false; } }
      set {
        _hasBits0 |= 512;
        servesBeer_ = value;
      }
    }
    /// <summary>Gets whether the "serves_beer" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBeer {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "serves_beer" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBeer() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "serves_wine" field.</summary>
    public const int ServesWineFieldNumber = 43;
    private bool servesWine_;
    /// <summary>
    /// Specifies if the place serves wine.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesWine {
      get { if ((_hasBits0 & 1024) != 0) { return servesWine_; } else { return false; } }
      set {
        _hasBits0 |= 1024;
        servesWine_ = value;
      }
    }
    /// <summary>Gets whether the "serves_wine" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesWine {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "serves_wine" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesWine() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "serves_brunch" field.</summary>
    public const int ServesBrunchFieldNumber = 44;
    private bool servesBrunch_;
    /// <summary>
    /// Specifies if the place serves brunch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesBrunch {
      get { if ((_hasBits0 & 2048) != 0) { return servesBrunch_; } else { return false; } }
      set {
        _hasBits0 |= 2048;
        servesBrunch_ = value;
      }
    }
    /// <summary>Gets whether the "serves_brunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesBrunch {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "serves_brunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesBrunch() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "serves_vegetarian_food" field.</summary>
    public const int ServesVegetarianFoodFieldNumber = 45;
    private bool servesVegetarianFood_;
    /// <summary>
    /// Specifies if the place serves vegetarian food.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ServesVegetarianFood {
      get { if ((_hasBits0 & 4096) != 0) { return servesVegetarianFood_; } else { return false; } }
      set {
        _hasBits0 |= 4096;
        servesVegetarianFood_ = value;
      }
    }
    /// <summary>Gets whether the "serves_vegetarian_food" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServesVegetarianFood {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "serves_vegetarian_food" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServesVegetarianFood() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "current_opening_hours" field.</summary>
    public const int CurrentOpeningHoursFieldNumber = 46;
    private global::Google.Maps.Places.V1.Place.Types.OpeningHours currentOpeningHours_;
    /// <summary>
    /// The hours of operation for the next seven days (including today). The time
    /// period starts at midnight on the date of the request and ends at 11:59 pm
    /// six days later. This field includes the special_days subfield of all hours,
    /// set for dates that have exceptional hours.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.OpeningHours CurrentOpeningHours {
      get { return currentOpeningHours_; }
      set {
        currentOpeningHours_ = value;
      }
    }

    /// <summary>Field number for the "current_secondary_opening_hours" field.</summary>
    public const int CurrentSecondaryOpeningHoursFieldNumber = 47;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours> _repeated_currentSecondaryOpeningHours_codec
        = pb::FieldCodec.ForMessage(378, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> currentSecondaryOpeningHours_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours>();
    /// <summary>
    /// Contains an array of entries for the next seven days including information
    /// about secondary hours of a business. Secondary hours are different from a
    /// business's main hours. For example, a restaurant can specify drive through
    /// hours or delivery hours as its secondary hours. This field populates the
    /// type subfield, which draws from a predefined list of opening hours types
    /// (such as DRIVE_THROUGH, PICKUP, or TAKEOUT) based on the types of the
    /// place. This field includes the special_days subfield of all hours, set for
    /// dates that have exceptional hours.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> CurrentSecondaryOpeningHours {
      get { return currentSecondaryOpeningHours_; }
    }

    /// <summary>Field number for the "secondary_opening_hours" field.</summary>
    public const int SecondaryOpeningHoursFieldNumber = 49;
    private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours> _repeated_secondaryOpeningHours_codec
        = pb::FieldCodec.ForMessage(394, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Parser);
    private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> secondaryOpeningHours_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours>();
    /// <summary>
    /// Contains an array of entries for information about regular secondary hours
    /// of a business. Secondary hours are different from a business's main hours.
    /// For example, a restaurant can specify drive through hours or delivery hours
    /// as its secondary hours. This field populates the type subfield, which draws
    /// from a predefined list of opening hours types (such as DRIVE_THROUGH,
    /// PICKUP, or TAKEOUT) based on the types of the place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours> SecondaryOpeningHours {
      get { return secondaryOpeningHours_; }
    }

    /// <summary>Field number for the "editorial_summary" field.</summary>
    public const int EditorialSummaryFieldNumber = 48;
    private global::Google.Maps.Places.V1.Place.Types.EditorialSummary editorialSummary_;
    /// <summary>
    /// Contains a summary of the place. A summary is comprised of a textual
    /// overview, and also includes the language code for these if applicable.
    /// Summary text must be presented as-is and can not be modified or altered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Maps.Places.V1.Place.Types.EditorialSummary EditorialSummary {
      get { return editorialSummary_; }
      set {
        editorialSummary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Place);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Place other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(DisplayName, other.DisplayName)) return false;
      if(!types_.Equals(other.types_)) return false;
      if (NationalPhoneNumber != other.NationalPhoneNumber) return false;
      if (InternationalPhoneNumber != other.InternationalPhoneNumber) return false;
      if (FormattedAddress != other.FormattedAddress) return false;
      if(!addressComponents_.Equals(other.addressComponents_)) return false;
      if (!object.Equals(PlusCode, other.PlusCode)) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Viewport, other.Viewport)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rating, other.Rating)) return false;
      if (GoogleMapsUri != other.GoogleMapsUri) return false;
      if (WebsiteUri != other.WebsiteUri) return false;
      if(!reviews_.Equals(other.reviews_)) return false;
      if (!object.Equals(OpeningHours, other.OpeningHours)) return false;
      if (UtcOffsetMinutes != other.UtcOffsetMinutes) return false;
      if (AdrFormatAddress != other.AdrFormatAddress) return false;
      if (BusinessStatus != other.BusinessStatus) return false;
      if (PriceLevel != other.PriceLevel) return false;
      if(!attributions_.Equals(other.attributions_)) return false;
      if (UserRatingCount != other.UserRatingCount) return false;
      if (IconMaskBaseUri != other.IconMaskBaseUri) return false;
      if (IconBackgroundColor != other.IconBackgroundColor) return false;
      if (Takeout != other.Takeout) return false;
      if (Delivery != other.Delivery) return false;
      if (DineIn != other.DineIn) return false;
      if (CurbsidePickup != other.CurbsidePickup) return false;
      if (WheelchairAccessibleEntrance != other.WheelchairAccessibleEntrance) return false;
      if (Reservable != other.Reservable) return false;
      if (ServesBreakfast != other.ServesBreakfast) return false;
      if (ServesLunch != other.ServesLunch) return false;
      if (ServesDinner != other.ServesDinner) return false;
      if (ServesBeer != other.ServesBeer) return false;
      if (ServesWine != other.ServesWine) return false;
      if (ServesBrunch != other.ServesBrunch) return false;
      if (ServesVegetarianFood != other.ServesVegetarianFood) return false;
      if (!object.Equals(CurrentOpeningHours, other.CurrentOpeningHours)) return false;
      if(!currentSecondaryOpeningHours_.Equals(other.currentSecondaryOpeningHours_)) return false;
      if(!secondaryOpeningHours_.Equals(other.secondaryOpeningHours_)) return false;
      if (!object.Equals(EditorialSummary, other.EditorialSummary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (displayName_ != null) hash ^= DisplayName.GetHashCode();
      hash ^= types_.GetHashCode();
      if (NationalPhoneNumber.Length != 0) hash ^= NationalPhoneNumber.GetHashCode();
      if (InternationalPhoneNumber.Length != 0) hash ^= InternationalPhoneNumber.GetHashCode();
      if (FormattedAddress.Length != 0) hash ^= FormattedAddress.GetHashCode();
      hash ^= addressComponents_.GetHashCode();
      if (plusCode_ != null) hash ^= PlusCode.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (viewport_ != null) hash ^= Viewport.GetHashCode();
      if (Rating != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rating);
      if (GoogleMapsUri.Length != 0) hash ^= GoogleMapsUri.GetHashCode();
      if (WebsiteUri.Length != 0) hash ^= WebsiteUri.GetHashCode();
      hash ^= reviews_.GetHashCode();
      if (openingHours_ != null) hash ^= OpeningHours.GetHashCode();
      if (UtcOffsetMinutes != 0) hash ^= UtcOffsetMinutes.GetHashCode();
      if (AdrFormatAddress.Length != 0) hash ^= AdrFormatAddress.GetHashCode();
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) hash ^= BusinessStatus.GetHashCode();
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) hash ^= PriceLevel.GetHashCode();
      hash ^= attributions_.GetHashCode();
      if (UserRatingCount != 0) hash ^= UserRatingCount.GetHashCode();
      if (IconMaskBaseUri.Length != 0) hash ^= IconMaskBaseUri.GetHashCode();
      if (IconBackgroundColor.Length != 0) hash ^= IconBackgroundColor.GetHashCode();
      if (HasTakeout) hash ^= Takeout.GetHashCode();
      if (HasDelivery) hash ^= Delivery.GetHashCode();
      if (HasDineIn) hash ^= DineIn.GetHashCode();
      if (HasCurbsidePickup) hash ^= CurbsidePickup.GetHashCode();
      if (HasWheelchairAccessibleEntrance) hash ^= WheelchairAccessibleEntrance.GetHashCode();
      if (HasReservable) hash ^= Reservable.GetHashCode();
      if (HasServesBreakfast) hash ^= ServesBreakfast.GetHashCode();
      if (HasServesLunch) hash ^= ServesLunch.GetHashCode();
      if (HasServesDinner) hash ^= ServesDinner.GetHashCode();
      if (HasServesBeer) hash ^= ServesBeer.GetHashCode();
      if (HasServesWine) hash ^= ServesWine.GetHashCode();
      if (HasServesBrunch) hash ^= ServesBrunch.GetHashCode();
      if (HasServesVegetarianFood) hash ^= ServesVegetarianFood.GetHashCode();
      if (currentOpeningHours_ != null) hash ^= CurrentOpeningHours.GetHashCode();
      hash ^= currentSecondaryOpeningHours_.GetHashCode();
      hash ^= secondaryOpeningHours_.GetHashCode();
      if (editorialSummary_ != null) hash ^= EditorialSummary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      types_.WriteTo(output, _repeated_types_codec);
      if (NationalPhoneNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FormattedAddress);
      }
      addressComponents_.WriteTo(output, _repeated_addressComponents_codec);
      if (plusCode_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlusCode);
      }
      if (location_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Location);
      }
      if (viewport_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Viewport);
      }
      if (Rating != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Rating);
      }
      if (GoogleMapsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(WebsiteUri);
      }
      reviews_.WriteTo(output, _repeated_reviews_codec);
      if (openingHours_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(OpeningHours);
      }
      if (UtcOffsetMinutes != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UtcOffsetMinutes);
      }
      if (AdrFormatAddress.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) PriceLevel);
      }
      attributions_.WriteTo(output, _repeated_attributions_codec);
      if (UserRatingCount != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(IconBackgroundColor);
      }
      if (displayName_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DisplayName);
      }
      if (HasTakeout) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Takeout);
      }
      if (HasDelivery) {
        output.WriteRawTag(144, 2);
        output.WriteBool(Delivery);
      }
      if (HasDineIn) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DineIn);
      }
      if (HasCurbsidePickup) {
        output.WriteRawTag(160, 2);
        output.WriteBool(CurbsidePickup);
      }
      if (HasWheelchairAccessibleEntrance) {
        output.WriteRawTag(168, 2);
        output.WriteBool(WheelchairAccessibleEntrance);
      }
      if (HasReservable) {
        output.WriteRawTag(176, 2);
        output.WriteBool(Reservable);
      }
      if (HasServesBreakfast) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ServesBreakfast);
      }
      if (HasServesLunch) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ServesLunch);
      }
      if (HasServesDinner) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ServesDinner);
      }
      if (HasServesBeer) {
        output.WriteRawTag(208, 2);
        output.WriteBool(ServesBeer);
      }
      if (HasServesWine) {
        output.WriteRawTag(216, 2);
        output.WriteBool(ServesWine);
      }
      if (HasServesBrunch) {
        output.WriteRawTag(224, 2);
        output.WriteBool(ServesBrunch);
      }
      if (HasServesVegetarianFood) {
        output.WriteRawTag(232, 2);
        output.WriteBool(ServesVegetarianFood);
      }
      if (currentOpeningHours_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.WriteTo(output, _repeated_currentSecondaryOpeningHours_codec);
      if (editorialSummary_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(EditorialSummary);
      }
      secondaryOpeningHours_.WriteTo(output, _repeated_secondaryOpeningHours_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      types_.WriteTo(ref output, _repeated_types_codec);
      if (NationalPhoneNumber.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FormattedAddress);
      }
      addressComponents_.WriteTo(ref output, _repeated_addressComponents_codec);
      if (plusCode_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PlusCode);
      }
      if (location_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Location);
      }
      if (viewport_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Viewport);
      }
      if (Rating != 0D) {
        output.WriteRawTag(113);
        output.WriteDouble(Rating);
      }
      if (GoogleMapsUri.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(WebsiteUri);
      }
      reviews_.WriteTo(ref output, _repeated_reviews_codec);
      if (openingHours_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(OpeningHours);
      }
      if (UtcOffsetMinutes != 0) {
        output.WriteRawTag(176, 1);
        output.WriteInt32(UtcOffsetMinutes);
      }
      if (AdrFormatAddress.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        output.WriteRawTag(208, 1);
        output.WriteEnum((int) PriceLevel);
      }
      attributions_.WriteTo(ref output, _repeated_attributions_codec);
      if (UserRatingCount != 0) {
        output.WriteRawTag(224, 1);
        output.WriteInt32(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(IconBackgroundColor);
      }
      if (displayName_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(DisplayName);
      }
      if (HasTakeout) {
        output.WriteRawTag(136, 2);
        output.WriteBool(Takeout);
      }
      if (HasDelivery) {
        output.WriteRawTag(144, 2);
        output.WriteBool(Delivery);
      }
      if (HasDineIn) {
        output.WriteRawTag(152, 2);
        output.WriteBool(DineIn);
      }
      if (HasCurbsidePickup) {
        output.WriteRawTag(160, 2);
        output.WriteBool(CurbsidePickup);
      }
      if (HasWheelchairAccessibleEntrance) {
        output.WriteRawTag(168, 2);
        output.WriteBool(WheelchairAccessibleEntrance);
      }
      if (HasReservable) {
        output.WriteRawTag(176, 2);
        output.WriteBool(Reservable);
      }
      if (HasServesBreakfast) {
        output.WriteRawTag(184, 2);
        output.WriteBool(ServesBreakfast);
      }
      if (HasServesLunch) {
        output.WriteRawTag(192, 2);
        output.WriteBool(ServesLunch);
      }
      if (HasServesDinner) {
        output.WriteRawTag(200, 2);
        output.WriteBool(ServesDinner);
      }
      if (HasServesBeer) {
        output.WriteRawTag(208, 2);
        output.WriteBool(ServesBeer);
      }
      if (HasServesWine) {
        output.WriteRawTag(216, 2);
        output.WriteBool(ServesWine);
      }
      if (HasServesBrunch) {
        output.WriteRawTag(224, 2);
        output.WriteBool(ServesBrunch);
      }
      if (HasServesVegetarianFood) {
        output.WriteRawTag(232, 2);
        output.WriteBool(ServesVegetarianFood);
      }
      if (currentOpeningHours_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.WriteTo(ref output, _repeated_currentSecondaryOpeningHours_codec);
      if (editorialSummary_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(EditorialSummary);
      }
      secondaryOpeningHours_.WriteTo(ref output, _repeated_secondaryOpeningHours_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (displayName_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DisplayName);
      }
      size += types_.CalculateSize(_repeated_types_codec);
      if (NationalPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NationalPhoneNumber);
      }
      if (InternationalPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InternationalPhoneNumber);
      }
      if (FormattedAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormattedAddress);
      }
      size += addressComponents_.CalculateSize(_repeated_addressComponents_codec);
      if (plusCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlusCode);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (viewport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Viewport);
      }
      if (Rating != 0D) {
        size += 1 + 8;
      }
      if (GoogleMapsUri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GoogleMapsUri);
      }
      if (WebsiteUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WebsiteUri);
      }
      size += reviews_.CalculateSize(_repeated_reviews_codec);
      if (openingHours_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OpeningHours);
      }
      if (UtcOffsetMinutes != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UtcOffsetMinutes);
      }
      if (AdrFormatAddress.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AdrFormatAddress);
      }
      if (BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BusinessStatus);
      }
      if (PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) PriceLevel);
      }
      size += attributions_.CalculateSize(_repeated_attributions_codec);
      if (UserRatingCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UserRatingCount);
      }
      if (IconMaskBaseUri.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IconMaskBaseUri);
      }
      if (IconBackgroundColor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IconBackgroundColor);
      }
      if (HasTakeout) {
        size += 2 + 1;
      }
      if (HasDelivery) {
        size += 2 + 1;
      }
      if (HasDineIn) {
        size += 2 + 1;
      }
      if (HasCurbsidePickup) {
        size += 2 + 1;
      }
      if (HasWheelchairAccessibleEntrance) {
        size += 2 + 1;
      }
      if (HasReservable) {
        size += 2 + 1;
      }
      if (HasServesBreakfast) {
        size += 2 + 1;
      }
      if (HasServesLunch) {
        size += 2 + 1;
      }
      if (HasServesDinner) {
        size += 2 + 1;
      }
      if (HasServesBeer) {
        size += 2 + 1;
      }
      if (HasServesWine) {
        size += 2 + 1;
      }
      if (HasServesBrunch) {
        size += 2 + 1;
      }
      if (HasServesVegetarianFood) {
        size += 2 + 1;
      }
      if (currentOpeningHours_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CurrentOpeningHours);
      }
      size += currentSecondaryOpeningHours_.CalculateSize(_repeated_currentSecondaryOpeningHours_codec);
      size += secondaryOpeningHours_.CalculateSize(_repeated_secondaryOpeningHours_codec);
      if (editorialSummary_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EditorialSummary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Place other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.displayName_ != null) {
        if (displayName_ == null) {
          DisplayName = new global::Google.Type.LocalizedText();
        }
        DisplayName.MergeFrom(other.DisplayName);
      }
      types_.Add(other.types_);
      if (other.NationalPhoneNumber.Length != 0) {
        NationalPhoneNumber = other.NationalPhoneNumber;
      }
      if (other.InternationalPhoneNumber.Length != 0) {
        InternationalPhoneNumber = other.InternationalPhoneNumber;
      }
      if (other.FormattedAddress.Length != 0) {
        FormattedAddress = other.FormattedAddress;
      }
      addressComponents_.Add(other.addressComponents_);
      if (other.plusCode_ != null) {
        if (plusCode_ == null) {
          PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
        }
        PlusCode.MergeFrom(other.PlusCode);
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Google.Type.LatLng();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.viewport_ != null) {
        if (viewport_ == null) {
          Viewport = new global::Google.Geo.Type.Viewport();
        }
        Viewport.MergeFrom(other.Viewport);
      }
      if (other.Rating != 0D) {
        Rating = other.Rating;
      }
      if (other.GoogleMapsUri.Length != 0) {
        GoogleMapsUri = other.GoogleMapsUri;
      }
      if (other.WebsiteUri.Length != 0) {
        WebsiteUri = other.WebsiteUri;
      }
      reviews_.Add(other.reviews_);
      if (other.openingHours_ != null) {
        if (openingHours_ == null) {
          OpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
        }
        OpeningHours.MergeFrom(other.OpeningHours);
      }
      if (other.UtcOffsetMinutes != 0) {
        UtcOffsetMinutes = other.UtcOffsetMinutes;
      }
      if (other.AdrFormatAddress.Length != 0) {
        AdrFormatAddress = other.AdrFormatAddress;
      }
      if (other.BusinessStatus != global::Google.Maps.Places.V1.Place.Types.BusinessStatus.Unspecified) {
        BusinessStatus = other.BusinessStatus;
      }
      if (other.PriceLevel != global::Google.Maps.Places.V1.PriceLevel.Unspecified) {
        PriceLevel = other.PriceLevel;
      }
      attributions_.Add(other.attributions_);
      if (other.UserRatingCount != 0) {
        UserRatingCount = other.UserRatingCount;
      }
      if (other.IconMaskBaseUri.Length != 0) {
        IconMaskBaseUri = other.IconMaskBaseUri;
      }
      if (other.IconBackgroundColor.Length != 0) {
        IconBackgroundColor = other.IconBackgroundColor;
      }
      if (other.HasTakeout) {
        Takeout = other.Takeout;
      }
      if (other.HasDelivery) {
        Delivery = other.Delivery;
      }
      if (other.HasDineIn) {
        DineIn = other.DineIn;
      }
      if (other.HasCurbsidePickup) {
        CurbsidePickup = other.CurbsidePickup;
      }
      if (other.HasWheelchairAccessibleEntrance) {
        WheelchairAccessibleEntrance = other.WheelchairAccessibleEntrance;
      }
      if (other.HasReservable) {
        Reservable = other.Reservable;
      }
      if (other.HasServesBreakfast) {
        ServesBreakfast = other.ServesBreakfast;
      }
      if (other.HasServesLunch) {
        ServesLunch = other.ServesLunch;
      }
      if (other.HasServesDinner) {
        ServesDinner = other.ServesDinner;
      }
      if (other.HasServesBeer) {
        ServesBeer = other.ServesBeer;
      }
      if (other.HasServesWine) {
        ServesWine = other.ServesWine;
      }
      if (other.HasServesBrunch) {
        ServesBrunch = other.ServesBrunch;
      }
      if (other.HasServesVegetarianFood) {
        ServesVegetarianFood = other.ServesVegetarianFood;
      }
      if (other.currentOpeningHours_ != null) {
        if (currentOpeningHours_ == null) {
          CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
        }
        CurrentOpeningHours.MergeFrom(other.CurrentOpeningHours);
      }
      currentSecondaryOpeningHours_.Add(other.currentSecondaryOpeningHours_);
      secondaryOpeningHours_.Add(other.secondaryOpeningHours_);
      if (other.editorialSummary_ != null) {
        if (editorialSummary_ == null) {
          EditorialSummary = new global::Google.Maps.Places.V1.Place.Types.EditorialSummary();
        }
        EditorialSummary.MergeFrom(other.EditorialSummary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            types_.AddEntriesFrom(input, _repeated_types_codec);
            break;
          }
          case 58: {
            NationalPhoneNumber = input.ReadString();
            break;
          }
          case 66: {
            InternationalPhoneNumber = input.ReadString();
            break;
          }
          case 74: {
            FormattedAddress = input.ReadString();
            break;
          }
          case 82: {
            addressComponents_.AddEntriesFrom(input, _repeated_addressComponents_codec);
            break;
          }
          case 90: {
            if (plusCode_ == null) {
              PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
            }
            input.ReadMessage(PlusCode);
            break;
          }
          case 98: {
            if (location_ == null) {
              Location = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Location);
            break;
          }
          case 106: {
            if (viewport_ == null) {
              Viewport = new global::Google.Geo.Type.Viewport();
            }
            input.ReadMessage(Viewport);
            break;
          }
          case 113: {
            Rating = input.ReadDouble();
            break;
          }
          case 122: {
            GoogleMapsUri = input.ReadString();
            break;
          }
          case 130: {
            WebsiteUri = input.ReadString();
            break;
          }
          case 162: {
            reviews_.AddEntriesFrom(input, _repeated_reviews_codec);
            break;
          }
          case 170: {
            if (openingHours_ == null) {
              OpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(OpeningHours);
            break;
          }
          case 176: {
            UtcOffsetMinutes = input.ReadInt32();
            break;
          }
          case 194: {
            AdrFormatAddress = input.ReadString();
            break;
          }
          case 200: {
            BusinessStatus = (global::Google.Maps.Places.V1.Place.Types.BusinessStatus) input.ReadEnum();
            break;
          }
          case 208: {
            PriceLevel = (global::Google.Maps.Places.V1.PriceLevel) input.ReadEnum();
            break;
          }
          case 218: {
            attributions_.AddEntriesFrom(input, _repeated_attributions_codec);
            break;
          }
          case 224: {
            UserRatingCount = input.ReadInt32();
            break;
          }
          case 234: {
            IconMaskBaseUri = input.ReadString();
            break;
          }
          case 242: {
            IconBackgroundColor = input.ReadString();
            break;
          }
          case 250: {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(DisplayName);
            break;
          }
          case 264: {
            Takeout = input.ReadBool();
            break;
          }
          case 272: {
            Delivery = input.ReadBool();
            break;
          }
          case 280: {
            DineIn = input.ReadBool();
            break;
          }
          case 288: {
            CurbsidePickup = input.ReadBool();
            break;
          }
          case 296: {
            WheelchairAccessibleEntrance = input.ReadBool();
            break;
          }
          case 304: {
            Reservable = input.ReadBool();
            break;
          }
          case 312: {
            ServesBreakfast = input.ReadBool();
            break;
          }
          case 320: {
            ServesLunch = input.ReadBool();
            break;
          }
          case 328: {
            ServesDinner = input.ReadBool();
            break;
          }
          case 336: {
            ServesBeer = input.ReadBool();
            break;
          }
          case 344: {
            ServesWine = input.ReadBool();
            break;
          }
          case 352: {
            ServesBrunch = input.ReadBool();
            break;
          }
          case 360: {
            ServesVegetarianFood = input.ReadBool();
            break;
          }
          case 370: {
            if (currentOpeningHours_ == null) {
              CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(CurrentOpeningHours);
            break;
          }
          case 378: {
            currentSecondaryOpeningHours_.AddEntriesFrom(input, _repeated_currentSecondaryOpeningHours_codec);
            break;
          }
          case 386: {
            if (editorialSummary_ == null) {
              EditorialSummary = new global::Google.Maps.Places.V1.Place.Types.EditorialSummary();
            }
            input.ReadMessage(EditorialSummary);
            break;
          }
          case 394: {
            secondaryOpeningHours_.AddEntriesFrom(input, _repeated_secondaryOpeningHours_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            types_.AddEntriesFrom(ref input, _repeated_types_codec);
            break;
          }
          case 58: {
            NationalPhoneNumber = input.ReadString();
            break;
          }
          case 66: {
            InternationalPhoneNumber = input.ReadString();
            break;
          }
          case 74: {
            FormattedAddress = input.ReadString();
            break;
          }
          case 82: {
            addressComponents_.AddEntriesFrom(ref input, _repeated_addressComponents_codec);
            break;
          }
          case 90: {
            if (plusCode_ == null) {
              PlusCode = new global::Google.Maps.Places.V1.Place.Types.PlusCode();
            }
            input.ReadMessage(PlusCode);
            break;
          }
          case 98: {
            if (location_ == null) {
              Location = new global::Google.Type.LatLng();
            }
            input.ReadMessage(Location);
            break;
          }
          case 106: {
            if (viewport_ == null) {
              Viewport = new global::Google.Geo.Type.Viewport();
            }
            input.ReadMessage(Viewport);
            break;
          }
          case 113: {
            Rating = input.ReadDouble();
            break;
          }
          case 122: {
            GoogleMapsUri = input.ReadString();
            break;
          }
          case 130: {
            WebsiteUri = input.ReadString();
            break;
          }
          case 162: {
            reviews_.AddEntriesFrom(ref input, _repeated_reviews_codec);
            break;
          }
          case 170: {
            if (openingHours_ == null) {
              OpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(OpeningHours);
            break;
          }
          case 176: {
            UtcOffsetMinutes = input.ReadInt32();
            break;
          }
          case 194: {
            AdrFormatAddress = input.ReadString();
            break;
          }
          case 200: {
            BusinessStatus = (global::Google.Maps.Places.V1.Place.Types.BusinessStatus) input.ReadEnum();
            break;
          }
          case 208: {
            PriceLevel = (global::Google.Maps.Places.V1.PriceLevel) input.ReadEnum();
            break;
          }
          case 218: {
            attributions_.AddEntriesFrom(ref input, _repeated_attributions_codec);
            break;
          }
          case 224: {
            UserRatingCount = input.ReadInt32();
            break;
          }
          case 234: {
            IconMaskBaseUri = input.ReadString();
            break;
          }
          case 242: {
            IconBackgroundColor = input.ReadString();
            break;
          }
          case 250: {
            if (displayName_ == null) {
              DisplayName = new global::Google.Type.LocalizedText();
            }
            input.ReadMessage(DisplayName);
            break;
          }
          case 264: {
            Takeout = input.ReadBool();
            break;
          }
          case 272: {
            Delivery = input.ReadBool();
            break;
          }
          case 280: {
            DineIn = input.ReadBool();
            break;
          }
          case 288: {
            CurbsidePickup = input.ReadBool();
            break;
          }
          case 296: {
            WheelchairAccessibleEntrance = input.ReadBool();
            break;
          }
          case 304: {
            Reservable = input.ReadBool();
            break;
          }
          case 312: {
            ServesBreakfast = input.ReadBool();
            break;
          }
          case 320: {
            ServesLunch = input.ReadBool();
            break;
          }
          case 328: {
            ServesDinner = input.ReadBool();
            break;
          }
          case 336: {
            ServesBeer = input.ReadBool();
            break;
          }
          case 344: {
            ServesWine = input.ReadBool();
            break;
          }
          case 352: {
            ServesBrunch = input.ReadBool();
            break;
          }
          case 360: {
            ServesVegetarianFood = input.ReadBool();
            break;
          }
          case 370: {
            if (currentOpeningHours_ == null) {
              CurrentOpeningHours = new global::Google.Maps.Places.V1.Place.Types.OpeningHours();
            }
            input.ReadMessage(CurrentOpeningHours);
            break;
          }
          case 378: {
            currentSecondaryOpeningHours_.AddEntriesFrom(ref input, _repeated_currentSecondaryOpeningHours_codec);
            break;
          }
          case 386: {
            if (editorialSummary_ == null) {
              EditorialSummary = new global::Google.Maps.Places.V1.Place.Types.EditorialSummary();
            }
            input.ReadMessage(EditorialSummary);
            break;
          }
          case 394: {
            secondaryOpeningHours_.AddEntriesFrom(ref input, _repeated_secondaryOpeningHours_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Place message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Business status for the place.
      /// </summary>
      public enum BusinessStatus {
        /// <summary>
        /// Default value. This value is unused.
        /// </summary>
        [pbr::OriginalName("BUSINESS_STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The establishment is operational, not necessarily open now.
        /// </summary>
        [pbr::OriginalName("OPERATIONAL")] Operational = 1,
        /// <summary>
        /// The establishment is temporarily closed.
        /// </summary>
        [pbr::OriginalName("CLOSED_TEMPORARILY")] ClosedTemporarily = 2,
        /// <summary>
        /// The establishment is permanently closed.
        /// </summary>
        [pbr::OriginalName("CLOSED_PERMANENTLY")] ClosedPermanently = 3,
      }

      /// <summary>
      /// The structured components that form the formatted address, if this
      /// information is available.
      /// </summary>
      public sealed partial class AddressComponent : pb::IMessage<AddressComponent>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AddressComponent> _parser = new pb::MessageParser<AddressComponent>(() => new AddressComponent());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AddressComponent> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent(AddressComponent other) : this() {
          longText_ = other.longText_;
          shortText_ = other.shortText_;
          types_ = other.types_.Clone();
          languageCode_ = other.languageCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AddressComponent Clone() {
          return new AddressComponent(this);
        }

        /// <summary>Field number for the "long_text" field.</summary>
        public const int LongTextFieldNumber = 1;
        private string longText_ = "";
        /// <summary>
        /// The full text description or name of the address component. For example,
        /// an address component for the country Australia may have a long_name of
        /// "Australia".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LongText {
          get { return longText_; }
          set {
            longText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "short_text" field.</summary>
        public const int ShortTextFieldNumber = 2;
        private string shortText_ = "";
        /// <summary>
        /// An abbreviated textual name for the address component, if available. For
        /// example, an address component for the country of Australia may have a
        /// short_name of "AU".
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ShortText {
          get { return shortText_; }
          set {
            shortText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_types_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> types_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// An array indicating the type(s) of the address component.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "language_code" field.</summary>
        public const int LanguageCodeFieldNumber = 4;
        private string languageCode_ = "";
        /// <summary>
        /// The language used to format this components, in CLDR notation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LanguageCode {
          get { return languageCode_; }
          set {
            languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AddressComponent);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AddressComponent other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (LongText != other.LongText) return false;
          if (ShortText != other.ShortText) return false;
          if(!types_.Equals(other.types_)) return false;
          if (LanguageCode != other.LanguageCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (LongText.Length != 0) hash ^= LongText.GetHashCode();
          if (ShortText.Length != 0) hash ^= ShortText.GetHashCode();
          hash ^= types_.GetHashCode();
          if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (LongText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LongText);
          }
          if (ShortText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ShortText);
          }
          types_.WriteTo(output, _repeated_types_codec);
          if (LanguageCode.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (LongText.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(LongText);
          }
          if (ShortText.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ShortText);
          }
          types_.WriteTo(ref output, _repeated_types_codec);
          if (LanguageCode.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(LanguageCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (LongText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LongText);
          }
          if (ShortText.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortText);
          }
          size += types_.CalculateSize(_repeated_types_codec);
          if (LanguageCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AddressComponent other) {
          if (other == null) {
            return;
          }
          if (other.LongText.Length != 0) {
            LongText = other.LongText;
          }
          if (other.ShortText.Length != 0) {
            ShortText = other.ShortText;
          }
          types_.Add(other.types_);
          if (other.LanguageCode.Length != 0) {
            LanguageCode = other.LanguageCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                LongText = input.ReadString();
                break;
              }
              case 18: {
                ShortText = input.ReadString();
                break;
              }
              case 26: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 34: {
                LanguageCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                LongText = input.ReadString();
                break;
              }
              case 18: {
                ShortText = input.ReadString();
                break;
              }
              case 26: {
                types_.AddEntriesFrom(ref input, _repeated_types_codec);
                break;
              }
              case 34: {
                LanguageCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Plus code (http://plus.codes) is a location reference with two formats:
      /// global code defining a 14mx14m (1/8000th of a degree) or smaller rectangle,
      /// and compound code, replacing the prefix with a reference location.
      /// </summary>
      public sealed partial class PlusCode : pb::IMessage<PlusCode>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PlusCode> _parser = new pb::MessageParser<PlusCode>(() => new PlusCode());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PlusCode> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode(PlusCode other) : this() {
          globalCode_ = other.globalCode_;
          compoundCode_ = other.compoundCode_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PlusCode Clone() {
          return new PlusCode(this);
        }

        /// <summary>Field number for the "global_code" field.</summary>
        public const int GlobalCodeFieldNumber = 1;
        private string globalCode_ = "";
        /// <summary>
        /// Place's global (full) code, such as `9FWM33GV+HQ`, representing an
        /// 1/8000 by 1/8000 degree area (~14 by 14 meters).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string GlobalCode {
          get { return globalCode_; }
          set {
            globalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "compound_code" field.</summary>
        public const int CompoundCodeFieldNumber = 2;
        private string compoundCode_ = "";
        /// <summary>
        /// Place's compound code, such as `33GV+HQ, Ramberg, Norway`, containing
        /// the suffix of the global code and replacing the prefix with a formatted
        /// name of a reference entity.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string CompoundCode {
          get { return compoundCode_; }
          set {
            compoundCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PlusCode);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PlusCode other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (GlobalCode != other.GlobalCode) return false;
          if (CompoundCode != other.CompoundCode) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (GlobalCode.Length != 0) hash ^= GlobalCode.GetHashCode();
          if (CompoundCode.Length != 0) hash ^= CompoundCode.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (GlobalCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CompoundCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (GlobalCode.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CompoundCode);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (GlobalCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GlobalCode);
          }
          if (CompoundCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CompoundCode);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PlusCode other) {
          if (other == null) {
            return;
          }
          if (other.GlobalCode.Length != 0) {
            GlobalCode = other.GlobalCode;
          }
          if (other.CompoundCode.Length != 0) {
            CompoundCode = other.CompoundCode;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                GlobalCode = input.ReadString();
                break;
              }
              case 18: {
                CompoundCode = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                GlobalCode = input.ReadString();
                break;
              }
              case 18: {
                CompoundCode = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about a review of the place.
      /// </summary>
      public sealed partial class Review : pb::IMessage<Review>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Review> _parser = new pb::MessageParser<Review>(() => new Review());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Review> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Review() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Review(Review other) : this() {
          publishTime_ = other.publishTime_ != null ? other.publishTime_.Clone() : null;
          relativePublishTimeDescription_ = other.relativePublishTimeDescription_;
          text_ = other.text_ != null ? other.text_.Clone() : null;
          author_ = other.author_;
          authorUri_ = other.authorUri_;
          authorPhotoUri_ = other.authorPhotoUri_;
          rating_ = other.rating_;
          originalLanguageCode_ = other.originalLanguageCode_;
          translated_ = other.translated_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Review Clone() {
          return new Review(this);
        }

        /// <summary>Field number for the "publish_time" field.</summary>
        public const int PublishTimeFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp publishTime_;
        /// <summary>
        /// Timestamp for the review, expressed in seconds since epoch.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp PublishTime {
          get { return publishTime_; }
          set {
            publishTime_ = value;
          }
        }

        /// <summary>Field number for the "relative_publish_time_description" field.</summary>
        public const int RelativePublishTimeDescriptionFieldNumber = 2;
        private string relativePublishTimeDescription_ = "";
        /// <summary>
        /// A string of formatted recent time, expressing the review time relative
        /// to the current time in a form appropriate for the language and country.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string RelativePublishTimeDescription {
          get { return relativePublishTimeDescription_; }
          set {
            relativePublishTimeDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 9;
        private global::Google.Type.LocalizedText text_;
        /// <summary>
        /// The localized text of the review.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText Text {
          get { return text_; }
          set {
            text_ = value;
          }
        }

        /// <summary>Field number for the "author" field.</summary>
        public const int AuthorFieldNumber = 4;
        private string author_ = "";
        /// <summary>
        /// The name of the review author.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Author {
          get { return author_; }
          set {
            author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "author_uri" field.</summary>
        public const int AuthorUriFieldNumber = 5;
        private string authorUri_ = "";
        /// <summary>
        /// A link to the review author's profile.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AuthorUri {
          get { return authorUri_; }
          set {
            authorUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "author_photo_uri" field.</summary>
        public const int AuthorPhotoUriFieldNumber = 6;
        private string authorPhotoUri_ = "";
        /// <summary>
        /// The author's profile photo.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string AuthorPhotoUri {
          get { return authorPhotoUri_; }
          set {
            authorPhotoUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "rating" field.</summary>
        public const int RatingFieldNumber = 7;
        private double rating_;
        /// <summary>
        /// A whole number between 1.0 and 5.0, a.k.a. the number of stars.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Rating {
          get { return rating_; }
          set {
            rating_ = value;
          }
        }

        /// <summary>Field number for the "original_language_code" field.</summary>
        public const int OriginalLanguageCodeFieldNumber = 10;
        private string originalLanguageCode_ = "";
        /// <summary>
        /// A BCP-47 language code indicating the original language of the review.
        /// If the review has been translated, then original_language != language.
        /// This field contains the main language tag only, and not the secondary tag
        /// indicating country or region. For example, all the English reviews are
        /// tagged as 'en', and not 'en-AU' or 'en-UK' and so on.This field is empty
        /// if there is only a rating with no review text.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OriginalLanguageCode {
          get { return originalLanguageCode_; }
          set {
            originalLanguageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "translated" field.</summary>
        public const int TranslatedFieldNumber = 11;
        private bool translated_;
        /// <summary>
        /// A boolean value indicating if the review was translated from the original
        /// language it was written in. If a review has been translated,
        /// corresponding to a value of true, Google recommends that you indicate
        /// this to your users. For example, you can add the following string,
        /// “Translated by Google”, to the review.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Translated {
          get { return translated_; }
          set {
            translated_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Review);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Review other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(PublishTime, other.PublishTime)) return false;
          if (RelativePublishTimeDescription != other.RelativePublishTimeDescription) return false;
          if (!object.Equals(Text, other.Text)) return false;
          if (Author != other.Author) return false;
          if (AuthorUri != other.AuthorUri) return false;
          if (AuthorPhotoUri != other.AuthorPhotoUri) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Rating, other.Rating)) return false;
          if (OriginalLanguageCode != other.OriginalLanguageCode) return false;
          if (Translated != other.Translated) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (publishTime_ != null) hash ^= PublishTime.GetHashCode();
          if (RelativePublishTimeDescription.Length != 0) hash ^= RelativePublishTimeDescription.GetHashCode();
          if (text_ != null) hash ^= Text.GetHashCode();
          if (Author.Length != 0) hash ^= Author.GetHashCode();
          if (AuthorUri.Length != 0) hash ^= AuthorUri.GetHashCode();
          if (AuthorPhotoUri.Length != 0) hash ^= AuthorPhotoUri.GetHashCode();
          if (Rating != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Rating);
          if (OriginalLanguageCode.Length != 0) hash ^= OriginalLanguageCode.GetHashCode();
          if (Translated != false) hash ^= Translated.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (publishTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PublishTime);
          }
          if (RelativePublishTimeDescription.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RelativePublishTimeDescription);
          }
          if (Author.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Author);
          }
          if (AuthorUri.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AuthorUri);
          }
          if (AuthorPhotoUri.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(AuthorPhotoUri);
          }
          if (Rating != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(Rating);
          }
          if (text_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(Text);
          }
          if (OriginalLanguageCode.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(OriginalLanguageCode);
          }
          if (Translated != false) {
            output.WriteRawTag(88);
            output.WriteBool(Translated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (publishTime_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(PublishTime);
          }
          if (RelativePublishTimeDescription.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(RelativePublishTimeDescription);
          }
          if (Author.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Author);
          }
          if (AuthorUri.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(AuthorUri);
          }
          if (AuthorPhotoUri.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(AuthorPhotoUri);
          }
          if (Rating != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(Rating);
          }
          if (text_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(Text);
          }
          if (OriginalLanguageCode.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(OriginalLanguageCode);
          }
          if (Translated != false) {
            output.WriteRawTag(88);
            output.WriteBool(Translated);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (publishTime_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PublishTime);
          }
          if (RelativePublishTimeDescription.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativePublishTimeDescription);
          }
          if (text_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Text);
          }
          if (Author.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
          }
          if (AuthorUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorUri);
          }
          if (AuthorPhotoUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorPhotoUri);
          }
          if (Rating != 0D) {
            size += 1 + 8;
          }
          if (OriginalLanguageCode.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OriginalLanguageCode);
          }
          if (Translated != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Review other) {
          if (other == null) {
            return;
          }
          if (other.publishTime_ != null) {
            if (publishTime_ == null) {
              PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            PublishTime.MergeFrom(other.PublishTime);
          }
          if (other.RelativePublishTimeDescription.Length != 0) {
            RelativePublishTimeDescription = other.RelativePublishTimeDescription;
          }
          if (other.text_ != null) {
            if (text_ == null) {
              Text = new global::Google.Type.LocalizedText();
            }
            Text.MergeFrom(other.Text);
          }
          if (other.Author.Length != 0) {
            Author = other.Author;
          }
          if (other.AuthorUri.Length != 0) {
            AuthorUri = other.AuthorUri;
          }
          if (other.AuthorPhotoUri.Length != 0) {
            AuthorPhotoUri = other.AuthorPhotoUri;
          }
          if (other.Rating != 0D) {
            Rating = other.Rating;
          }
          if (other.OriginalLanguageCode.Length != 0) {
            OriginalLanguageCode = other.OriginalLanguageCode;
          }
          if (other.Translated != false) {
            Translated = other.Translated;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (publishTime_ == null) {
                  PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(PublishTime);
                break;
              }
              case 18: {
                RelativePublishTimeDescription = input.ReadString();
                break;
              }
              case 34: {
                Author = input.ReadString();
                break;
              }
              case 42: {
                AuthorUri = input.ReadString();
                break;
              }
              case 50: {
                AuthorPhotoUri = input.ReadString();
                break;
              }
              case 57: {
                Rating = input.ReadDouble();
                break;
              }
              case 74: {
                if (text_ == null) {
                  Text = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Text);
                break;
              }
              case 82: {
                OriginalLanguageCode = input.ReadString();
                break;
              }
              case 88: {
                Translated = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (publishTime_ == null) {
                  PublishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(PublishTime);
                break;
              }
              case 18: {
                RelativePublishTimeDescription = input.ReadString();
                break;
              }
              case 34: {
                Author = input.ReadString();
                break;
              }
              case 42: {
                AuthorUri = input.ReadString();
                break;
              }
              case 50: {
                AuthorPhotoUri = input.ReadString();
                break;
              }
              case 57: {
                Rating = input.ReadDouble();
                break;
              }
              case 74: {
                if (text_ == null) {
                  Text = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Text);
                break;
              }
              case 82: {
                OriginalLanguageCode = input.ReadString();
                break;
              }
              case 88: {
                Translated = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Information about business hour of the place.
      /// </summary>
      public sealed partial class OpeningHours : pb::IMessage<OpeningHours>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OpeningHours> _parser = new pb::MessageParser<OpeningHours>(() => new OpeningHours());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<OpeningHours> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours(OpeningHours other) : this() {
          openNow_ = other.openNow_;
          periods_ = other.periods_.Clone();
          weekdayDescriptions_ = other.weekdayDescriptions_.Clone();
          secondaryHourType_ = other.secondaryHourType_;
          specialDays_ = other.specialDays_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public OpeningHours Clone() {
          return new OpeningHours(this);
        }

        /// <summary>Field number for the "open_now" field.</summary>
        public const int OpenNowFieldNumber = 1;
        private bool openNow_;
        /// <summary>
        /// Is this place open right now?  Always present unless we lack time-of-day
        /// or timezone data for these opening hours.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool OpenNow {
          get { return openNow_; }
          set {
            openNow_ = value;
          }
        }

        /// <summary>Field number for the "periods" field.</summary>
        public const int PeriodsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod> _repeated_periods_codec
            = pb::FieldCodec.ForMessage(18, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Parser);
        private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod> periods_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod>();
        /// <summary>
        /// The periods that this place is open during the week. The periods are in
        /// chronological order, starting with Sunday in the place-local timezone. An
        /// empty (but not absent) value indicates a place that is never open, e.g.
        /// because it is closed temporarily for renovations.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod> Periods {
          get { return periods_; }
        }

        /// <summary>Field number for the "weekday_descriptions" field.</summary>
        public const int WeekdayDescriptionsFieldNumber = 3;
        private static readonly pb::FieldCodec<string> _repeated_weekdayDescriptions_codec
            = pb::FieldCodec.ForString(26);
        private readonly pbc::RepeatedField<string> weekdayDescriptions_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// Localized strings describing the opening hours of this place, one string
        /// for each day of the week.  Will be empty if the hours are unknown or
        /// could not be converted to localized text. Example: "Sun: 18:00–06:00"
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<string> WeekdayDescriptions {
          get { return weekdayDescriptions_; }
        }

        /// <summary>Field number for the "secondary_hour_type" field.</summary>
        public const int SecondaryHourTypeFieldNumber = 4;
        private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType secondaryHourType_ = global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified;
        /// <summary>
        /// A type string used to identify the type of secondary hours.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType SecondaryHourType {
          get { return secondaryHourType_; }
          set {
            secondaryHourType_ = value;
          }
        }

        /// <summary>Field number for the "special_days" field.</summary>
        public const int SpecialDaysFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> _repeated_specialDays_codec
            = pb::FieldCodec.ForMessage(42, global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay.Parser);
        private readonly pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> specialDays_ = new pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay>();
        /// <summary>
        /// Structured information for special days that fall within the period that
        /// the returned opening hours cover. Special days are days that could impact
        /// the business hours of a place, e.g. Christmas day. Set for
        /// current_opening_hours and current_secondary_opening_hours if there are
        /// exceptional hours.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SpecialDay> SpecialDays {
          get { return specialDays_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as OpeningHours);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(OpeningHours other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OpenNow != other.OpenNow) return false;
          if(!periods_.Equals(other.periods_)) return false;
          if(!weekdayDescriptions_.Equals(other.weekdayDescriptions_)) return false;
          if (SecondaryHourType != other.SecondaryHourType) return false;
          if(!specialDays_.Equals(other.specialDays_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (OpenNow != false) hash ^= OpenNow.GetHashCode();
          hash ^= periods_.GetHashCode();
          hash ^= weekdayDescriptions_.GetHashCode();
          if (SecondaryHourType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified) hash ^= SecondaryHourType.GetHashCode();
          hash ^= specialDays_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OpenNow != false) {
            output.WriteRawTag(8);
            output.WriteBool(OpenNow);
          }
          periods_.WriteTo(output, _repeated_periods_codec);
          weekdayDescriptions_.WriteTo(output, _repeated_weekdayDescriptions_codec);
          if (SecondaryHourType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SecondaryHourType);
          }
          specialDays_.WriteTo(output, _repeated_specialDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OpenNow != false) {
            output.WriteRawTag(8);
            output.WriteBool(OpenNow);
          }
          periods_.WriteTo(ref output, _repeated_periods_codec);
          weekdayDescriptions_.WriteTo(ref output, _repeated_weekdayDescriptions_codec);
          if (SecondaryHourType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified) {
            output.WriteRawTag(32);
            output.WriteEnum((int) SecondaryHourType);
          }
          specialDays_.WriteTo(ref output, _repeated_specialDays_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (OpenNow != false) {
            size += 1 + 1;
          }
          size += periods_.CalculateSize(_repeated_periods_codec);
          size += weekdayDescriptions_.CalculateSize(_repeated_weekdayDescriptions_codec);
          if (SecondaryHourType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SecondaryHourType);
          }
          size += specialDays_.CalculateSize(_repeated_specialDays_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(OpeningHours other) {
          if (other == null) {
            return;
          }
          if (other.OpenNow != false) {
            OpenNow = other.OpenNow;
          }
          periods_.Add(other.periods_);
          weekdayDescriptions_.Add(other.weekdayDescriptions_);
          if (other.SecondaryHourType != global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType.Unspecified) {
            SecondaryHourType = other.SecondaryHourType;
          }
          specialDays_.Add(other.specialDays_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OpenNow = input.ReadBool();
                break;
              }
              case 18: {
                periods_.AddEntriesFrom(input, _repeated_periods_codec);
                break;
              }
              case 26: {
                weekdayDescriptions_.AddEntriesFrom(input, _repeated_weekdayDescriptions_codec);
                break;
              }
              case 32: {
                SecondaryHourType = (global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType) input.ReadEnum();
                break;
              }
              case 42: {
                specialDays_.AddEntriesFrom(input, _repeated_specialDays_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OpenNow = input.ReadBool();
                break;
              }
              case 18: {
                periods_.AddEntriesFrom(ref input, _repeated_periods_codec);
                break;
              }
              case 26: {
                weekdayDescriptions_.AddEntriesFrom(ref input, _repeated_weekdayDescriptions_codec);
                break;
              }
              case 32: {
                SecondaryHourType = (global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.SecondaryHourType) input.ReadEnum();
                break;
              }
              case 42: {
                specialDays_.AddEntriesFrom(ref input, _repeated_specialDays_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the OpeningHours message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A type used to identify the type of secondary hours.
          /// </summary>
          public enum SecondaryHourType {
            /// <summary>
            /// Default value when secondary hour type is not specified.
            /// </summary>
            [pbr::OriginalName("SECONDARY_HOUR_TYPE_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// The drive-through hour for banks, restaurants, or pharmacies.
            /// </summary>
            [pbr::OriginalName("DRIVE_THROUGH")] DriveThrough = 1,
            /// <summary>
            /// The happy hour.
            /// </summary>
            [pbr::OriginalName("HAPPY_HOUR")] HappyHour = 2,
            /// <summary>
            /// The delivery hour.
            /// </summary>
            [pbr::OriginalName("DELIVERY")] Delivery = 3,
            /// <summary>
            /// The takeout hour.
            /// </summary>
            [pbr::OriginalName("TAKEOUT")] Takeout = 4,
            /// <summary>
            /// The kitchen hour.
            /// </summary>
            [pbr::OriginalName("KITCHEN")] Kitchen = 5,
            /// <summary>
            /// The breakfast hour.
            /// </summary>
            [pbr::OriginalName("BREAKFAST")] Breakfast = 6,
            /// <summary>
            /// The lunch hour.
            /// </summary>
            [pbr::OriginalName("LUNCH")] Lunch = 7,
            /// <summary>
            /// The dinner hour.
            /// </summary>
            [pbr::OriginalName("DINNER")] Dinner = 8,
            /// <summary>
            /// The brunch hour.
            /// </summary>
            [pbr::OriginalName("BRUNCH")] Brunch = 9,
            /// <summary>
            /// The pickup hour.
            /// </summary>
            [pbr::OriginalName("PICKUP")] Pickup = 10,
            /// <summary>
            /// The access hours for storage places.
            /// </summary>
            [pbr::OriginalName("ACCESS")] Access = 11,
            /// <summary>
            /// The special hours for seniors.
            /// </summary>
            [pbr::OriginalName("SENIOR_HOURS")] SeniorHours = 12,
            /// <summary>
            /// The online service hours.
            /// </summary>
            [pbr::OriginalName("ONLINE_SERVICE_HOURS")] OnlineServiceHours = 13,
          }

          /// <summary>
          /// A period the place remains in open_now status.
          /// </summary>
          public sealed partial class OpeningHoursPeriod : pb::IMessage<OpeningHoursPeriod>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<OpeningHoursPeriod> _parser = new pb::MessageParser<OpeningHoursPeriod>(() => new OpeningHoursPeriod());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<OpeningHoursPeriod> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OpeningHoursPeriod() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OpeningHoursPeriod(OpeningHoursPeriod other) : this() {
              open_ = other.open_ != null ? other.open_.Clone() : null;
              close_ = other.close_ != null ? other.close_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public OpeningHoursPeriod Clone() {
              return new OpeningHoursPeriod(this);
            }

            /// <summary>Field number for the "open" field.</summary>
            public const int OpenFieldNumber = 1;
            private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint open_;
            /// <summary>
            /// The time that the place starts to be open.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint Open {
              get { return open_; }
              set {
                open_ = value;
              }
            }

            /// <summary>Field number for the "close" field.</summary>
            public const int CloseFieldNumber = 2;
            private global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint close_;
            /// <summary>
            /// The time that the place starts to be closed.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint Close {
              get { return close_; }
              set {
                close_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as OpeningHoursPeriod);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(OpeningHoursPeriod other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Open, other.Open)) return false;
              if (!object.Equals(Close, other.Close)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (open_ != null) hash ^= Open.GetHashCode();
              if (close_ != null) hash ^= Close.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (open_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Open);
              }
              if (close_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Close);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (open_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Open);
              }
              if (close_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Close);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (open_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Open);
              }
              if (close_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(OpeningHoursPeriod other) {
              if (other == null) {
                return;
              }
              if (other.open_ != null) {
                if (open_ == null) {
                  Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                }
                Open.MergeFrom(other.Open);
              }
              if (other.close_ != null) {
                if (close_ == null) {
                  Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                }
                Close.MergeFrom(other.Close);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (open_ == null) {
                      Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                    }
                    input.ReadMessage(Open);
                    break;
                  }
                  case 18: {
                    if (close_ == null) {
                      Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                    }
                    input.ReadMessage(Close);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (open_ == null) {
                      Open = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                    }
                    input.ReadMessage(Open);
                    break;
                  }
                  case 18: {
                    if (close_ == null) {
                      Close = new global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Types.OpeningHoursPoint();
                    }
                    input.ReadMessage(Close);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the OpeningHoursPeriod message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              /// <summary>
              /// Status changing points.
              /// </summary>
              public sealed partial class OpeningHoursPoint : pb::IMessage<OpeningHoursPoint>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<OpeningHoursPoint> _parser = new pb::MessageParser<OpeningHoursPoint>(() => new OpeningHoursPoint());
                private pb::UnknownFieldSet _unknownFields;
                private int _hasBits0;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<OpeningHoursPoint> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Types.OpeningHoursPeriod.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OpeningHoursPoint() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OpeningHoursPoint(OpeningHoursPoint other) : this() {
                  _hasBits0 = other._hasBits0;
                  day_ = other.day_;
                  hour_ = other.hour_;
                  minute_ = other.minute_;
                  dateDeprecated_ = other.dateDeprecated_;
                  date_ = other.date_ != null ? other.date_.Clone() : null;
                  truncated_ = other.truncated_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public OpeningHoursPoint Clone() {
                  return new OpeningHoursPoint(this);
                }

                /// <summary>Field number for the "day" field.</summary>
                public const int DayFieldNumber = 1;
                private int day_;
                /// <summary>
                /// A day of the week, as an integer in the range 0-6.  0 is Sunday, 1 is
                /// Monday, etc.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Day {
                  get { if ((_hasBits0 & 1) != 0) { return day_; } else { return 0; } }
                  set {
                    _hasBits0 |= 1;
                    day_ = value;
                  }
                }
                /// <summary>Gets whether the "day" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasDay {
                  get { return (_hasBits0 & 1) != 0; }
                }
                /// <summary>Clears the value of the "day" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearDay() {
                  _hasBits0 &= ~1;
                }

                /// <summary>Field number for the "hour" field.</summary>
                public const int HourFieldNumber = 2;
                private int hour_;
                /// <summary>
                /// The hour in 2 digits. Ranges from 00 to 23.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Hour {
                  get { if ((_hasBits0 & 2) != 0) { return hour_; } else { return 0; } }
                  set {
                    _hasBits0 |= 2;
                    hour_ = value;
                  }
                }
                /// <summary>Gets whether the "hour" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasHour {
                  get { return (_hasBits0 & 2) != 0; }
                }
                /// <summary>Clears the value of the "hour" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearHour() {
                  _hasBits0 &= ~2;
                }

                /// <summary>Field number for the "minute" field.</summary>
                public const int MinuteFieldNumber = 3;
                private int minute_;
                /// <summary>
                /// The minute in 2 digits. Ranges from 00 to 59.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int Minute {
                  get { if ((_hasBits0 & 4) != 0) { return minute_; } else { return 0; } }
                  set {
                    _hasBits0 |= 4;
                    minute_ = value;
                  }
                }
                /// <summary>Gets whether the "minute" field is set</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool HasMinute {
                  get { return (_hasBits0 & 4) != 0; }
                }
                /// <summary>Clears the value of the "minute" field</summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void ClearMinute() {
                  _hasBits0 &= ~4;
                }

                /// <summary>Field number for the "date_deprecated" field.</summary>
                public const int DateDeprecatedFieldNumber = 4;
                private string dateDeprecated_ = "";
                /// <summary>
                /// Date of the endpoint expressed in `RFC3339` format in the local
                /// timezone for the place. For example 2010-12-31.
                /// </summary>
                [global::System.ObsoleteAttribute]
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public string DateDeprecated {
                  get { return dateDeprecated_; }
                  set {
                    dateDeprecated_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "date" field.</summary>
                public const int DateFieldNumber = 6;
                private global::Google.Type.Date date_;
                /// <summary>
                /// Date in the local timezone for the place.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Google.Type.Date Date {
                  get { return date_; }
                  set {
                    date_ = value;
                  }
                }

                /// <summary>Field number for the "truncated" field.</summary>
                public const int TruncatedFieldNumber = 5;
                private bool truncated_;
                /// <summary>
                /// Whether or not this endpoint was truncated. Truncation occurs when
                /// the real hours are outside the times we are willing to return hours
                /// between, so we truncate the hours back to these boundaries. This
                /// ensures that at most `24 * 7` hours from midnight of the day of the
                /// request are returned.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Truncated {
                  get { return truncated_; }
                  set {
                    truncated_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as OpeningHoursPoint);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(OpeningHoursPoint other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Day != other.Day) return false;
                  if (Hour != other.Hour) return false;
                  if (Minute != other.Minute) return false;
                  if (DateDeprecated != other.DateDeprecated) return false;
                  if (!object.Equals(Date, other.Date)) return false;
                  if (Truncated != other.Truncated) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (HasDay) hash ^= Day.GetHashCode();
                  if (HasHour) hash ^= Hour.GetHashCode();
                  if (HasMinute) hash ^= Minute.GetHashCode();
                  if (DateDeprecated.Length != 0) hash ^= DateDeprecated.GetHashCode();
                  if (date_ != null) hash ^= Date.GetHashCode();
                  if (Truncated != false) hash ^= Truncated.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (HasDay) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Day);
                  }
                  if (HasHour) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Hour);
                  }
                  if (HasMinute) {
                    output.WriteRawTag(24);
                    output.WriteInt32(Minute);
                  }
                  if (DateDeprecated.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(DateDeprecated);
                  }
                  if (Truncated != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(Truncated);
                  }
                  if (date_ != null) {
                    output.WriteRawTag(50);
                    output.WriteMessage(Date);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (HasDay) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Day);
                  }
                  if (HasHour) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Hour);
                  }
                  if (HasMinute) {
                    output.WriteRawTag(24);
                    output.WriteInt32(Minute);
                  }
                  if (DateDeprecated.Length != 0) {
                    output.WriteRawTag(34);
                    output.WriteString(DateDeprecated);
                  }
                  if (Truncated != false) {
                    output.WriteRawTag(40);
                    output.WriteBool(Truncated);
                  }
                  if (date_ != null) {
                    output.WriteRawTag(50);
                    output.WriteMessage(Date);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (HasDay) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Day);
                  }
                  if (HasHour) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hour);
                  }
                  if (HasMinute) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
                  }
                  if (DateDeprecated.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(DateDeprecated);
                  }
                  if (date_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
                  }
                  if (Truncated != false) {
                    size += 1 + 1;
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(OpeningHoursPoint other) {
                  if (other == null) {
                    return;
                  }
                  if (other.HasDay) {
                    Day = other.Day;
                  }
                  if (other.HasHour) {
                    Hour = other.Hour;
                  }
                  if (other.HasMinute) {
                    Minute = other.Minute;
                  }
                  if (other.DateDeprecated.Length != 0) {
                    DateDeprecated = other.DateDeprecated;
                  }
                  if (other.date_ != null) {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    Date.MergeFrom(other.Date);
                  }
                  if (other.Truncated != false) {
                    Truncated = other.Truncated;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Day = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        Hour = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        Minute = input.ReadInt32();
                        break;
                      }
                      case 34: {
                        DateDeprecated = input.ReadString();
                        break;
                      }
                      case 40: {
                        Truncated = input.ReadBool();
                        break;
                      }
                      case 50: {
                        if (date_ == null) {
                          Date = new global::Google.Type.Date();
                        }
                        input.ReadMessage(Date);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Day = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        Hour = input.ReadInt32();
                        break;
                      }
                      case 24: {
                        Minute = input.ReadInt32();
                        break;
                      }
                      case 34: {
                        DateDeprecated = input.ReadString();
                        break;
                      }
                      case 40: {
                        Truncated = input.ReadBool();
                        break;
                      }
                      case 50: {
                        if (date_ == null) {
                          Date = new global::Google.Type.Date();
                        }
                        input.ReadMessage(Date);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          /// <summary>
          /// Structured information for special days that fall within the period that
          /// the returned opening hours cover. Special days are days that could impact
          /// the business hours of a place, e.g. Christmas day.
          /// </summary>
          public sealed partial class SpecialDay : pb::IMessage<SpecialDay>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<SpecialDay> _parser = new pb::MessageParser<SpecialDay>(() => new SpecialDay());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<SpecialDay> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Maps.Places.V1.Place.Types.OpeningHours.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay(SpecialDay other) : this() {
              date_ = other.date_ != null ? other.date_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public SpecialDay Clone() {
              return new SpecialDay(this);
            }

            /// <summary>Field number for the "date" field.</summary>
            public const int DateFieldNumber = 1;
            private global::Google.Type.Date date_;
            /// <summary>
            /// The date of this special day.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Type.Date Date {
              get { return date_; }
              set {
                date_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as SpecialDay);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(SpecialDay other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Date, other.Date)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (date_ != null) hash ^= Date.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (date_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Date);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (date_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Date);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (date_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(SpecialDay other) {
              if (other == null) {
                return;
              }
              if (other.date_ != null) {
                if (date_ == null) {
                  Date = new global::Google.Type.Date();
                }
                Date.MergeFrom(other.Date);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    input.ReadMessage(Date);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (date_ == null) {
                      Date = new global::Google.Type.Date();
                    }
                    input.ReadMessage(Date);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Information about data providers of this place.
      /// </summary>
      public sealed partial class Attribution : pb::IMessage<Attribution>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Attribution> _parser = new pb::MessageParser<Attribution>(() => new Attribution());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Attribution> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution(Attribution other) : this() {
          provider_ = other.provider_;
          providerUri_ = other.providerUri_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Attribution Clone() {
          return new Attribution(this);
        }

        /// <summary>Field number for the "provider" field.</summary>
        public const int ProviderFieldNumber = 1;
        private string provider_ = "";
        /// <summary>
        /// Name of the Place's data provider.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Provider {
          get { return provider_; }
          set {
            provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "provider_uri" field.</summary>
        public const int ProviderUriFieldNumber = 2;
        private string providerUri_ = "";
        /// <summary>
        /// URI to the Place's data provider.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ProviderUri {
          get { return providerUri_; }
          set {
            providerUri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Attribution);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Attribution other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Provider != other.Provider) return false;
          if (ProviderUri != other.ProviderUri) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Provider.Length != 0) hash ^= Provider.GetHashCode();
          if (ProviderUri.Length != 0) hash ^= ProviderUri.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Provider.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Provider);
          }
          if (ProviderUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ProviderUri);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Provider.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Provider);
          }
          if (ProviderUri.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(ProviderUri);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Provider.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
          }
          if (ProviderUri.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderUri);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Attribution other) {
          if (other == null) {
            return;
          }
          if (other.Provider.Length != 0) {
            Provider = other.Provider;
          }
          if (other.ProviderUri.Length != 0) {
            ProviderUri = other.ProviderUri;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Provider = input.ReadString();
                break;
              }
              case 18: {
                ProviderUri = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Provider = input.ReadString();
                break;
              }
              case 18: {
                ProviderUri = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Contains a summary of the place.
      /// </summary>
      public sealed partial class EditorialSummary : pb::IMessage<EditorialSummary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<EditorialSummary> _parser = new pb::MessageParser<EditorialSummary>(() => new EditorialSummary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<EditorialSummary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Maps.Places.V1.Place.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EditorialSummary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EditorialSummary(EditorialSummary other) : this() {
          overview_ = other.overview_ != null ? other.overview_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EditorialSummary Clone() {
          return new EditorialSummary(this);
        }

        /// <summary>Field number for the "overview" field.</summary>
        public const int OverviewFieldNumber = 1;
        private global::Google.Type.LocalizedText overview_;
        /// <summary>
        /// A summary is comprised of a textual overview, and also includes the
        /// language code for these if applicable. Summary text must be presented
        /// as-is and can not be modified or altered.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Type.LocalizedText Overview {
          get { return overview_; }
          set {
            overview_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as EditorialSummary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(EditorialSummary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Overview, other.Overview)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (overview_ != null) hash ^= Overview.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (overview_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Overview);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (overview_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overview);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(EditorialSummary other) {
          if (other == null) {
            return;
          }
          if (other.overview_ != null) {
            if (overview_ == null) {
              Overview = new global::Google.Type.LocalizedText();
            }
            Overview.MergeFrom(other.Overview);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Overview);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (overview_ == null) {
                  Overview = new global::Google.Type.LocalizedText();
                }
                input.ReadMessage(Overview);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
