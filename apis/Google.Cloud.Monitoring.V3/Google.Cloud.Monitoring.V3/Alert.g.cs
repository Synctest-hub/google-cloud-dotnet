// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/monitoring/v3/alert.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Monitoring.V3 {

  /// <summary>Holder for reflection information generated from google/monitoring/v3/alert.proto</summary>
  public static partial class AlertReflection {

    #region Descriptor
    /// <summary>File descriptor for google/monitoring/v3/alert.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AlertReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBnb29nbGUvbW9uaXRvcmluZy92My9hbGVydC5wcm90bxIUZ29vZ2xlLm1v",
            "bml0b3JpbmcudjMaH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJvdG8a",
            "GWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aIWdvb2dsZS9tb25pdG9yaW5n",
            "L3YzL2NvbW1vbi5wcm90bxoqZ29vZ2xlL21vbml0b3JpbmcvdjMvbXV0YXRp",
            "b25fcmVjb3JkLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJv",
            "dG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxoXZ29vZ2xlL3Jw",
            "Yy9zdGF0dXMucHJvdG8iliMKC0FsZXJ0UG9saWN5EgwKBG5hbWUYASABKAkS",
            "FAoMZGlzcGxheV9uYW1lGAIgASgJEkYKDWRvY3VtZW50YXRpb24YDSABKAsy",
            "Ly5nb29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeS5Eb2N1bWVudGF0",
            "aW9uEkYKC3VzZXJfbGFiZWxzGBAgAygLMjEuZ29vZ2xlLm1vbml0b3Jpbmcu",
            "djMuQWxlcnRQb2xpY3kuVXNlckxhYmVsc0VudHJ5Ej8KCmNvbmRpdGlvbnMY",
            "DCADKAsyKy5nb29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeS5Db25k",
            "aXRpb24SSQoIY29tYmluZXIYBiABKA4yNy5nb29nbGUubW9uaXRvcmluZy52",
            "My5BbGVydFBvbGljeS5Db25kaXRpb25Db21iaW5lclR5cGUSKwoHZW5hYmxl",
            "ZBgRIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSJAoIdmFsaWRp",
            "dHkYEiABKAsyEi5nb29nbGUucnBjLlN0YXR1cxIdChVub3RpZmljYXRpb25f",
            "Y2hhbm5lbHMYDiADKAkSPQoPY3JlYXRpb25fcmVjb3JkGAogASgLMiQuZ29v",
            "Z2xlLm1vbml0b3JpbmcudjMuTXV0YXRpb25SZWNvcmQSPQoPbXV0YXRpb25f",
            "cmVjb3JkGAsgASgLMiQuZ29vZ2xlLm1vbml0b3JpbmcudjMuTXV0YXRpb25S",
            "ZWNvcmQSRwoOYWxlcnRfc3RyYXRlZ3kYFSABKAsyLy5nb29nbGUubW9uaXRv",
            "cmluZy52My5BbGVydFBvbGljeS5BbGVydFN0cmF0ZWd5EkEKCHNldmVyaXR5",
            "GBYgASgOMiouZ29vZ2xlLm1vbml0b3JpbmcudjMuQWxlcnRQb2xpY3kuU2V2",
            "ZXJpdHlCA+BBARpJCg1Eb2N1bWVudGF0aW9uEg8KB2NvbnRlbnQYASABKAkS",
            "EQoJbWltZV90eXBlGAIgASgJEhQKB3N1YmplY3QYAyABKAlCA+BBARr3FQoJ",
            "Q29uZGl0aW9uEgwKBG5hbWUYDCABKAkSFAoMZGlzcGxheV9uYW1lGAYgASgJ",
            "EloKE2NvbmRpdGlvbl90aHJlc2hvbGQYASABKAsyOy5nb29nbGUubW9uaXRv",
            "cmluZy52My5BbGVydFBvbGljeS5Db25kaXRpb24uTWV0cmljVGhyZXNob2xk",
            "SAASVQoQY29uZGl0aW9uX2Fic2VudBgCIAEoCzI5Lmdvb2dsZS5tb25pdG9y",
            "aW5nLnYzLkFsZXJ0UG9saWN5LkNvbmRpdGlvbi5NZXRyaWNBYnNlbmNlSAAS",
            "VQoVY29uZGl0aW9uX21hdGNoZWRfbG9nGBQgASgLMjQuZ29vZ2xlLm1vbml0",
            "b3JpbmcudjMuQWxlcnRQb2xpY3kuQ29uZGl0aW9uLkxvZ01hdGNoSAASewoj",
            "Y29uZGl0aW9uX21vbml0b3JpbmdfcXVlcnlfbGFuZ3VhZ2UYEyABKAsyTC5n",
            "b29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeS5Db25kaXRpb24uTW9u",
            "aXRvcmluZ1F1ZXJ5TGFuZ3VhZ2VDb25kaXRpb25IABJ7CiNjb25kaXRpb25f",
            "cHJvbWV0aGV1c19xdWVyeV9sYW5ndWFnZRgVIAEoCzJMLmdvb2dsZS5tb25p",
            "dG9yaW5nLnYzLkFsZXJ0UG9saWN5LkNvbmRpdGlvbi5Qcm9tZXRoZXVzUXVl",
            "cnlMYW5ndWFnZUNvbmRpdGlvbkgAGjUKB1RyaWdnZXISDwoFY291bnQYASAB",
            "KAVIABIRCgdwZXJjZW50GAIgASgBSABCBgoEdHlwZRqeBQoPTWV0cmljVGhy",
            "ZXNob2xkEhMKBmZpbHRlchgCIAEoCUID4EECEjcKDGFnZ3JlZ2F0aW9ucxgI",
            "IAMoCzIhLmdvb2dsZS5tb25pdG9yaW5nLnYzLkFnZ3JlZ2F0aW9uEhoKEmRl",
            "bm9taW5hdG9yX2ZpbHRlchgJIAEoCRJDChhkZW5vbWluYXRvcl9hZ2dyZWdh",
            "dGlvbnMYCiADKAsyIS5nb29nbGUubW9uaXRvcmluZy52My5BZ2dyZWdhdGlv",
            "bhJlChBmb3JlY2FzdF9vcHRpb25zGAwgASgLMksuZ29vZ2xlLm1vbml0b3Jp",
            "bmcudjMuQWxlcnRQb2xpY3kuQ29uZGl0aW9uLk1ldHJpY1RocmVzaG9sZC5G",
            "b3JlY2FzdE9wdGlvbnMSOAoKY29tcGFyaXNvbhgEIAEoDjIkLmdvb2dsZS5t",
            "b25pdG9yaW5nLnYzLkNvbXBhcmlzb25UeXBlEhcKD3RocmVzaG9sZF92YWx1",
            "ZRgFIAEoARIrCghkdXJhdGlvbhgGIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5E",
            "dXJhdGlvbhJECgd0cmlnZ2VyGAcgASgLMjMuZ29vZ2xlLm1vbml0b3Jpbmcu",
            "djMuQWxlcnRQb2xpY3kuQ29uZGl0aW9uLlRyaWdnZXISYgoXZXZhbHVhdGlv",
            "bl9taXNzaW5nX2RhdGEYCyABKA4yQS5nb29nbGUubW9uaXRvcmluZy52My5B",
            "bGVydFBvbGljeS5Db25kaXRpb24uRXZhbHVhdGlvbk1pc3NpbmdEYXRhGksK",
            "D0ZvcmVjYXN0T3B0aW9ucxI4ChBmb3JlY2FzdF9ob3Jpem9uGAEgASgLMhku",
            "Z29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uQgPgQQIa0AEKDU1ldHJpY0Fic2Vu",
            "Y2USEwoGZmlsdGVyGAEgASgJQgPgQQISNwoMYWdncmVnYXRpb25zGAUgAygL",
            "MiEuZ29vZ2xlLm1vbml0b3JpbmcudjMuQWdncmVnYXRpb24SKwoIZHVyYXRp",
            "b24YAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24SRAoHdHJpZ2dl",
            "chgDIAEoCzIzLmdvb2dsZS5tb25pdG9yaW5nLnYzLkFsZXJ0UG9saWN5LkNv",
            "bmRpdGlvbi5UcmlnZ2VyGrwBCghMb2dNYXRjaBITCgZmaWx0ZXIYASABKAlC",
            "A+BBAhJjChBsYWJlbF9leHRyYWN0b3JzGAIgAygLMkkuZ29vZ2xlLm1vbml0",
            "b3JpbmcudjMuQWxlcnRQb2xpY3kuQ29uZGl0aW9uLkxvZ01hdGNoLkxhYmVs",
            "RXh0cmFjdG9yc0VudHJ5GjYKFExhYmVsRXh0cmFjdG9yc0VudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEaiAIKIE1vbml0b3JpbmdRdWVy",
            "eUxhbmd1YWdlQ29uZGl0aW9uEg0KBXF1ZXJ5GAEgASgJEisKCGR1cmF0aW9u",
            "GAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEkQKB3RyaWdnZXIY",
            "AyABKAsyMy5nb29nbGUubW9uaXRvcmluZy52My5BbGVydFBvbGljeS5Db25k",
            "aXRpb24uVHJpZ2dlchJiChdldmFsdWF0aW9uX21pc3NpbmdfZGF0YRgEIAEo",
            "DjJBLmdvb2dsZS5tb25pdG9yaW5nLnYzLkFsZXJ0UG9saWN5LkNvbmRpdGlv",
            "bi5FdmFsdWF0aW9uTWlzc2luZ0RhdGEa9QIKIFByb21ldGhldXNRdWVyeUxh",
            "bmd1YWdlQ29uZGl0aW9uEhIKBXF1ZXJ5GAEgASgJQgPgQQISMAoIZHVyYXRp",
            "b24YAiABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25CA+BBARI7ChNl",
            "dmFsdWF0aW9uX2ludGVydmFsGAMgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1",
            "cmF0aW9uQgPgQQESbQoGbGFiZWxzGAQgAygLMlguZ29vZ2xlLm1vbml0b3Jp",
            "bmcudjMuQWxlcnRQb2xpY3kuQ29uZGl0aW9uLlByb21ldGhldXNRdWVyeUxh",
            "bmd1YWdlQ29uZGl0aW9uLkxhYmVsc0VudHJ5QgPgQQESFwoKcnVsZV9ncm91",
            "cBgFIAEoCUID4EEBEhcKCmFsZXJ0X3J1bGUYBiABKAlCA+BBARotCgtMYWJl",
            "bHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIq0BChVF",
            "dmFsdWF0aW9uTWlzc2luZ0RhdGESJwojRVZBTFVBVElPTl9NSVNTSU5HX0RB",
            "VEFfVU5TUEVDSUZJRUQQABIkCiBFVkFMVUFUSU9OX01JU1NJTkdfREFUQV9J",
            "TkFDVElWRRABEiIKHkVWQUxVQVRJT05fTUlTU0lOR19EQVRBX0FDVElWRRAC",
            "EiEKHUVWQUxVQVRJT05fTUlTU0lOR19EQVRBX05PX09QEAM6lwLqQZMCCi5t",
            "b25pdG9yaW5nLmdvb2dsZWFwaXMuY29tL0FsZXJ0UG9saWN5Q29uZGl0aW9u",
            "EkZwcm9qZWN0cy97cHJvamVjdH0vYWxlcnRQb2xpY2llcy97YWxlcnRfcG9s",
            "aWN5fS9jb25kaXRpb25zL3tjb25kaXRpb259ElBvcmdhbml6YXRpb25zL3tv",
            "cmdhbml6YXRpb259L2FsZXJ0UG9saWNpZXMve2FsZXJ0X3BvbGljeX0vY29u",
            "ZGl0aW9ucy97Y29uZGl0aW9ufRJEZm9sZGVycy97Zm9sZGVyfS9hbGVydFBv",
            "bGljaWVzL3thbGVydF9wb2xpY3l9L2NvbmRpdGlvbnMve2NvbmRpdGlvbn0S",
            "ASpCCwoJY29uZGl0aW9uGtcDCg1BbGVydFN0cmF0ZWd5EmYKF25vdGlmaWNh",
            "dGlvbl9yYXRlX2xpbWl0GAEgASgLMkUuZ29vZ2xlLm1vbml0b3JpbmcudjMu",
            "QWxlcnRQb2xpY3kuQWxlcnRTdHJhdGVneS5Ob3RpZmljYXRpb25SYXRlTGlt",
            "aXQSLQoKYXV0b19jbG9zZRgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJh",
            "dGlvbhJyCh1ub3RpZmljYXRpb25fY2hhbm5lbF9zdHJhdGVneRgEIAMoCzJL",
            "Lmdvb2dsZS5tb25pdG9yaW5nLnYzLkFsZXJ0UG9saWN5LkFsZXJ0U3RyYXRl",
            "Z3kuTm90aWZpY2F0aW9uQ2hhbm5lbFN0cmF0ZWd5GkIKFU5vdGlmaWNhdGlv",
            "blJhdGVMaW1pdBIpCgZwZXJpb2QYASABKAsyGS5nb29nbGUucHJvdG9idWYu",
            "RHVyYXRpb24adwobTm90aWZpY2F0aW9uQ2hhbm5lbFN0cmF0ZWd5EiIKGm5v",
            "dGlmaWNhdGlvbl9jaGFubmVsX25hbWVzGAEgAygJEjQKEXJlbm90aWZ5X2lu",
            "dGVydmFsGAIgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uGjEKD1Vz",
            "ZXJMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "ImEKFUNvbmRpdGlvbkNvbWJpbmVyVHlwZRIXChNDT01CSU5FX1VOU1BFQ0lG",
            "SUVEEAASBwoDQU5EEAESBgoCT1IQAhIeChpBTkRfV0lUSF9NQVRDSElOR19S",
            "RVNPVVJDRRADIkoKCFNldmVyaXR5EhgKFFNFVkVSSVRZX1VOU1BFQ0lGSUVE",
            "EAASDAoIQ1JJVElDQUwQARIJCgVFUlJPUhACEgsKB1dBUk5JTkcQAzrJAepB",
            "xQEKJW1vbml0b3JpbmcuZ29vZ2xlYXBpcy5jb20vQWxlcnRQb2xpY3kSL3By",
            "b2plY3RzL3twcm9qZWN0fS9hbGVydFBvbGljaWVzL3thbGVydF9wb2xpY3l9",
            "Ejlvcmdhbml6YXRpb25zL3tvcmdhbml6YXRpb259L2FsZXJ0UG9saWNpZXMv",
            "e2FsZXJ0X3BvbGljeX0SLWZvbGRlcnMve2ZvbGRlcn0vYWxlcnRQb2xpY2ll",
            "cy97YWxlcnRfcG9saWN5fRIBKkLFAQoYY29tLmdvb2dsZS5tb25pdG9yaW5n",
            "LnYzQgpBbGVydFByb3RvUAFaQWNsb3VkLmdvb2dsZS5jb20vZ28vbW9uaXRv",
            "cmluZy9hcGl2My92Mi9tb25pdG9yaW5ncGI7bW9uaXRvcmluZ3BiqgIaR29v",
            "Z2xlLkNsb3VkLk1vbml0b3JpbmcuVjPKAhpHb29nbGVcQ2xvdWRcTW9uaXRv",
            "cmluZ1xWM+oCHUdvb2dsZTo6Q2xvdWQ6Ok1vbml0b3Jpbmc6OlYzYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Monitoring.V3.CommonReflection.Descriptor, global::Google.Cloud.Monitoring.V3.MutationRecordReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy), global::Google.Cloud.Monitoring.V3.AlertPolicy.Parser, new[]{ "Name", "DisplayName", "Documentation", "UserLabels", "Conditions", "Combiner", "Enabled", "Validity", "NotificationChannels", "CreationRecord", "MutationRecord", "AlertStrategy", "Severity" }, null, new[]{ typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType), typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation.Parser, new[]{ "Content", "MimeType", "Subject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Parser, new[]{ "Name", "DisplayName", "ConditionThreshold", "ConditionAbsent", "ConditionMatchedLog", "ConditionMonitoringQueryLanguage", "ConditionPrometheusQueryLanguage" }, new[]{ "Condition" }, new[]{ typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger.Parser, new[]{ "Count", "Percent" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Parser, new[]{ "Filter", "Aggregations", "DenominatorFilter", "DenominatorAggregations", "ForecastOptions", "Comparison", "ThresholdValue", "Duration", "Trigger", "EvaluationMissingData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions.Parser, new[]{ "ForecastHorizon" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence.Parser, new[]{ "Filter", "Aggregations", "Duration", "Trigger" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch.Parser, new[]{ "Filter", "LabelExtractors" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition.Parser, new[]{ "Query", "Duration", "Trigger", "EvaluationMissingData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition.Parser, new[]{ "Query", "Duration", "EvaluationInterval", "Labels", "RuleGroup", "AlertRule" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Parser, new[]{ "NotificationRateLimit", "AutoClose", "NotificationChannelStrategy" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit.Parser, new[]{ "Period" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy), global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy.Parser, new[]{ "NotificationChannelNames", "RenotifyInterval" }, null, null, null, null)}),
            null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A description of the conditions under which some aspect of your system is
  /// considered to be "unhealthy" and the ways to notify people or services about
  /// this state. For an overview of alert policies, see
  /// [Introduction to Alerting](https://cloud.google.com/monitoring/alerts/).
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class AlertPolicy : pb::IMessage<AlertPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AlertPolicy> _parser = new pb::MessageParser<AlertPolicy>(() => new AlertPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AlertPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Monitoring.V3.AlertReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertPolicy(AlertPolicy other) : this() {
      name_ = other.name_;
      displayName_ = other.displayName_;
      documentation_ = other.documentation_ != null ? other.documentation_.Clone() : null;
      userLabels_ = other.userLabels_.Clone();
      conditions_ = other.conditions_.Clone();
      combiner_ = other.combiner_;
      Enabled = other.Enabled;
      validity_ = other.validity_ != null ? other.validity_.Clone() : null;
      notificationChannels_ = other.notificationChannels_.Clone();
      creationRecord_ = other.creationRecord_ != null ? other.creationRecord_.Clone() : null;
      mutationRecord_ = other.mutationRecord_ != null ? other.mutationRecord_.Clone() : null;
      alertStrategy_ = other.alertStrategy_ != null ? other.alertStrategy_.Clone() : null;
      severity_ = other.severity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AlertPolicy Clone() {
      return new AlertPolicy(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required if the policy exists. The resource name for this policy. The
    /// format is:
    ///
    ///     projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[ALERT_POLICY_ID]
    ///
    /// `[ALERT_POLICY_ID]` is assigned by Cloud Monitoring when the policy
    /// is created. When calling the
    /// [alertPolicies.create][google.monitoring.v3.AlertPolicyService.CreateAlertPolicy]
    /// method, do not include the `name` field in the alerting policy passed as
    /// part of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    /// <summary>
    /// A short name or phrase used to identify the policy in dashboards,
    /// notifications, and incidents. To avoid confusion, don't use the same
    /// display name for multiple policies in the same project. The name is
    /// limited to 512 Unicode characters.
    ///
    /// The convention for the display_name of a PrometheusQueryLanguageCondition
    /// is "{rule group name}/{alert name}", where the {rule group name} and
    /// {alert name} should be taken from the corresponding Prometheus
    /// configuration file. This convention is not enforced.
    /// In any case the display_name is not a unique key of the AlertPolicy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "documentation" field.</summary>
    public const int DocumentationFieldNumber = 13;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation documentation_;
    /// <summary>
    /// Documentation that is included with notifications and incidents related to
    /// this policy. Best practice is for the documentation to include information
    /// to help responders understand, mitigate, escalate, and correct the
    /// underlying problems detected by the alerting policy. Notification channels
    /// that have limited capacity might not show this documentation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation Documentation {
      get { return documentation_; }
      set {
        documentation_ = value;
      }
    }

    /// <summary>Field number for the "user_labels" field.</summary>
    public const int UserLabelsFieldNumber = 16;
    private static readonly pbc::MapField<string, string>.Codec _map_userLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 130);
    private readonly pbc::MapField<string, string> userLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// User-supplied key/value data to be used for organizing and
    /// identifying the `AlertPolicy` objects.
    ///
    /// The field can contain up to 64 entries. Each key and value is limited to
    /// 63 Unicode characters or 128 bytes, whichever is smaller. Labels and
    /// values can contain only lowercase letters, numerals, underscores, and
    /// dashes. Keys must begin with a letter.
    ///
    /// Note that Prometheus {alert name} is a
    /// [valid Prometheus label
    /// names](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels),
    /// whereas Prometheus {rule group} is an unrestricted UTF-8 string.
    /// This means that they cannot be stored as-is in user labels, because
    /// they may contain characters that are not allowed in user-label values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> UserLabels {
      get { return userLabels_; }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition> conditions_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition>();
    /// <summary>
    /// A list of conditions for the policy. The conditions are combined by AND or
    /// OR according to the `combiner` field. If the combined conditions evaluate
    /// to true, then an incident is created. A policy can have from one to six
    /// conditions.
    /// If `condition_time_series_query_language` is present, it must be the only
    /// `condition`.
    /// If `condition_monitoring_query_language` is present, it must be the only
    /// `condition`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "combiner" field.</summary>
    public const int CombinerFieldNumber = 6;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType combiner_ = global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified;
    /// <summary>
    /// How to combine the results of multiple conditions to determine if an
    /// incident should be opened.
    /// If `condition_time_series_query_language` is present, this must be
    /// `COMBINE_UNSPECIFIED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType Combiner {
      get { return combiner_; }
      set {
        combiner_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 17;
    private static readonly pb::FieldCodec<bool?> _single_enabled_codec = pb::FieldCodec.ForStructWrapper<bool>(138);
    private bool? enabled_;
    /// <summary>
    /// Whether or not the policy is enabled. On write, the default interpretation
    /// if unset is that the policy is enabled. On read, clients should not make
    /// any assumption about the state if it has not been populated. The
    /// field should always be populated on List and Get operations, unless
    /// a field projection has been specified that strips it out.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool? Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }


    /// <summary>Field number for the "validity" field.</summary>
    public const int ValidityFieldNumber = 18;
    private global::Google.Rpc.Status validity_;
    /// <summary>
    /// Read-only description of how the alert policy is invalid. This field is
    /// only set when the alert policy is invalid. An invalid alert policy will not
    /// generate incidents.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Rpc.Status Validity {
      get { return validity_; }
      set {
        validity_ = value;
      }
    }

    /// <summary>Field number for the "notification_channels" field.</summary>
    public const int NotificationChannelsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_notificationChannels_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> notificationChannels_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Identifies the notification channels to which notifications should be sent
    /// when incidents are opened or closed or when new violations occur on
    /// an already opened incident. Each element of this array corresponds to
    /// the `name` field in each of the
    /// [`NotificationChannel`][google.monitoring.v3.NotificationChannel]
    /// objects that are returned from the [`ListNotificationChannels`]
    /// [google.monitoring.v3.NotificationChannelService.ListNotificationChannels]
    /// method. The format of the entries in this field is:
    ///
    ///     projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> NotificationChannels {
      get { return notificationChannels_; }
    }

    /// <summary>Field number for the "creation_record" field.</summary>
    public const int CreationRecordFieldNumber = 10;
    private global::Google.Cloud.Monitoring.V3.MutationRecord creationRecord_;
    /// <summary>
    /// A read-only record of the creation of the alerting policy. If provided
    /// in a call to create or update, this field will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.MutationRecord CreationRecord {
      get { return creationRecord_; }
      set {
        creationRecord_ = value;
      }
    }

    /// <summary>Field number for the "mutation_record" field.</summary>
    public const int MutationRecordFieldNumber = 11;
    private global::Google.Cloud.Monitoring.V3.MutationRecord mutationRecord_;
    /// <summary>
    /// A read-only record of the most recent change to the alerting policy. If
    /// provided in a call to create or update, this field will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.MutationRecord MutationRecord {
      get { return mutationRecord_; }
      set {
        mutationRecord_ = value;
      }
    }

    /// <summary>Field number for the "alert_strategy" field.</summary>
    public const int AlertStrategyFieldNumber = 21;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy alertStrategy_;
    /// <summary>
    /// Control over how this alert policy's notification channels are notified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy AlertStrategy {
      get { return alertStrategy_; }
      set {
        alertStrategy_ = value;
      }
    }

    /// <summary>Field number for the "severity" field.</summary>
    public const int SeverityFieldNumber = 22;
    private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity severity_ = global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified;
    /// <summary>
    /// Optional. The severity of an alert policy indicates how important incidents
    /// generated by that policy are. The severity level will be displayed on the
    /// Incident detail page and in notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity Severity {
      get { return severity_; }
      set {
        severity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AlertPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AlertPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(Documentation, other.Documentation)) return false;
      if (!UserLabels.Equals(other.UserLabels)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      if (Combiner != other.Combiner) return false;
      if (Enabled != other.Enabled) return false;
      if (!object.Equals(Validity, other.Validity)) return false;
      if(!notificationChannels_.Equals(other.notificationChannels_)) return false;
      if (!object.Equals(CreationRecord, other.CreationRecord)) return false;
      if (!object.Equals(MutationRecord, other.MutationRecord)) return false;
      if (!object.Equals(AlertStrategy, other.AlertStrategy)) return false;
      if (Severity != other.Severity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (documentation_ != null) hash ^= Documentation.GetHashCode();
      hash ^= UserLabels.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (Combiner != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified) hash ^= Combiner.GetHashCode();
      if (enabled_ != null) hash ^= Enabled.GetHashCode();
      if (validity_ != null) hash ^= Validity.GetHashCode();
      hash ^= notificationChannels_.GetHashCode();
      if (creationRecord_ != null) hash ^= CreationRecord.GetHashCode();
      if (mutationRecord_ != null) hash ^= MutationRecord.GetHashCode();
      if (alertStrategy_ != null) hash ^= AlertStrategy.GetHashCode();
      if (Severity != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified) hash ^= Severity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Combiner != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Combiner);
      }
      if (creationRecord_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreationRecord);
      }
      if (mutationRecord_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(MutationRecord);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (documentation_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Documentation);
      }
      notificationChannels_.WriteTo(output, _repeated_notificationChannels_codec);
      userLabels_.WriteTo(output, _map_userLabels_codec);
      if (enabled_ != null) {
        _single_enabled_codec.WriteTagAndValue(output, Enabled);
      }
      if (validity_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Validity);
      }
      if (alertStrategy_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(AlertStrategy);
      }
      if (Severity != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Severity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Combiner != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Combiner);
      }
      if (creationRecord_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CreationRecord);
      }
      if (mutationRecord_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(MutationRecord);
      }
      conditions_.WriteTo(ref output, _repeated_conditions_codec);
      if (documentation_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Documentation);
      }
      notificationChannels_.WriteTo(ref output, _repeated_notificationChannels_codec);
      userLabels_.WriteTo(ref output, _map_userLabels_codec);
      if (enabled_ != null) {
        _single_enabled_codec.WriteTagAndValue(ref output, Enabled);
      }
      if (validity_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Validity);
      }
      if (alertStrategy_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(AlertStrategy);
      }
      if (Severity != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified) {
        output.WriteRawTag(176, 1);
        output.WriteEnum((int) Severity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (documentation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Documentation);
      }
      size += userLabels_.CalculateSize(_map_userLabels_codec);
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (Combiner != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Combiner);
      }
      if (enabled_ != null) {
        size += _single_enabled_codec.CalculateSizeWithTag(Enabled);
      }
      if (validity_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Validity);
      }
      size += notificationChannels_.CalculateSize(_repeated_notificationChannels_codec);
      if (creationRecord_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationRecord);
      }
      if (mutationRecord_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MutationRecord);
      }
      if (alertStrategy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AlertStrategy);
      }
      if (Severity != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Severity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AlertPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.documentation_ != null) {
        if (documentation_ == null) {
          Documentation = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation();
        }
        Documentation.MergeFrom(other.Documentation);
      }
      userLabels_.MergeFrom(other.userLabels_);
      conditions_.Add(other.conditions_);
      if (other.Combiner != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType.CombineUnspecified) {
        Combiner = other.Combiner;
      }
      if (other.enabled_ != null) {
        if (enabled_ == null || other.Enabled != false) {
          Enabled = other.Enabled;
        }
      }
      if (other.validity_ != null) {
        if (validity_ == null) {
          Validity = new global::Google.Rpc.Status();
        }
        Validity.MergeFrom(other.Validity);
      }
      notificationChannels_.Add(other.notificationChannels_);
      if (other.creationRecord_ != null) {
        if (creationRecord_ == null) {
          CreationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
        }
        CreationRecord.MergeFrom(other.CreationRecord);
      }
      if (other.mutationRecord_ != null) {
        if (mutationRecord_ == null) {
          MutationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
        }
        MutationRecord.MergeFrom(other.MutationRecord);
      }
      if (other.alertStrategy_ != null) {
        if (alertStrategy_ == null) {
          AlertStrategy = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy();
        }
        AlertStrategy.MergeFrom(other.AlertStrategy);
      }
      if (other.Severity != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity.Unspecified) {
        Severity = other.Severity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 48: {
            Combiner = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType) input.ReadEnum();
            break;
          }
          case 82: {
            if (creationRecord_ == null) {
              CreationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
            }
            input.ReadMessage(CreationRecord);
            break;
          }
          case 90: {
            if (mutationRecord_ == null) {
              MutationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
            }
            input.ReadMessage(MutationRecord);
            break;
          }
          case 98: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
          case 106: {
            if (documentation_ == null) {
              Documentation = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation();
            }
            input.ReadMessage(Documentation);
            break;
          }
          case 114: {
            notificationChannels_.AddEntriesFrom(input, _repeated_notificationChannels_codec);
            break;
          }
          case 130: {
            userLabels_.AddEntriesFrom(input, _map_userLabels_codec);
            break;
          }
          case 138: {
            bool? value = _single_enabled_codec.Read(input);
            if (enabled_ == null || value != false) {
              Enabled = value;
            }
            break;
          }
          case 146: {
            if (validity_ == null) {
              Validity = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Validity);
            break;
          }
          case 170: {
            if (alertStrategy_ == null) {
              AlertStrategy = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy();
            }
            input.ReadMessage(AlertStrategy);
            break;
          }
          case 176: {
            Severity = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 48: {
            Combiner = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.ConditionCombinerType) input.ReadEnum();
            break;
          }
          case 82: {
            if (creationRecord_ == null) {
              CreationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
            }
            input.ReadMessage(CreationRecord);
            break;
          }
          case 90: {
            if (mutationRecord_ == null) {
              MutationRecord = new global::Google.Cloud.Monitoring.V3.MutationRecord();
            }
            input.ReadMessage(MutationRecord);
            break;
          }
          case 98: {
            conditions_.AddEntriesFrom(ref input, _repeated_conditions_codec);
            break;
          }
          case 106: {
            if (documentation_ == null) {
              Documentation = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Documentation();
            }
            input.ReadMessage(Documentation);
            break;
          }
          case 114: {
            notificationChannels_.AddEntriesFrom(ref input, _repeated_notificationChannels_codec);
            break;
          }
          case 130: {
            userLabels_.AddEntriesFrom(ref input, _map_userLabels_codec);
            break;
          }
          case 138: {
            bool? value = _single_enabled_codec.Read(ref input);
            if (enabled_ == null || value != false) {
              Enabled = value;
            }
            break;
          }
          case 146: {
            if (validity_ == null) {
              Validity = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Validity);
            break;
          }
          case 170: {
            if (alertStrategy_ == null) {
              AlertStrategy = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy();
            }
            input.ReadMessage(AlertStrategy);
            break;
          }
          case 176: {
            Severity = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Severity) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AlertPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Operators for combining conditions.
      /// </summary>
      public enum ConditionCombinerType {
        /// <summary>
        /// An unspecified combiner.
        /// </summary>
        [pbr::OriginalName("COMBINE_UNSPECIFIED")] CombineUnspecified = 0,
        /// <summary>
        /// Combine conditions using the logical `AND` operator. An
        /// incident is created only if all the conditions are met
        /// simultaneously. This combiner is satisfied if all conditions are
        /// met, even if they are met on completely different resources.
        /// </summary>
        [pbr::OriginalName("AND")] And = 1,
        /// <summary>
        /// Combine conditions using the logical `OR` operator. An incident
        /// is created if any of the listed conditions is met.
        /// </summary>
        [pbr::OriginalName("OR")] Or = 2,
        /// <summary>
        /// Combine conditions using logical `AND` operator, but unlike the regular
        /// `AND` option, an incident is created only if all conditions are met
        /// simultaneously on at least one resource.
        /// </summary>
        [pbr::OriginalName("AND_WITH_MATCHING_RESOURCE")] AndWithMatchingResource = 3,
      }

      /// <summary>
      /// An enumeration of possible severity level for an Alert Policy.
      /// </summary>
      public enum Severity {
        /// <summary>
        /// No severity is specified. This is the default value.
        /// </summary>
        [pbr::OriginalName("SEVERITY_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// This is the highest severity level. Use this if the problem could
        /// cause significant damage or downtime.
        /// </summary>
        [pbr::OriginalName("CRITICAL")] Critical = 1,
        /// <summary>
        /// This is the medium severity level. Use this if the problem could
        /// cause minor damage or downtime.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 2,
        /// <summary>
        /// This is the lowest severity level. Use this if the problem is not causing
        /// any damage or downtime, but could potentially lead to a problem in the
        /// future.
        /// </summary>
        [pbr::OriginalName("WARNING")] Warning = 3,
      }

      /// <summary>
      /// A content string and a MIME type that describes the content string's
      /// format.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Documentation : pb::IMessage<Documentation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Documentation> _parser = new pb::MessageParser<Documentation>(() => new Documentation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Documentation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Documentation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Documentation(Documentation other) : this() {
          content_ = other.content_;
          mimeType_ = other.mimeType_;
          subject_ = other.subject_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Documentation Clone() {
          return new Documentation(this);
        }

        /// <summary>Field number for the "content" field.</summary>
        public const int ContentFieldNumber = 1;
        private string content_ = "";
        /// <summary>
        /// The body of the documentation, interpreted according to `mime_type`.
        /// The content may not exceed 8,192 Unicode characters and may not exceed
        /// more than 10,240 bytes when encoded in UTF-8 format, whichever is
        /// smaller. This text can be [templatized by using
        /// variables](https://cloud.google.com/monitoring/alerts/doc-variables).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Content {
          get { return content_; }
          set {
            content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "mime_type" field.</summary>
        public const int MimeTypeFieldNumber = 2;
        private string mimeType_ = "";
        /// <summary>
        /// The format of the `content` field. Presently, only the value
        /// `"text/markdown"` is supported. See
        /// [Markdown](https://en.wikipedia.org/wiki/Markdown) for more information.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string MimeType {
          get { return mimeType_; }
          set {
            mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "subject" field.</summary>
        public const int SubjectFieldNumber = 3;
        private string subject_ = "";
        /// <summary>
        /// Optional. The subject line of the notification. The subject line may not
        /// exceed 10,240 bytes. In notifications generated by this policy, the
        /// contents of the subject line after variable expansion will be truncated
        /// to 255 bytes or shorter at the latest UTF-8 character boundary. The
        /// 255-byte limit is recommended by [this
        /// thread](https://stackoverflow.com/questions/1592291/what-is-the-email-subject-length-limit).
        /// It is both the limit imposed by some third-party ticketing products and
        /// it is common to define textual fields in databases as VARCHAR(255).
        ///
        /// The contents of the subject line can be [templatized by using
        /// variables](https://cloud.google.com/monitoring/alerts/doc-variables).
        /// If this field is missing or empty, a default subject line will be
        /// generated.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Subject {
          get { return subject_; }
          set {
            subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Documentation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Documentation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Content != other.Content) return false;
          if (MimeType != other.MimeType) return false;
          if (Subject != other.Subject) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Content.Length != 0) hash ^= Content.GetHashCode();
          if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
          if (Subject.Length != 0) hash ^= Subject.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Content.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Content);
          }
          if (MimeType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MimeType);
          }
          if (Subject.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Subject);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Content.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Content);
          }
          if (MimeType.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(MimeType);
          }
          if (Subject.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Subject);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Content.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
          }
          if (MimeType.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
          }
          if (Subject.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Documentation other) {
          if (other == null) {
            return;
          }
          if (other.Content.Length != 0) {
            Content = other.Content;
          }
          if (other.MimeType.Length != 0) {
            MimeType = other.MimeType;
          }
          if (other.Subject.Length != 0) {
            Subject = other.Subject;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Content = input.ReadString();
                break;
              }
              case 18: {
                MimeType = input.ReadString();
                break;
              }
              case 26: {
                Subject = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Content = input.ReadString();
                break;
              }
              case 18: {
                MimeType = input.ReadString();
                break;
              }
              case 26: {
                Subject = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// A condition is a true/false test that determines when an alerting policy
      /// should open an incident. If a condition evaluates to true, it signifies
      /// that something is wrong.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Condition : pb::IMessage<Condition>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Condition> _parser = new pb::MessageParser<Condition>(() => new Condition());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Condition> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Condition() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Condition(Condition other) : this() {
          name_ = other.name_;
          displayName_ = other.displayName_;
          switch (other.ConditionCase) {
            case ConditionOneofCase.ConditionThreshold:
              ConditionThreshold = other.ConditionThreshold.Clone();
              break;
            case ConditionOneofCase.ConditionAbsent:
              ConditionAbsent = other.ConditionAbsent.Clone();
              break;
            case ConditionOneofCase.ConditionMatchedLog:
              ConditionMatchedLog = other.ConditionMatchedLog.Clone();
              break;
            case ConditionOneofCase.ConditionMonitoringQueryLanguage:
              ConditionMonitoringQueryLanguage = other.ConditionMonitoringQueryLanguage.Clone();
              break;
            case ConditionOneofCase.ConditionPrometheusQueryLanguage:
              ConditionPrometheusQueryLanguage = other.ConditionPrometheusQueryLanguage.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Condition Clone() {
          return new Condition(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 12;
        private string name_ = "";
        /// <summary>
        /// Required if the condition exists. The unique resource name for this
        /// condition. Its format is:
        ///
        ///     projects/[PROJECT_ID_OR_NUMBER]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
        ///
        /// `[CONDITION_ID]` is assigned by Cloud Monitoring when the
        /// condition is created as part of a new or updated alerting policy.
        ///
        /// When calling the
        /// [alertPolicies.create][google.monitoring.v3.AlertPolicyService.CreateAlertPolicy]
        /// method, do not include the `name` field in the conditions of the
        /// requested alerting policy. Cloud Monitoring creates the
        /// condition identifiers and includes them in the new policy.
        ///
        /// When calling the
        /// [alertPolicies.update][google.monitoring.v3.AlertPolicyService.UpdateAlertPolicy]
        /// method to update a policy, including a condition `name` causes the
        /// existing condition to be updated. Conditions without names are added to
        /// the updated policy. Existing conditions are deleted if they are not
        /// updated.
        ///
        /// Best practice is to preserve `[CONDITION_ID]` if you make only small
        /// changes, such as those to condition thresholds, durations, or trigger
        /// values.  Otherwise, treat the change as a new condition and let the
        /// existing condition be deleted.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 6;
        private string displayName_ = "";
        /// <summary>
        /// A short name or phrase used to identify the condition in dashboards,
        /// notifications, and incidents. To avoid confusion, don't use the same
        /// display name for multiple conditions in the same policy.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "condition_threshold" field.</summary>
        public const int ConditionThresholdFieldNumber = 1;
        /// <summary>
        /// A condition that compares a time series against a threshold.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold ConditionThreshold {
          get { return conditionCase_ == ConditionOneofCase.ConditionThreshold ? (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold) condition_ : null; }
          set {
            condition_ = value;
            conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.ConditionThreshold;
          }
        }

        /// <summary>Field number for the "condition_absent" field.</summary>
        public const int ConditionAbsentFieldNumber = 2;
        /// <summary>
        /// A condition that checks that a time series continues to
        /// receive new data points.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence ConditionAbsent {
          get { return conditionCase_ == ConditionOneofCase.ConditionAbsent ? (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence) condition_ : null; }
          set {
            condition_ = value;
            conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.ConditionAbsent;
          }
        }

        /// <summary>Field number for the "condition_matched_log" field.</summary>
        public const int ConditionMatchedLogFieldNumber = 20;
        /// <summary>
        /// A condition that checks for log messages matching given constraints. If
        /// set, no other conditions can be present.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch ConditionMatchedLog {
          get { return conditionCase_ == ConditionOneofCase.ConditionMatchedLog ? (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch) condition_ : null; }
          set {
            condition_ = value;
            conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.ConditionMatchedLog;
          }
        }

        /// <summary>Field number for the "condition_monitoring_query_language" field.</summary>
        public const int ConditionMonitoringQueryLanguageFieldNumber = 19;
        /// <summary>
        /// A condition that uses the Monitoring Query Language to define
        /// alerts.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition ConditionMonitoringQueryLanguage {
          get { return conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage ? (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition) condition_ : null; }
          set {
            condition_ = value;
            conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.ConditionMonitoringQueryLanguage;
          }
        }

        /// <summary>Field number for the "condition_prometheus_query_language" field.</summary>
        public const int ConditionPrometheusQueryLanguageFieldNumber = 21;
        /// <summary>
        /// A condition that uses the Prometheus query language to define alerts.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition ConditionPrometheusQueryLanguage {
          get { return conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage ? (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition) condition_ : null; }
          set {
            condition_ = value;
            conditionCase_ = value == null ? ConditionOneofCase.None : ConditionOneofCase.ConditionPrometheusQueryLanguage;
          }
        }

        private object condition_;
        /// <summary>Enum of possible cases for the "condition" oneof.</summary>
        public enum ConditionOneofCase {
          None = 0,
          ConditionThreshold = 1,
          ConditionAbsent = 2,
          ConditionMatchedLog = 20,
          ConditionMonitoringQueryLanguage = 19,
          ConditionPrometheusQueryLanguage = 21,
        }
        private ConditionOneofCase conditionCase_ = ConditionOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ConditionOneofCase ConditionCase {
          get { return conditionCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCondition() {
          conditionCase_ = ConditionOneofCase.None;
          condition_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Condition);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Condition other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (DisplayName != other.DisplayName) return false;
          if (!object.Equals(ConditionThreshold, other.ConditionThreshold)) return false;
          if (!object.Equals(ConditionAbsent, other.ConditionAbsent)) return false;
          if (!object.Equals(ConditionMatchedLog, other.ConditionMatchedLog)) return false;
          if (!object.Equals(ConditionMonitoringQueryLanguage, other.ConditionMonitoringQueryLanguage)) return false;
          if (!object.Equals(ConditionPrometheusQueryLanguage, other.ConditionPrometheusQueryLanguage)) return false;
          if (ConditionCase != other.ConditionCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
          if (conditionCase_ == ConditionOneofCase.ConditionThreshold) hash ^= ConditionThreshold.GetHashCode();
          if (conditionCase_ == ConditionOneofCase.ConditionAbsent) hash ^= ConditionAbsent.GetHashCode();
          if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) hash ^= ConditionMatchedLog.GetHashCode();
          if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) hash ^= ConditionMonitoringQueryLanguage.GetHashCode();
          if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) hash ^= ConditionPrometheusQueryLanguage.GetHashCode();
          hash ^= (int) conditionCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (conditionCase_ == ConditionOneofCase.ConditionThreshold) {
            output.WriteRawTag(10);
            output.WriteMessage(ConditionThreshold);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionAbsent) {
            output.WriteRawTag(18);
            output.WriteMessage(ConditionAbsent);
          }
          if (DisplayName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DisplayName);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Name);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(ConditionMonitoringQueryLanguage);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(ConditionMatchedLog);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(ConditionPrometheusQueryLanguage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (conditionCase_ == ConditionOneofCase.ConditionThreshold) {
            output.WriteRawTag(10);
            output.WriteMessage(ConditionThreshold);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionAbsent) {
            output.WriteRawTag(18);
            output.WriteMessage(ConditionAbsent);
          }
          if (DisplayName.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DisplayName);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(98);
            output.WriteString(Name);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) {
            output.WriteRawTag(154, 1);
            output.WriteMessage(ConditionMonitoringQueryLanguage);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) {
            output.WriteRawTag(162, 1);
            output.WriteMessage(ConditionMatchedLog);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) {
            output.WriteRawTag(170, 1);
            output.WriteMessage(ConditionPrometheusQueryLanguage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (DisplayName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionThreshold) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConditionThreshold);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionAbsent) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConditionAbsent);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConditionMatchedLog);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConditionMonitoringQueryLanguage);
          }
          if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConditionPrometheusQueryLanguage);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Condition other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.DisplayName.Length != 0) {
            DisplayName = other.DisplayName;
          }
          switch (other.ConditionCase) {
            case ConditionOneofCase.ConditionThreshold:
              if (ConditionThreshold == null) {
                ConditionThreshold = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold();
              }
              ConditionThreshold.MergeFrom(other.ConditionThreshold);
              break;
            case ConditionOneofCase.ConditionAbsent:
              if (ConditionAbsent == null) {
                ConditionAbsent = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence();
              }
              ConditionAbsent.MergeFrom(other.ConditionAbsent);
              break;
            case ConditionOneofCase.ConditionMatchedLog:
              if (ConditionMatchedLog == null) {
                ConditionMatchedLog = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch();
              }
              ConditionMatchedLog.MergeFrom(other.ConditionMatchedLog);
              break;
            case ConditionOneofCase.ConditionMonitoringQueryLanguage:
              if (ConditionMonitoringQueryLanguage == null) {
                ConditionMonitoringQueryLanguage = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition();
              }
              ConditionMonitoringQueryLanguage.MergeFrom(other.ConditionMonitoringQueryLanguage);
              break;
            case ConditionOneofCase.ConditionPrometheusQueryLanguage:
              if (ConditionPrometheusQueryLanguage == null) {
                ConditionPrometheusQueryLanguage = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition();
              }
              ConditionPrometheusQueryLanguage.MergeFrom(other.ConditionPrometheusQueryLanguage);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold();
                if (conditionCase_ == ConditionOneofCase.ConditionThreshold) {
                  subBuilder.MergeFrom(ConditionThreshold);
                }
                input.ReadMessage(subBuilder);
                ConditionThreshold = subBuilder;
                break;
              }
              case 18: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence();
                if (conditionCase_ == ConditionOneofCase.ConditionAbsent) {
                  subBuilder.MergeFrom(ConditionAbsent);
                }
                input.ReadMessage(subBuilder);
                ConditionAbsent = subBuilder;
                break;
              }
              case 50: {
                DisplayName = input.ReadString();
                break;
              }
              case 98: {
                Name = input.ReadString();
                break;
              }
              case 154: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition();
                if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) {
                  subBuilder.MergeFrom(ConditionMonitoringQueryLanguage);
                }
                input.ReadMessage(subBuilder);
                ConditionMonitoringQueryLanguage = subBuilder;
                break;
              }
              case 162: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch();
                if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) {
                  subBuilder.MergeFrom(ConditionMatchedLog);
                }
                input.ReadMessage(subBuilder);
                ConditionMatchedLog = subBuilder;
                break;
              }
              case 170: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition();
                if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) {
                  subBuilder.MergeFrom(ConditionPrometheusQueryLanguage);
                }
                input.ReadMessage(subBuilder);
                ConditionPrometheusQueryLanguage = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold();
                if (conditionCase_ == ConditionOneofCase.ConditionThreshold) {
                  subBuilder.MergeFrom(ConditionThreshold);
                }
                input.ReadMessage(subBuilder);
                ConditionThreshold = subBuilder;
                break;
              }
              case 18: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricAbsence();
                if (conditionCase_ == ConditionOneofCase.ConditionAbsent) {
                  subBuilder.MergeFrom(ConditionAbsent);
                }
                input.ReadMessage(subBuilder);
                ConditionAbsent = subBuilder;
                break;
              }
              case 50: {
                DisplayName = input.ReadString();
                break;
              }
              case 98: {
                Name = input.ReadString();
                break;
              }
              case 154: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MonitoringQueryLanguageCondition();
                if (conditionCase_ == ConditionOneofCase.ConditionMonitoringQueryLanguage) {
                  subBuilder.MergeFrom(ConditionMonitoringQueryLanguage);
                }
                input.ReadMessage(subBuilder);
                ConditionMonitoringQueryLanguage = subBuilder;
                break;
              }
              case 162: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.LogMatch();
                if (conditionCase_ == ConditionOneofCase.ConditionMatchedLog) {
                  subBuilder.MergeFrom(ConditionMatchedLog);
                }
                input.ReadMessage(subBuilder);
                ConditionMatchedLog = subBuilder;
                break;
              }
              case 170: {
                global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition subBuilder = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.PrometheusQueryLanguageCondition();
                if (conditionCase_ == ConditionOneofCase.ConditionPrometheusQueryLanguage) {
                  subBuilder.MergeFrom(ConditionPrometheusQueryLanguage);
                }
                input.ReadMessage(subBuilder);
                ConditionPrometheusQueryLanguage = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Condition message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// A condition control that determines how metric-threshold conditions
          /// are evaluated when data stops arriving.
          /// This control doesn't affect metric-absence policies.
          /// </summary>
          public enum EvaluationMissingData {
            /// <summary>
            /// An unspecified evaluation missing data option.  Equivalent to
            /// EVALUATION_MISSING_DATA_NO_OP.
            /// </summary>
            [pbr::OriginalName("EVALUATION_MISSING_DATA_UNSPECIFIED")] Unspecified = 0,
            /// <summary>
            /// If there is no data to evaluate the condition, then evaluate the
            /// condition as false.
            /// </summary>
            [pbr::OriginalName("EVALUATION_MISSING_DATA_INACTIVE")] Inactive = 1,
            /// <summary>
            /// If there is no data to evaluate the condition, then evaluate the
            /// condition as true.
            /// </summary>
            [pbr::OriginalName("EVALUATION_MISSING_DATA_ACTIVE")] Active = 2,
            /// <summary>
            /// Do not evaluate the condition to any value if there is no data.
            /// </summary>
            [pbr::OriginalName("EVALUATION_MISSING_DATA_NO_OP")] NoOp = 3,
          }

          /// <summary>
          /// Specifies how many time series must fail a predicate to trigger a
          /// condition. If not specified, then a `{count: 1}` trigger is used.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Trigger : pb::IMessage<Trigger>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Trigger> _parser = new pb::MessageParser<Trigger>(() => new Trigger());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Trigger> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Trigger() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Trigger(Trigger other) : this() {
              switch (other.TypeCase) {
                case TypeOneofCase.Count:
                  Count = other.Count;
                  break;
                case TypeOneofCase.Percent:
                  Percent = other.Percent;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Trigger Clone() {
              return new Trigger(this);
            }

            /// <summary>Field number for the "count" field.</summary>
            public const int CountFieldNumber = 1;
            /// <summary>
            /// The absolute number of time series that must fail
            /// the predicate for the condition to be triggered.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int Count {
              get { return HasCount ? (int) type_ : 0; }
              set {
                type_ = value;
                typeCase_ = TypeOneofCase.Count;
              }
            }
            /// <summary>Gets whether the "count" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasCount {
              get { return typeCase_ == TypeOneofCase.Count; }
            }
            /// <summary> Clears the value of the oneof if it's currently set to "count" </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearCount() {
              if (HasCount) {
                ClearType();
              }
            }

            /// <summary>Field number for the "percent" field.</summary>
            public const int PercentFieldNumber = 2;
            /// <summary>
            /// The percentage of time series that must fail the
            /// predicate for the condition to be triggered.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double Percent {
              get { return HasPercent ? (double) type_ : 0D; }
              set {
                type_ = value;
                typeCase_ = TypeOneofCase.Percent;
              }
            }
            /// <summary>Gets whether the "percent" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool HasPercent {
              get { return typeCase_ == TypeOneofCase.Percent; }
            }
            /// <summary> Clears the value of the oneof if it's currently set to "percent" </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearPercent() {
              if (HasPercent) {
                ClearType();
              }
            }

            private object type_;
            /// <summary>Enum of possible cases for the "type" oneof.</summary>
            public enum TypeOneofCase {
              None = 0,
              Count = 1,
              Percent = 2,
            }
            private TypeOneofCase typeCase_ = TypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public TypeOneofCase TypeCase {
              get { return typeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void ClearType() {
              typeCase_ = TypeOneofCase.None;
              type_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Trigger);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Trigger other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Count != other.Count) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Percent, other.Percent)) return false;
              if (TypeCase != other.TypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (HasCount) hash ^= Count.GetHashCode();
              if (HasPercent) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Percent);
              hash ^= (int) typeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasCount) {
                output.WriteRawTag(8);
                output.WriteInt32(Count);
              }
              if (HasPercent) {
                output.WriteRawTag(17);
                output.WriteDouble(Percent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasCount) {
                output.WriteRawTag(8);
                output.WriteInt32(Count);
              }
              if (HasPercent) {
                output.WriteRawTag(17);
                output.WriteDouble(Percent);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (HasCount) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
              }
              if (HasPercent) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Trigger other) {
              if (other == null) {
                return;
              }
              switch (other.TypeCase) {
                case TypeOneofCase.Count:
                  Count = other.Count;
                  break;
                case TypeOneofCase.Percent:
                  Percent = other.Percent;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Count = input.ReadInt32();
                    break;
                  }
                  case 17: {
                    Percent = input.ReadDouble();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Count = input.ReadInt32();
                    break;
                  }
                  case 17: {
                    Percent = input.ReadDouble();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A condition type that compares a collection of time series
          /// against a threshold.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MetricThreshold : pb::IMessage<MetricThreshold>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricThreshold> _parser = new pb::MessageParser<MetricThreshold>(() => new MetricThreshold());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricThreshold> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricThreshold() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricThreshold(MetricThreshold other) : this() {
              filter_ = other.filter_;
              aggregations_ = other.aggregations_.Clone();
              denominatorFilter_ = other.denominatorFilter_;
              denominatorAggregations_ = other.denominatorAggregations_.Clone();
              forecastOptions_ = other.forecastOptions_ != null ? other.forecastOptions_.Clone() : null;
              comparison_ = other.comparison_;
              thresholdValue_ = other.thresholdValue_;
              duration_ = other.duration_ != null ? other.duration_.Clone() : null;
              trigger_ = other.trigger_ != null ? other.trigger_.Clone() : null;
              evaluationMissingData_ = other.evaluationMissingData_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricThreshold Clone() {
              return new MetricThreshold(this);
            }

            /// <summary>Field number for the "filter" field.</summary>
            public const int FilterFieldNumber = 2;
            private string filter_ = "";
            /// <summary>
            /// Required. A
            /// [filter](https://cloud.google.com/monitoring/api/v3/filters) that
            /// identifies which time series should be compared with the threshold.
            ///
            /// The filter is similar to the one that is specified in the
            /// [`ListTimeSeries`
            /// request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)
            /// (that call is useful to verify the time series that will be retrieved /
            /// processed). The filter must specify the metric type and the resource
            /// type. Optionally, it can specify resource labels and metric labels.
            /// This field must not exceed 2048 Unicode characters in length.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Filter {
              get { return filter_; }
              set {
                filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "aggregations" field.</summary>
            public const int AggregationsFieldNumber = 8;
            private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.Aggregation> _repeated_aggregations_codec
                = pb::FieldCodec.ForMessage(66, global::Google.Cloud.Monitoring.V3.Aggregation.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> aggregations_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation>();
            /// <summary>
            /// Specifies the alignment of data points in individual time series as
            /// well as how to combine the retrieved time series together (such as
            /// when aggregating multiple streams on each resource to a single
            /// stream for each resource or when aggregating streams across all
            /// members of a group of resources). Multiple aggregations
            /// are applied in the order specified.
            ///
            /// This field is similar to the one in the [`ListTimeSeries`
            /// request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
            /// It is advisable to use the `ListTimeSeries` method when debugging this
            /// field.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> Aggregations {
              get { return aggregations_; }
            }

            /// <summary>Field number for the "denominator_filter" field.</summary>
            public const int DenominatorFilterFieldNumber = 9;
            private string denominatorFilter_ = "";
            /// <summary>
            /// A [filter](https://cloud.google.com/monitoring/api/v3/filters) that
            /// identifies a time series that should be used as the denominator of a
            /// ratio that will be compared with the threshold. If a
            /// `denominator_filter` is specified, the time series specified by the
            /// `filter` field will be used as the numerator.
            ///
            /// The filter must specify the metric type and optionally may contain
            /// restrictions on resource type, resource labels, and metric labels.
            /// This field may not exceed 2048 Unicode characters in length.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string DenominatorFilter {
              get { return denominatorFilter_; }
              set {
                denominatorFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "denominator_aggregations" field.</summary>
            public const int DenominatorAggregationsFieldNumber = 10;
            private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.Aggregation> _repeated_denominatorAggregations_codec
                = pb::FieldCodec.ForMessage(82, global::Google.Cloud.Monitoring.V3.Aggregation.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> denominatorAggregations_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation>();
            /// <summary>
            /// Specifies the alignment of data points in individual time series
            /// selected by `denominatorFilter` as
            /// well as how to combine the retrieved time series together (such as
            /// when aggregating multiple streams on each resource to a single
            /// stream for each resource or when aggregating streams across all
            /// members of a group of resources).
            ///
            /// When computing ratios, the `aggregations` and
            /// `denominator_aggregations` fields must use the same alignment period
            /// and produce time series that have the same periodicity and labels.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> DenominatorAggregations {
              get { return denominatorAggregations_; }
            }

            /// <summary>Field number for the "forecast_options" field.</summary>
            public const int ForecastOptionsFieldNumber = 12;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions forecastOptions_;
            /// <summary>
            /// When this field is present, the `MetricThreshold` condition forecasts
            /// whether the time series is predicted to violate the threshold within
            /// the `forecast_horizon`. When this field is not set, the
            /// `MetricThreshold` tests the current value of the timeseries against the
            /// threshold.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions ForecastOptions {
              get { return forecastOptions_; }
              set {
                forecastOptions_ = value;
              }
            }

            /// <summary>Field number for the "comparison" field.</summary>
            public const int ComparisonFieldNumber = 4;
            private global::Google.Cloud.Monitoring.V3.ComparisonType comparison_ = global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified;
            /// <summary>
            /// The comparison to apply between the time series (indicated by `filter`
            /// and `aggregation`) and the threshold (indicated by `threshold_value`).
            /// The comparison is applied on each time series, with the time series
            /// on the left-hand side and the threshold on the right-hand side.
            ///
            /// Only `COMPARISON_LT` and `COMPARISON_GT` are supported currently.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.ComparisonType Comparison {
              get { return comparison_; }
              set {
                comparison_ = value;
              }
            }

            /// <summary>Field number for the "threshold_value" field.</summary>
            public const int ThresholdValueFieldNumber = 5;
            private double thresholdValue_;
            /// <summary>
            /// A value against which to compare the time series.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public double ThresholdValue {
              get { return thresholdValue_; }
              set {
                thresholdValue_ = value;
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 6;
            private global::Google.Protobuf.WellKnownTypes.Duration duration_;
            /// <summary>
            /// The amount of time that a time series must violate the
            /// threshold to be considered failing. Currently, only values
            /// that are a multiple of a minute--e.g., 0, 60, 120, or 300
            /// seconds--are supported. If an invalid value is given, an
            /// error will be returned. When choosing a duration, it is useful to
            /// keep in mind the frequency of the underlying time series data
            /// (which may also be affected by any alignments specified in the
            /// `aggregations` field); a good duration is long enough so that a single
            /// outlier does not generate spurious alerts, but short enough that
            /// unhealthy states are detected and alerted on quickly.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "trigger" field.</summary>
            public const int TriggerFieldNumber = 7;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger trigger_;
            /// <summary>
            /// The number/percent of time series for which the comparison must hold
            /// in order for the condition to trigger. If unspecified, then the
            /// condition will trigger if the comparison is true for any of the
            /// time series that have been identified by `filter` and `aggregations`,
            /// or by the ratio, if `denominator_filter` and `denominator_aggregations`
            /// are specified.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger Trigger {
              get { return trigger_; }
              set {
                trigger_ = value;
              }
            }

            /// <summary>Field number for the "evaluation_missing_data" field.</summary>
            public const int EvaluationMissingDataFieldNumber = 11;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData evaluationMissingData_ = global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified;
            /// <summary>
            /// A condition control that determines how metric-threshold conditions
            /// are evaluated when data stops arriving.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData EvaluationMissingData {
              get { return evaluationMissingData_; }
              set {
                evaluationMissingData_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricThreshold);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricThreshold other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Filter != other.Filter) return false;
              if(!aggregations_.Equals(other.aggregations_)) return false;
              if (DenominatorFilter != other.DenominatorFilter) return false;
              if(!denominatorAggregations_.Equals(other.denominatorAggregations_)) return false;
              if (!object.Equals(ForecastOptions, other.ForecastOptions)) return false;
              if (Comparison != other.Comparison) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ThresholdValue, other.ThresholdValue)) return false;
              if (!object.Equals(Duration, other.Duration)) return false;
              if (!object.Equals(Trigger, other.Trigger)) return false;
              if (EvaluationMissingData != other.EvaluationMissingData) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Filter.Length != 0) hash ^= Filter.GetHashCode();
              hash ^= aggregations_.GetHashCode();
              if (DenominatorFilter.Length != 0) hash ^= DenominatorFilter.GetHashCode();
              hash ^= denominatorAggregations_.GetHashCode();
              if (forecastOptions_ != null) hash ^= ForecastOptions.GetHashCode();
              if (Comparison != global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified) hash ^= Comparison.GetHashCode();
              if (ThresholdValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ThresholdValue);
              if (duration_ != null) hash ^= Duration.GetHashCode();
              if (trigger_ != null) hash ^= Trigger.GetHashCode();
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) hash ^= EvaluationMissingData.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Filter.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Filter);
              }
              if (Comparison != global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Comparison);
              }
              if (ThresholdValue != 0D) {
                output.WriteRawTag(41);
                output.WriteDouble(ThresholdValue);
              }
              if (duration_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(58);
                output.WriteMessage(Trigger);
              }
              aggregations_.WriteTo(output, _repeated_aggregations_codec);
              if (DenominatorFilter.Length != 0) {
                output.WriteRawTag(74);
                output.WriteString(DenominatorFilter);
              }
              denominatorAggregations_.WriteTo(output, _repeated_denominatorAggregations_codec);
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                output.WriteRawTag(88);
                output.WriteEnum((int) EvaluationMissingData);
              }
              if (forecastOptions_ != null) {
                output.WriteRawTag(98);
                output.WriteMessage(ForecastOptions);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Filter.Length != 0) {
                output.WriteRawTag(18);
                output.WriteString(Filter);
              }
              if (Comparison != global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) Comparison);
              }
              if (ThresholdValue != 0D) {
                output.WriteRawTag(41);
                output.WriteDouble(ThresholdValue);
              }
              if (duration_ != null) {
                output.WriteRawTag(50);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(58);
                output.WriteMessage(Trigger);
              }
              aggregations_.WriteTo(ref output, _repeated_aggregations_codec);
              if (DenominatorFilter.Length != 0) {
                output.WriteRawTag(74);
                output.WriteString(DenominatorFilter);
              }
              denominatorAggregations_.WriteTo(ref output, _repeated_denominatorAggregations_codec);
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                output.WriteRawTag(88);
                output.WriteEnum((int) EvaluationMissingData);
              }
              if (forecastOptions_ != null) {
                output.WriteRawTag(98);
                output.WriteMessage(ForecastOptions);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Filter.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
              }
              size += aggregations_.CalculateSize(_repeated_aggregations_codec);
              if (DenominatorFilter.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DenominatorFilter);
              }
              size += denominatorAggregations_.CalculateSize(_repeated_denominatorAggregations_codec);
              if (forecastOptions_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForecastOptions);
              }
              if (Comparison != global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Comparison);
              }
              if (ThresholdValue != 0D) {
                size += 1 + 8;
              }
              if (duration_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
              }
              if (trigger_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trigger);
              }
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EvaluationMissingData);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricThreshold other) {
              if (other == null) {
                return;
              }
              if (other.Filter.Length != 0) {
                Filter = other.Filter;
              }
              aggregations_.Add(other.aggregations_);
              if (other.DenominatorFilter.Length != 0) {
                DenominatorFilter = other.DenominatorFilter;
              }
              denominatorAggregations_.Add(other.denominatorAggregations_);
              if (other.forecastOptions_ != null) {
                if (forecastOptions_ == null) {
                  ForecastOptions = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions();
                }
                ForecastOptions.MergeFrom(other.ForecastOptions);
              }
              if (other.Comparison != global::Google.Cloud.Monitoring.V3.ComparisonType.ComparisonUnspecified) {
                Comparison = other.Comparison;
              }
              if (other.ThresholdValue != 0D) {
                ThresholdValue = other.ThresholdValue;
              }
              if (other.duration_ != null) {
                if (duration_ == null) {
                  Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                Duration.MergeFrom(other.Duration);
              }
              if (other.trigger_ != null) {
                if (trigger_ == null) {
                  Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                }
                Trigger.MergeFrom(other.Trigger);
              }
              if (other.EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                EvaluationMissingData = other.EvaluationMissingData;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 18: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 32: {
                    Comparison = (global::Google.Cloud.Monitoring.V3.ComparisonType) input.ReadEnum();
                    break;
                  }
                  case 41: {
                    ThresholdValue = input.ReadDouble();
                    break;
                  }
                  case 50: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 58: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 66: {
                    aggregations_.AddEntriesFrom(input, _repeated_aggregations_codec);
                    break;
                  }
                  case 74: {
                    DenominatorFilter = input.ReadString();
                    break;
                  }
                  case 82: {
                    denominatorAggregations_.AddEntriesFrom(input, _repeated_denominatorAggregations_codec);
                    break;
                  }
                  case 88: {
                    EvaluationMissingData = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData) input.ReadEnum();
                    break;
                  }
                  case 98: {
                    if (forecastOptions_ == null) {
                      ForecastOptions = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions();
                    }
                    input.ReadMessage(ForecastOptions);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 18: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 32: {
                    Comparison = (global::Google.Cloud.Monitoring.V3.ComparisonType) input.ReadEnum();
                    break;
                  }
                  case 41: {
                    ThresholdValue = input.ReadDouble();
                    break;
                  }
                  case 50: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 58: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 66: {
                    aggregations_.AddEntriesFrom(ref input, _repeated_aggregations_codec);
                    break;
                  }
                  case 74: {
                    DenominatorFilter = input.ReadString();
                    break;
                  }
                  case 82: {
                    denominatorAggregations_.AddEntriesFrom(ref input, _repeated_denominatorAggregations_codec);
                    break;
                  }
                  case 88: {
                    EvaluationMissingData = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData) input.ReadEnum();
                    break;
                  }
                  case 98: {
                    if (forecastOptions_ == null) {
                      ForecastOptions = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Types.ForecastOptions();
                    }
                    input.ReadMessage(ForecastOptions);
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the MetricThreshold message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static partial class Types {
              /// <summary>
              /// Options used when forecasting the time series and testing
              /// the predicted value against the threshold.
              /// </summary>
              [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
              public sealed partial class ForecastOptions : pb::IMessage<ForecastOptions>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ForecastOptions> _parser = new pb::MessageParser<ForecastOptions>(() => new ForecastOptions());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pb::MessageParser<ForecastOptions> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.MetricThreshold.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ForecastOptions() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ForecastOptions(ForecastOptions other) : this() {
                  forecastHorizon_ = other.forecastHorizon_ != null ? other.forecastHorizon_.Clone() : null;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public ForecastOptions Clone() {
                  return new ForecastOptions(this);
                }

                /// <summary>Field number for the "forecast_horizon" field.</summary>
                public const int ForecastHorizonFieldNumber = 1;
                private global::Google.Protobuf.WellKnownTypes.Duration forecastHorizon_;
                /// <summary>
                /// Required. The length of time into the future to forecast whether a
                /// time series will violate the threshold. If the predicted value is
                /// found to violate the threshold, and the violation is observed in all
                /// forecasts made for the configured `duration`, then the time series is
                /// considered to be failing.
                /// The forecast horizon can range from 1 hour to 60 hours.
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public global::Google.Protobuf.WellKnownTypes.Duration ForecastHorizon {
                  get { return forecastHorizon_; }
                  set {
                    forecastHorizon_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override bool Equals(object other) {
                  return Equals(other as ForecastOptions);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public bool Equals(ForecastOptions other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (!object.Equals(ForecastHorizon, other.ForecastHorizon)) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override int GetHashCode() {
                  int hash = 1;
                  if (forecastHorizon_ != null) hash ^= ForecastHorizon.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (forecastHorizon_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ForecastHorizon);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (forecastHorizon_ != null) {
                    output.WriteRawTag(10);
                    output.WriteMessage(ForecastHorizon);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public int CalculateSize() {
                  int size = 0;
                  if (forecastHorizon_ != null) {
                    size += 1 + pb::CodedOutputStream.ComputeMessageSize(ForecastHorizon);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(ForecastOptions other) {
                  if (other == null) {
                    return;
                  }
                  if (other.forecastHorizon_ != null) {
                    if (forecastHorizon_ == null) {
                      ForecastHorizon = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    ForecastHorizon.MergeFrom(other.ForecastHorizon);
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 10: {
                        if (forecastHorizon_ == null) {
                          ForecastHorizon = new global::Google.Protobuf.WellKnownTypes.Duration();
                        }
                        input.ReadMessage(ForecastHorizon);
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 10: {
                        if (forecastHorizon_ == null) {
                          ForecastHorizon = new global::Google.Protobuf.WellKnownTypes.Duration();
                        }
                        input.ReadMessage(ForecastHorizon);
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

          /// <summary>
          /// A condition type that checks that monitored resources
          /// are reporting data. The configuration defines a metric and
          /// a set of monitored resources. The predicate is considered in violation
          /// when a time series for the specified metric of a monitored
          /// resource does not include any data in the specified `duration`.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MetricAbsence : pb::IMessage<MetricAbsence>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MetricAbsence> _parser = new pb::MessageParser<MetricAbsence>(() => new MetricAbsence());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MetricAbsence> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricAbsence() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricAbsence(MetricAbsence other) : this() {
              filter_ = other.filter_;
              aggregations_ = other.aggregations_.Clone();
              duration_ = other.duration_ != null ? other.duration_.Clone() : null;
              trigger_ = other.trigger_ != null ? other.trigger_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MetricAbsence Clone() {
              return new MetricAbsence(this);
            }

            /// <summary>Field number for the "filter" field.</summary>
            public const int FilterFieldNumber = 1;
            private string filter_ = "";
            /// <summary>
            /// Required. A
            /// [filter](https://cloud.google.com/monitoring/api/v3/filters) that
            /// identifies which time series should be compared with the threshold.
            ///
            /// The filter is similar to the one that is specified in the
            /// [`ListTimeSeries`
            /// request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list)
            /// (that call is useful to verify the time series that will be retrieved /
            /// processed). The filter must specify the metric type and the resource
            /// type. Optionally, it can specify resource labels and metric labels.
            /// This field must not exceed 2048 Unicode characters in length.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Filter {
              get { return filter_; }
              set {
                filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "aggregations" field.</summary>
            public const int AggregationsFieldNumber = 5;
            private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.Aggregation> _repeated_aggregations_codec
                = pb::FieldCodec.ForMessage(42, global::Google.Cloud.Monitoring.V3.Aggregation.Parser);
            private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> aggregations_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation>();
            /// <summary>
            /// Specifies the alignment of data points in individual time series as
            /// well as how to combine the retrieved time series together (such as
            /// when aggregating multiple streams on each resource to a single
            /// stream for each resource or when aggregating streams across all
            /// members of a group of resources). Multiple aggregations
            /// are applied in the order specified.
            ///
            /// This field is similar to the one in the [`ListTimeSeries`
            /// request](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.timeSeries/list).
            /// It is advisable to use the `ListTimeSeries` method when debugging this
            /// field.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.Aggregation> Aggregations {
              get { return aggregations_; }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private global::Google.Protobuf.WellKnownTypes.Duration duration_;
            /// <summary>
            /// The amount of time that a time series must fail to report new
            /// data to be considered failing. The minimum value of this field
            /// is 120 seconds. Larger values that are a multiple of a
            /// minute--for example, 240 or 300 seconds--are supported.
            /// If an invalid value is given, an
            /// error will be returned. The `Duration.nanos` field is
            /// ignored.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "trigger" field.</summary>
            public const int TriggerFieldNumber = 3;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger trigger_;
            /// <summary>
            /// The number/percent of time series for which the comparison must hold
            /// in order for the condition to trigger. If unspecified, then the
            /// condition will trigger if the comparison is true for any of the
            /// time series that have been identified by `filter` and `aggregations`.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger Trigger {
              get { return trigger_; }
              set {
                trigger_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MetricAbsence);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MetricAbsence other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Filter != other.Filter) return false;
              if(!aggregations_.Equals(other.aggregations_)) return false;
              if (!object.Equals(Duration, other.Duration)) return false;
              if (!object.Equals(Trigger, other.Trigger)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Filter.Length != 0) hash ^= Filter.GetHashCode();
              hash ^= aggregations_.GetHashCode();
              if (duration_ != null) hash ^= Duration.GetHashCode();
              if (trigger_ != null) hash ^= Trigger.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Filter.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Filter);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Trigger);
              }
              aggregations_.WriteTo(output, _repeated_aggregations_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Filter.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Filter);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Trigger);
              }
              aggregations_.WriteTo(ref output, _repeated_aggregations_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Filter.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
              }
              size += aggregations_.CalculateSize(_repeated_aggregations_codec);
              if (duration_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
              }
              if (trigger_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trigger);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MetricAbsence other) {
              if (other == null) {
                return;
              }
              if (other.Filter.Length != 0) {
                Filter = other.Filter;
              }
              aggregations_.Add(other.aggregations_);
              if (other.duration_ != null) {
                if (duration_ == null) {
                  Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                Duration.MergeFrom(other.Duration);
              }
              if (other.trigger_ != null) {
                if (trigger_ == null) {
                  Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                }
                Trigger.MergeFrom(other.Trigger);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 42: {
                    aggregations_.AddEntriesFrom(input, _repeated_aggregations_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 42: {
                    aggregations_.AddEntriesFrom(ref input, _repeated_aggregations_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A condition type that checks whether a log message in the [scoping
          /// project](https://cloud.google.com/monitoring/api/v3#project_name)
          /// satisfies the given filter. Logs from other projects in the metrics
          /// scope are not evaluated.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class LogMatch : pb::IMessage<LogMatch>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<LogMatch> _parser = new pb::MessageParser<LogMatch>(() => new LogMatch());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<LogMatch> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public LogMatch() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public LogMatch(LogMatch other) : this() {
              filter_ = other.filter_;
              labelExtractors_ = other.labelExtractors_.Clone();
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public LogMatch Clone() {
              return new LogMatch(this);
            }

            /// <summary>Field number for the "filter" field.</summary>
            public const int FilterFieldNumber = 1;
            private string filter_ = "";
            /// <summary>
            /// Required. A logs-based filter. See [Advanced Logs
            /// Queries](https://cloud.google.com/logging/docs/view/advanced-queries)
            /// for how this filter should be constructed.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Filter {
              get { return filter_; }
              set {
                filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "label_extractors" field.</summary>
            public const int LabelExtractorsFieldNumber = 2;
            private static readonly pbc::MapField<string, string>.Codec _map_labelExtractors_codec
                = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
            private readonly pbc::MapField<string, string> labelExtractors_ = new pbc::MapField<string, string>();
            /// <summary>
            /// Optional. A map from a label key to an extractor expression, which is
            /// used to extract the value for this label key. Each entry in this map is
            /// a specification for how data should be extracted from log entries that
            /// match `filter`. Each combination of extracted values is treated as a
            /// separate rule for the purposes of triggering notifications. Label keys
            /// and corresponding values can be used in notifications generated by this
            /// condition.
            ///
            /// Please see [the documentation on logs-based metric
            /// `valueExtractor`s](https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects.metrics#LogMetric.FIELDS.value_extractor)
            /// for syntax and examples.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::MapField<string, string> LabelExtractors {
              get { return labelExtractors_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as LogMatch);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(LogMatch other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Filter != other.Filter) return false;
              if (!LabelExtractors.Equals(other.LabelExtractors)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Filter.Length != 0) hash ^= Filter.GetHashCode();
              hash ^= LabelExtractors.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Filter.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Filter);
              }
              labelExtractors_.WriteTo(output, _map_labelExtractors_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Filter.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Filter);
              }
              labelExtractors_.WriteTo(ref output, _map_labelExtractors_codec);
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Filter.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
              }
              size += labelExtractors_.CalculateSize(_map_labelExtractors_codec);
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(LogMatch other) {
              if (other == null) {
                return;
              }
              if (other.Filter.Length != 0) {
                Filter = other.Filter;
              }
              labelExtractors_.MergeFrom(other.labelExtractors_);
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 18: {
                    labelExtractors_.AddEntriesFrom(input, _map_labelExtractors_codec);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Filter = input.ReadString();
                    break;
                  }
                  case 18: {
                    labelExtractors_.AddEntriesFrom(ref input, _map_labelExtractors_codec);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A condition type that allows alert policies to be defined using
          /// [Monitoring Query Language](https://cloud.google.com/monitoring/mql).
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class MonitoringQueryLanguageCondition : pb::IMessage<MonitoringQueryLanguageCondition>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MonitoringQueryLanguageCondition> _parser = new pb::MessageParser<MonitoringQueryLanguageCondition>(() => new MonitoringQueryLanguageCondition());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<MonitoringQueryLanguageCondition> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MonitoringQueryLanguageCondition() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MonitoringQueryLanguageCondition(MonitoringQueryLanguageCondition other) : this() {
              query_ = other.query_;
              duration_ = other.duration_ != null ? other.duration_.Clone() : null;
              trigger_ = other.trigger_ != null ? other.trigger_.Clone() : null;
              evaluationMissingData_ = other.evaluationMissingData_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public MonitoringQueryLanguageCondition Clone() {
              return new MonitoringQueryLanguageCondition(this);
            }

            /// <summary>Field number for the "query" field.</summary>
            public const int QueryFieldNumber = 1;
            private string query_ = "";
            /// <summary>
            /// [Monitoring Query Language](https://cloud.google.com/monitoring/mql)
            /// query that outputs a boolean stream.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Query {
              get { return query_; }
              set {
                query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private global::Google.Protobuf.WellKnownTypes.Duration duration_;
            /// <summary>
            /// The amount of time that a time series must violate the
            /// threshold to be considered failing. Currently, only values
            /// that are a multiple of a minute--e.g., 0, 60, 120, or 300
            /// seconds--are supported. If an invalid value is given, an
            /// error will be returned. When choosing a duration, it is useful to
            /// keep in mind the frequency of the underlying time series data
            /// (which may also be affected by any alignments specified in the
            /// `aggregations` field); a good duration is long enough so that a single
            /// outlier does not generate spurious alerts, but short enough that
            /// unhealthy states are detected and alerted on quickly.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "trigger" field.</summary>
            public const int TriggerFieldNumber = 3;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger trigger_;
            /// <summary>
            /// The number/percent of time series for which the comparison must hold
            /// in order for the condition to trigger. If unspecified, then the
            /// condition will trigger if the comparison is true for any of the
            /// time series that have been identified by `filter` and `aggregations`,
            /// or by the ratio, if `denominator_filter` and `denominator_aggregations`
            /// are specified.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger Trigger {
              get { return trigger_; }
              set {
                trigger_ = value;
              }
            }

            /// <summary>Field number for the "evaluation_missing_data" field.</summary>
            public const int EvaluationMissingDataFieldNumber = 4;
            private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData evaluationMissingData_ = global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified;
            /// <summary>
            /// A condition control that determines how metric-threshold conditions
            /// are evaluated when data stops arriving.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData EvaluationMissingData {
              get { return evaluationMissingData_; }
              set {
                evaluationMissingData_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as MonitoringQueryLanguageCondition);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(MonitoringQueryLanguageCondition other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Query != other.Query) return false;
              if (!object.Equals(Duration, other.Duration)) return false;
              if (!object.Equals(Trigger, other.Trigger)) return false;
              if (EvaluationMissingData != other.EvaluationMissingData) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Query.Length != 0) hash ^= Query.GetHashCode();
              if (duration_ != null) hash ^= Duration.GetHashCode();
              if (trigger_ != null) hash ^= Trigger.GetHashCode();
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) hash ^= EvaluationMissingData.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Query.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Query);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Trigger);
              }
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) EvaluationMissingData);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Query.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Query);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (trigger_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(Trigger);
              }
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                output.WriteRawTag(32);
                output.WriteEnum((int) EvaluationMissingData);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Query.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
              }
              if (duration_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
              }
              if (trigger_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trigger);
              }
              if (EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EvaluationMissingData);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(MonitoringQueryLanguageCondition other) {
              if (other == null) {
                return;
              }
              if (other.Query.Length != 0) {
                Query = other.Query;
              }
              if (other.duration_ != null) {
                if (duration_ == null) {
                  Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                Duration.MergeFrom(other.Duration);
              }
              if (other.trigger_ != null) {
                if (trigger_ == null) {
                  Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                }
                Trigger.MergeFrom(other.Trigger);
              }
              if (other.EvaluationMissingData != global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData.Unspecified) {
                EvaluationMissingData = other.EvaluationMissingData;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Query = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 32: {
                    EvaluationMissingData = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Query = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (trigger_ == null) {
                      Trigger = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.Trigger();
                    }
                    input.ReadMessage(Trigger);
                    break;
                  }
                  case 32: {
                    EvaluationMissingData = (global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Types.EvaluationMissingData) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// A condition type that allows alert policies to be defined using
          /// [Prometheus Query Language
          /// (PromQL)](https://prometheus.io/docs/prometheus/latest/querying/basics/).
          ///
          /// The PrometheusQueryLanguageCondition message contains information
          /// from a Prometheus alerting rule and its associated rule group.
          ///
          /// A Prometheus alerting rule is described
          /// [here](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/).
          /// The semantics of a Prometheus alerting rule is described
          /// [here](https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#rule).
          ///
          /// A Prometheus rule group is described
          /// [here](https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/).
          /// The semantics of a Prometheus rule group is described
          /// [here](https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/#rule_group).
          ///
          /// Because Cloud Alerting has no representation of a Prometheus rule
          /// group resource, we must embed the information of the parent rule
          /// group inside each of the conditions that refer to it. We must also
          /// update the contents of all Prometheus alerts in case the information
          /// of their rule group changes.
          ///
          /// The PrometheusQueryLanguageCondition protocol buffer combines the
          /// information of the corresponding rule group and alerting rule.
          /// The structure of the PrometheusQueryLanguageCondition protocol buffer
          /// does NOT mimic the structure of the Prometheus rule group and alerting
          /// rule YAML declarations. The PrometheusQueryLanguageCondition protocol
          /// buffer may change in the future to support future rule group and/or
          /// alerting rule features. There are no new such features at the present
          /// time (2023-06-26).
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class PrometheusQueryLanguageCondition : pb::IMessage<PrometheusQueryLanguageCondition>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<PrometheusQueryLanguageCondition> _parser = new pb::MessageParser<PrometheusQueryLanguageCondition>(() => new PrometheusQueryLanguageCondition());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<PrometheusQueryLanguageCondition> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.Condition.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public PrometheusQueryLanguageCondition() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public PrometheusQueryLanguageCondition(PrometheusQueryLanguageCondition other) : this() {
              query_ = other.query_;
              duration_ = other.duration_ != null ? other.duration_.Clone() : null;
              evaluationInterval_ = other.evaluationInterval_ != null ? other.evaluationInterval_.Clone() : null;
              labels_ = other.labels_.Clone();
              ruleGroup_ = other.ruleGroup_;
              alertRule_ = other.alertRule_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public PrometheusQueryLanguageCondition Clone() {
              return new PrometheusQueryLanguageCondition(this);
            }

            /// <summary>Field number for the "query" field.</summary>
            public const int QueryFieldNumber = 1;
            private string query_ = "";
            /// <summary>
            /// Required. The PromQL expression to evaluate. Every evaluation cycle
            /// this expression is evaluated at the current time, and all resultant
            /// time series become pending/firing alerts. This field must not be empty.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string Query {
              get { return query_; }
              set {
                query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "duration" field.</summary>
            public const int DurationFieldNumber = 2;
            private global::Google.Protobuf.WellKnownTypes.Duration duration_;
            /// <summary>
            /// Optional. Alerts are considered firing once their PromQL expression was
            /// evaluated to be "true" for this long.
            /// Alerts whose PromQL expression was not evaluated to be "true" for
            /// long enough are considered pending.
            /// Must be a non-negative duration or missing.
            /// This field is optional. Its default value is zero.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration Duration {
              get { return duration_; }
              set {
                duration_ = value;
              }
            }

            /// <summary>Field number for the "evaluation_interval" field.</summary>
            public const int EvaluationIntervalFieldNumber = 3;
            private global::Google.Protobuf.WellKnownTypes.Duration evaluationInterval_;
            /// <summary>
            /// Optional. How often this rule should be evaluated.
            /// Must be a positive multiple of 30 seconds or missing.
            /// This field is optional. Its default value is 30 seconds.
            /// If this PrometheusQueryLanguageCondition was generated from a
            /// Prometheus alerting rule, then this value should be taken from the
            /// enclosing rule group.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration EvaluationInterval {
              get { return evaluationInterval_; }
              set {
                evaluationInterval_ = value;
              }
            }

            /// <summary>Field number for the "labels" field.</summary>
            public const int LabelsFieldNumber = 4;
            private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
                = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
            private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
            /// <summary>
            /// Optional. Labels to add to or overwrite in the PromQL query result.
            /// Label names [must be
            /// valid](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
            /// Label values can be [templatized by using
            /// variables](https://cloud.google.com/monitoring/alerts/doc-variables).
            /// The only available variable names are the names of the labels in the
            /// PromQL result, including "__name__" and "value". "labels" may be empty.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::MapField<string, string> Labels {
              get { return labels_; }
            }

            /// <summary>Field number for the "rule_group" field.</summary>
            public const int RuleGroupFieldNumber = 5;
            private string ruleGroup_ = "";
            /// <summary>
            /// Optional. The rule group name of this alert in the corresponding
            /// Prometheus configuration file.
            ///
            /// Some external tools may require this field to be populated correctly
            /// in order to refer to the original Prometheus configuration file.
            /// The rule group name and the alert name are necessary to update the
            /// relevant AlertPolicies in case the definition of the rule group changes
            /// in the future.
            ///
            /// This field is optional. If this field is not empty, then it must
            /// contain a valid UTF-8 string.
            /// This field may not exceed 2048 Unicode characters in length.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string RuleGroup {
              get { return ruleGroup_; }
              set {
                ruleGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "alert_rule" field.</summary>
            public const int AlertRuleFieldNumber = 6;
            private string alertRule_ = "";
            /// <summary>
            /// Optional. The alerting rule name of this alert in the corresponding
            /// Prometheus configuration file.
            ///
            /// Some external tools may require this field to be populated correctly
            /// in order to refer to the original Prometheus configuration file.
            /// The rule group name and the alert name are necessary to update the
            /// relevant AlertPolicies in case the definition of the rule group changes
            /// in the future.
            ///
            /// This field is optional. If this field is not empty, then it must be a
            /// [valid Prometheus label
            /// name](https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels).
            /// This field may not exceed 2048 Unicode characters in length.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public string AlertRule {
              get { return alertRule_; }
              set {
                alertRule_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as PrometheusQueryLanguageCondition);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(PrometheusQueryLanguageCondition other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Query != other.Query) return false;
              if (!object.Equals(Duration, other.Duration)) return false;
              if (!object.Equals(EvaluationInterval, other.EvaluationInterval)) return false;
              if (!Labels.Equals(other.Labels)) return false;
              if (RuleGroup != other.RuleGroup) return false;
              if (AlertRule != other.AlertRule) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Query.Length != 0) hash ^= Query.GetHashCode();
              if (duration_ != null) hash ^= Duration.GetHashCode();
              if (evaluationInterval_ != null) hash ^= EvaluationInterval.GetHashCode();
              hash ^= Labels.GetHashCode();
              if (RuleGroup.Length != 0) hash ^= RuleGroup.GetHashCode();
              if (AlertRule.Length != 0) hash ^= AlertRule.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Query.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Query);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (evaluationInterval_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(EvaluationInterval);
              }
              labels_.WriteTo(output, _map_labels_codec);
              if (RuleGroup.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(RuleGroup);
              }
              if (AlertRule.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(AlertRule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Query.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Query);
              }
              if (duration_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Duration);
              }
              if (evaluationInterval_ != null) {
                output.WriteRawTag(26);
                output.WriteMessage(EvaluationInterval);
              }
              labels_.WriteTo(ref output, _map_labels_codec);
              if (RuleGroup.Length != 0) {
                output.WriteRawTag(42);
                output.WriteString(RuleGroup);
              }
              if (AlertRule.Length != 0) {
                output.WriteRawTag(50);
                output.WriteString(AlertRule);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Query.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
              }
              if (duration_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
              }
              if (evaluationInterval_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(EvaluationInterval);
              }
              size += labels_.CalculateSize(_map_labels_codec);
              if (RuleGroup.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(RuleGroup);
              }
              if (AlertRule.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(AlertRule);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(PrometheusQueryLanguageCondition other) {
              if (other == null) {
                return;
              }
              if (other.Query.Length != 0) {
                Query = other.Query;
              }
              if (other.duration_ != null) {
                if (duration_ == null) {
                  Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                Duration.MergeFrom(other.Duration);
              }
              if (other.evaluationInterval_ != null) {
                if (evaluationInterval_ == null) {
                  EvaluationInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                EvaluationInterval.MergeFrom(other.EvaluationInterval);
              }
              labels_.MergeFrom(other.labels_);
              if (other.RuleGroup.Length != 0) {
                RuleGroup = other.RuleGroup;
              }
              if (other.AlertRule.Length != 0) {
                AlertRule = other.AlertRule;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Query = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (evaluationInterval_ == null) {
                      EvaluationInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(EvaluationInterval);
                    break;
                  }
                  case 34: {
                    labels_.AddEntriesFrom(input, _map_labels_codec);
                    break;
                  }
                  case 42: {
                    RuleGroup = input.ReadString();
                    break;
                  }
                  case 50: {
                    AlertRule = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Query = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (duration_ == null) {
                      Duration = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Duration);
                    break;
                  }
                  case 26: {
                    if (evaluationInterval_ == null) {
                      EvaluationInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(EvaluationInterval);
                    break;
                  }
                  case 34: {
                    labels_.AddEntriesFrom(ref input, _map_labels_codec);
                    break;
                  }
                  case 42: {
                    RuleGroup = input.ReadString();
                    break;
                  }
                  case 50: {
                    AlertRule = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// Control over how the notification channels in `notification_channels`
      /// are notified when this alert fires.
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AlertStrategy : pb::IMessage<AlertStrategy>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AlertStrategy> _parser = new pb::MessageParser<AlertStrategy>(() => new AlertStrategy());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AlertStrategy> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlertStrategy() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlertStrategy(AlertStrategy other) : this() {
          notificationRateLimit_ = other.notificationRateLimit_ != null ? other.notificationRateLimit_.Clone() : null;
          autoClose_ = other.autoClose_ != null ? other.autoClose_.Clone() : null;
          notificationChannelStrategy_ = other.notificationChannelStrategy_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AlertStrategy Clone() {
          return new AlertStrategy(this);
        }

        /// <summary>Field number for the "notification_rate_limit" field.</summary>
        public const int NotificationRateLimitFieldNumber = 1;
        private global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit notificationRateLimit_;
        /// <summary>
        /// Required for alert policies with a `LogMatch` condition.
        ///
        /// This limit is not implemented for alert policies that are not log-based.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit NotificationRateLimit {
          get { return notificationRateLimit_; }
          set {
            notificationRateLimit_ = value;
          }
        }

        /// <summary>Field number for the "auto_close" field.</summary>
        public const int AutoCloseFieldNumber = 3;
        private global::Google.Protobuf.WellKnownTypes.Duration autoClose_;
        /// <summary>
        /// If an alert policy that was active has no data for this long, any open
        /// incidents will close
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Duration AutoClose {
          get { return autoClose_; }
          set {
            autoClose_ = value;
          }
        }

        /// <summary>Field number for the "notification_channel_strategy" field.</summary>
        public const int NotificationChannelStrategyFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy> _repeated_notificationChannelStrategy_codec
            = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy.Parser);
        private readonly pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy> notificationChannelStrategy_ = new pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy>();
        /// <summary>
        /// Control how notifications will be sent out, on a per-channel basis.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationChannelStrategy> NotificationChannelStrategy {
          get { return notificationChannelStrategy_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AlertStrategy);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AlertStrategy other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(NotificationRateLimit, other.NotificationRateLimit)) return false;
          if (!object.Equals(AutoClose, other.AutoClose)) return false;
          if(!notificationChannelStrategy_.Equals(other.notificationChannelStrategy_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (notificationRateLimit_ != null) hash ^= NotificationRateLimit.GetHashCode();
          if (autoClose_ != null) hash ^= AutoClose.GetHashCode();
          hash ^= notificationChannelStrategy_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (notificationRateLimit_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(NotificationRateLimit);
          }
          if (autoClose_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AutoClose);
          }
          notificationChannelStrategy_.WriteTo(output, _repeated_notificationChannelStrategy_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (notificationRateLimit_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(NotificationRateLimit);
          }
          if (autoClose_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(AutoClose);
          }
          notificationChannelStrategy_.WriteTo(ref output, _repeated_notificationChannelStrategy_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (notificationRateLimit_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationRateLimit);
          }
          if (autoClose_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoClose);
          }
          size += notificationChannelStrategy_.CalculateSize(_repeated_notificationChannelStrategy_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AlertStrategy other) {
          if (other == null) {
            return;
          }
          if (other.notificationRateLimit_ != null) {
            if (notificationRateLimit_ == null) {
              NotificationRateLimit = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit();
            }
            NotificationRateLimit.MergeFrom(other.NotificationRateLimit);
          }
          if (other.autoClose_ != null) {
            if (autoClose_ == null) {
              AutoClose = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            AutoClose.MergeFrom(other.AutoClose);
          }
          notificationChannelStrategy_.Add(other.notificationChannelStrategy_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (notificationRateLimit_ == null) {
                  NotificationRateLimit = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit();
                }
                input.ReadMessage(NotificationRateLimit);
                break;
              }
              case 26: {
                if (autoClose_ == null) {
                  AutoClose = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(AutoClose);
                break;
              }
              case 34: {
                notificationChannelStrategy_.AddEntriesFrom(input, _repeated_notificationChannelStrategy_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (notificationRateLimit_ == null) {
                  NotificationRateLimit = new global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Types.NotificationRateLimit();
                }
                input.ReadMessage(NotificationRateLimit);
                break;
              }
              case 26: {
                if (autoClose_ == null) {
                  AutoClose = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                input.ReadMessage(AutoClose);
                break;
              }
              case 34: {
                notificationChannelStrategy_.AddEntriesFrom(ref input, _repeated_notificationChannelStrategy_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the AlertStrategy message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Control over the rate of notifications sent to this alert policy's
          /// notification channels.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class NotificationRateLimit : pb::IMessage<NotificationRateLimit>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<NotificationRateLimit> _parser = new pb::MessageParser<NotificationRateLimit>(() => new NotificationRateLimit());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<NotificationRateLimit> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationRateLimit() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationRateLimit(NotificationRateLimit other) : this() {
              period_ = other.period_ != null ? other.period_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationRateLimit Clone() {
              return new NotificationRateLimit(this);
            }

            /// <summary>Field number for the "period" field.</summary>
            public const int PeriodFieldNumber = 1;
            private global::Google.Protobuf.WellKnownTypes.Duration period_;
            /// <summary>
            /// Not more than one notification per `period`.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration Period {
              get { return period_; }
              set {
                period_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as NotificationRateLimit);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(NotificationRateLimit other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Period, other.Period)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (period_ != null) hash ^= Period.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (period_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Period);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (period_ != null) {
                output.WriteRawTag(10);
                output.WriteMessage(Period);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (period_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Period);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(NotificationRateLimit other) {
              if (other == null) {
                return;
              }
              if (other.period_ != null) {
                if (period_ == null) {
                  Period = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                Period.MergeFrom(other.Period);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    if (period_ == null) {
                      Period = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Period);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    if (period_ == null) {
                      Period = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(Period);
                    break;
                  }
                }
              }
            }
            #endif

          }

          /// <summary>
          /// Control over how the notification channels in `notification_channels`
          /// are notified when this alert fires, on a per-channel basis.
          /// </summary>
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class NotificationChannelStrategy : pb::IMessage<NotificationChannelStrategy>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<NotificationChannelStrategy> _parser = new pb::MessageParser<NotificationChannelStrategy>(() => new NotificationChannelStrategy());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<NotificationChannelStrategy> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Google.Cloud.Monitoring.V3.AlertPolicy.Types.AlertStrategy.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationChannelStrategy() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationChannelStrategy(NotificationChannelStrategy other) : this() {
              notificationChannelNames_ = other.notificationChannelNames_.Clone();
              renotifyInterval_ = other.renotifyInterval_ != null ? other.renotifyInterval_.Clone() : null;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public NotificationChannelStrategy Clone() {
              return new NotificationChannelStrategy(this);
            }

            /// <summary>Field number for the "notification_channel_names" field.</summary>
            public const int NotificationChannelNamesFieldNumber = 1;
            private static readonly pb::FieldCodec<string> _repeated_notificationChannelNames_codec
                = pb::FieldCodec.ForString(10);
            private readonly pbc::RepeatedField<string> notificationChannelNames_ = new pbc::RepeatedField<string>();
            /// <summary>
            /// The full REST resource name for the notification channels that these
            /// settings apply to. Each of these correspond to the name field in one
            /// of the NotificationChannel objects referenced in the
            /// notification_channels field of this AlertPolicy.
            /// The format is:
            ///
            ///     projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public pbc::RepeatedField<string> NotificationChannelNames {
              get { return notificationChannelNames_; }
            }

            /// <summary>Field number for the "renotify_interval" field.</summary>
            public const int RenotifyIntervalFieldNumber = 2;
            private global::Google.Protobuf.WellKnownTypes.Duration renotifyInterval_;
            /// <summary>
            /// The frequency at which to send reminder notifications for open
            /// incidents.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Google.Protobuf.WellKnownTypes.Duration RenotifyInterval {
              get { return renotifyInterval_; }
              set {
                renotifyInterval_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as NotificationChannelStrategy);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(NotificationChannelStrategy other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if(!notificationChannelNames_.Equals(other.notificationChannelNames_)) return false;
              if (!object.Equals(RenotifyInterval, other.RenotifyInterval)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              hash ^= notificationChannelNames_.GetHashCode();
              if (renotifyInterval_ != null) hash ^= RenotifyInterval.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              notificationChannelNames_.WriteTo(output, _repeated_notificationChannelNames_codec);
              if (renotifyInterval_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(RenotifyInterval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              notificationChannelNames_.WriteTo(ref output, _repeated_notificationChannelNames_codec);
              if (renotifyInterval_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(RenotifyInterval);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              size += notificationChannelNames_.CalculateSize(_repeated_notificationChannelNames_codec);
              if (renotifyInterval_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(RenotifyInterval);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(NotificationChannelStrategy other) {
              if (other == null) {
                return;
              }
              notificationChannelNames_.Add(other.notificationChannelNames_);
              if (other.renotifyInterval_ != null) {
                if (renotifyInterval_ == null) {
                  RenotifyInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                }
                RenotifyInterval.MergeFrom(other.RenotifyInterval);
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    notificationChannelNames_.AddEntriesFrom(input, _repeated_notificationChannelNames_codec);
                    break;
                  }
                  case 18: {
                    if (renotifyInterval_ == null) {
                      RenotifyInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(RenotifyInterval);
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    notificationChannelNames_.AddEntriesFrom(ref input, _repeated_notificationChannelNames_codec);
                    break;
                  }
                  case 18: {
                    if (renotifyInterval_ == null) {
                      RenotifyInterval = new global::Google.Protobuf.WellKnownTypes.Duration();
                    }
                    input.ReadMessage(RenotifyInterval);
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
